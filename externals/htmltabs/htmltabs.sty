%%
%% This is file `htmltabs.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% htmltabs.dtx  (with options: `package')
%% 
%% IMPORTANT NOTICE:
%% 
%% For the copyright see the source file.
%% 
%% Any modified versions of this file must be renamed
%% with new filenames distinct from htmltabs.sty.
%% 
%% For distribution of the original source see the terms
%% for copying and modification in the file htmltabs.dtx.
%% 
%% This generated file may be distributed as long as the
%% original source files, as listed above, are part of the
%% same distribution. (The sources need not necessarily be
%% in the same archive or directory.)
\def\fileversion{0.3.4}%
\def\filedate{2024-09-09}%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{htmltabs}
    [\filedate\space\fileversion\space htmltabs]

\message{le-tex htmltabs package Version \fileversion\space (\filedate)^^J}
\RequirePackage{xkeyval}%
\def\DebugLevel#1{\message{^^J[htmltabs info] Debug-Level: #1^^J}\gdef\ht@debug@level{#1}}
\newif\if@ht@silent \@ht@silentfalse
\DeclareOptionX{loglvl}[info]{\DebugLevel{#1}}%
\DeclareOptionX{silent}{\@ht@silenttrue\message{^^J[htmltabs info] Silent mode. No more messages from me.^^J}}%
\DeclareOptionX{cssfile}{\gdef\ht@cssfile{#1}}%
\newif\if@ht@ally   \@ht@allyfalse
\DeclareOptionX{a11y}{\global\@ht@allytrue}%
\ProcessOptionsX*\relax
\@ifpackageloaded{coco-accessibility}{}
  {\if@ht@ally
      \PackageWarning{htmltabs.sty}
      {Accessibility features need coco-accessibility.sty loaded^^J
        before htmltabs.sty. All Tagging features will be disabled!}
   \fi
   \global\@ht@allyfalse
   \newif\if@cc@is@final\@cc@is@finaltrue
   \newcommand\ccaStructStart[2][]{}%
   \newcommand\ccaStructEnd[1]{}%
   \newcommand\ccaVstructStart[2][]{}%
   \newcommand\ccaVstructEnd[1]{}%
   \newcommand\ccaAddPlacement[1]{}%
   \newcommand\ccaAddScope[1]{}%
   \newcommand\ccaAddRolemap[2]{}%
   \newcommand\ccaAddToStruct[1]{}%
   \newcommand\ccaGetCurStruct[1]{}%
   \newcommand\ccaAddColSpan[1]{}%
   \newcommand\ccaAddRowSpan[1]{}%
   \newcommand\ccaReplaceStruct[1]{}%
   \newcommand\ccaAddToConfig[2]{}%
   \newcommand\ccaMoveStruct[1]{}%
   \newcommand\ccaAddKeep[1]{}%
   \let\ccaEnable\relax
   \let\ccaDisable\relax
 }%
\if@ht@silent
  \@ht@debugfalse
  \global\let\DebugLevel\@undefined
\else
  \ifx\ht@debug@level\@undefined
    \ExecuteOptionsX{loglvl=info}%
  \fi
\fi
\gdef\ht@no@config@warning{\ht@debugmsg{warning}{No class definition file given!}}
\ifx\ht@cssfile\@undefined\else
  \IfFileExists{\ht@cssfile}{%
    \gdef\ht@no@config@warning{\ht@infomsg{Using class definition file \ht@cssfile}}%
    \ifx\xmltexversion\@undefined
      \AtBeginDocument{\input \ht@cssfile}%
    \else
      \AtBeginDocument{\begingroup\XML@reset\input{\ht@cssfile}\endgroup}%
    \fi
  }{}
\fi
\AtBeginDocument{\ht@no@config@warning}

\def\convertMPtoPDF#1#2#3{}% prevents loading of supp-pdf.mkii, which causes problems with xmltex; thx to giovanni.
\RequirePackage{xcolor}
\RequirePackage{etoolbox}
\RequirePackage{expl3}
\def\includeDTX#1{\input src/#1.dtx}

\let\m@name\relax
\long\def\ht@Iterate#1#2#3#4{% #1=counter; #2=beg; #3=end; #4=instructions
  \advance#1\@ne\relax
  #1=#2\relax%
  \let\next\relax
  \expandafter\ifnum#1>#3\relax%
  \else
    #4%
    \def\next{\ht@Iterate{#1}{\the#1}{#3}{#4}}%
  \fi\next}%
\long\def\ht@rIterate#1#2#3{% #1=counter; #2=beg; #3=instructions
  \let\next\relax
  \expandafter\ifnum#1>\z@\relax%
    #3%
    \advance#1\m@ne\relax
    \def\next{\ht@rIterate{#1}{\the#1}{#3}}%
  \fi\next}%

\def\CalcRatio#1#2{\strip@pt\dimexpr\number\numexpr\number\dimexpr#1\relax*65536/\number\dimexpr#2\relax\relax sp}
\def\ht@count@args#1{\@ht@count@args#1 \@nil}
\def\@ht@count@args#1 #2\@nil{%
  \if!#1!\else
    \global\advance\ht@tempcnta\@ne%
    \expandafter\edef\csname ht@val@\the\ht@tempcnta\endcsname{\expandonce{#1}}%
    \ifx\@argii\space\else\if!#2!\else\ht@count@args{#2}\fi\fi\fi}%
\ExplSyntaxOn
\cs_new_eq:NN \ht@trimspaces \tl_trim_spaces:n
\ExplSyntaxOff
\ifx\xmltexversion\@undefined
\gdef\@strippercent#1\%#2\@nil{#1}
\gdef\strippercent#1{\expandafter\@strippercent#1\%\@nil}
\else
\begingroup
\catcode`\%=\active
\let%\relax
\gdef\@strippercent#1%#2\@nil{#1}
\gdef\strippercent#1{\expandafter\@strippercent#1%\@nil}
\endgroup
\fi
\gdef\@stripstar#1*#2\@nil{#1}
\def\ht@callback@semicolon#1;#2;\@nil#3\@nil{%
  \let\next\relax%
  \if!#1!\else
    \csname#3\endcsname{#1}%
    \if!#2!\else
      \def\next{\ht@callback@semicolon#2;\@nil#3\@nil}%
    \fi
  \fi
  \next}


\let\ht@debugmsg\@gobbletwo
\def\htNCError#1{\message{[htmltabs Error] #1^^J}}
\let\ht@infomsg\@gobble%
\def\ht@env@not@in@htmltab@error#1{%
  \PackageError{htmltabs}%
    {`#1' outside htmltab-environment}%
    {The `#1' environment can only be used within the
     htmltab environment. If another packages define
     an environment of that name make sure that package
     is laoded after htmltabs.}}
\def\ht@not@in@htmltab@error#1{%
  \PackageError{htmltabs}%
    {\expandafter\noexpand\csname#1\endcsname\space outside htmltab-environment}%
    {\expandafter\noexpand\csname#1\endcsname\space can only be used within the htmltab
     environment. If another packages define a macro
     of that name make sure that package is loaded
     after htmltabs.}}
\def\ht@cssError{\PackageError{htmltabs}{Malformed CSS property in
    \ht@thecell\space of Tab. \the\ht@curtab}{%
    There is a style attribute in your file that does not conform to
    ^^Jthe CSS standard. Property-value pairs must be separated from each
    ^^Jother by `;', and properties must be separated from their values
    ^^Jby `:'}}
\def\ht@debugbrk{^^J\space\space\space\space\space}%
\if@ht@silent
\else
  \def\htdbg@str@info{info}%
  \def\ht@infomsg#1{\message{[htmltabs \htdbg@str@info] #1^^J}}%
  \def\ht@warnmsg#1{\message{[htmltabs Warning] #1^^J}}%
  \ifx\ht@debug@level\@undefined
  \else
    \def\htdbg@str@all{all}%
    \def\htdbg@str@verboseall{verboseall}%
    \def\htdbg@str@verbose{verbose}%
    \def\ht@print@message#1#2{\edef\htdbg@str@a{#1}\message{[htmltabs \htdbg@str@a\space(\the\ht@curtab-\ht@thecell)] #2^^J}}%
    \def\ht@initDebug#1{\expandafter\def\csname ht@dbg@msg-#1\endcsname##1{\ht@print@message{#1}{##1}}}%
    \def\ht@debugmsg#1#2{\expandafter\ifx\csname ht@dbg@msg-#1\endcsname\relax\else\csname ht@dbg@msg-#1\endcsname{#2}\fi}%
    \ifnum
      \ifx\ht@debug@level\htdbg@str@all1
      \else
        \ifx\ht@debug@level\htdbg@str@verboseall1
          \else0
        \fi
      \fi=1\relax
      \def\ht@debugmsg#1#2{%
        \def\dbg@argi{#1}%
        \ifnum\ifx\ht@debug@level\htdbg@str@all\ifx\dbg@argi\htdbg@str@verbose0\else1\fi\else1\fi=1\relax
          \expandafter\ifx\csname ht@dbg@msg-#1\endcsname\relax
            \begingroup\expandafter\endgroup\expandafter\gdef\csname ht@dbg@msg-#1\endcsname##1{\ht@print@message{#1}{##1}}%
          \fi
          \csname ht@dbg@msg-#1\endcsname{#2}%
        \fi
      }%
    \else
      \expandafter\ht@initDebug{\ht@debug@level}%
    \fi
  \fi
\fi
\long\def\ht@gobbleopt{\@ifnextchar[\@ht@gobbleopt{\@ht@gobbleopt[]}}%]
\long\def\@ht@gobbleopt[#1]#2{}%

\def\ht@protect@fragile{%
  \renewcommand\footnote[2][\the\c@footnote]{\def\@thefnmark{##1}\@makefnmark}%
  \renewcommand\index[2][]{}%
  \renewcommand\marginpar[2][]{}%
  \renewcommand\glossary[2][]{}%
  \let\label\@gobble
}

\newcount\ht@curtab            \ht@curtab=\z@\relax
\newcount\ht@currow            \ht@currow=\z@\relax
\newcount\ht@curcol            \ht@curcol=\z@\relax
\newcount\ht@maxcol            \ht@maxcol=\z@\relax
\newcount\ht@maxrow            \ht@maxrow=\z@\relax
\def\ht@therow{\the\ht@currow}%
\def\ht@thecol{\the\ht@curcol}%
\def\ht@thecell{\the\ht@currow-\the\ht@curcol}%
\newcount\ht@tfootrows          \ht@tfootrows=\z@\relax
\newcount\ht@theadrows          \ht@theadrows=\z@\relax
\newcount\ht@tbodyrows          \ht@tbodyrows=\z@\relax
\newcount\ht@firstrow           \ht@firstrow=\z@\relax
\newcount\ht@lastrow            \ht@lastrow=\z@\relax
\newcount\ht@last@break@row     \ht@last@break@row=\z@\relax

\newdimen\ht@tabwidth          \ht@tabwidth\z@
\newdimen\ht@framewidth        \ht@framewidth\z@
\newdimen\ht@colsum            \ht@colsum=\z@\relax
\newdimen\ht@rowspace          \ht@rowspace=\z@\relax
\newdimen\ht@rowheight         \ht@rowheight=\z@\relax
\newdimen\ht@rowdepth          \ht@rowdepth=\z@\relax
\newdimen\ht@add@to@bottom     \ht@add@to@bottom=\z@\relax
\newdimen\htInitSkip           \htInitSkip=\z@\relax
\newdimen\htAddToTop           \htAddToTop=\z@\relax
\newdimen\htAddToBottom        \htAddToBottom=\z@\relax
\newdimen\ht@add@to@top        \ht@add@to@top=\htAddToTop\relax
\def\ht@min@p@rows{2}%
\def\ht@min@b@rows{6}%
\newif\if@ht@nat@calc       \@ht@nat@calcfalse
\newif\if@ht@height@calc    \@ht@height@calcfalse
\newif\if@ht@final@render   \@ht@final@rendertrue
\newif\if@ht@break@table    \@ht@break@tablefalse
\newif\if@ht@no@final@strut \@ht@no@final@strutfalse
\newif\if@ht@no@init@strut  \@ht@no@init@strutfalse
\newif\if@ht@hyph@first@word  \@ht@hyph@first@wordfalse
\newif\if@ht@in@table       \@ht@in@tablefalse
\gdef\ht@tempa{}
\newcount\ht@tempcnta          \ht@tempcnta=\z@\relax
\newcount\ht@tempcntb          \ht@tempcntb=\z@\relax
\newcount\ht@tempcntc          \ht@tempcntc=\z@\relax
\newcount\ht@temppropcnta      \ht@temppropcnta=\z@\relax
\newcount\ht@nest@cnt          \global\ht@nest@cnt=\z@\relax
\newdimen\ht@tempdima          \ht@tempdima\z@
\newdimen\ht@tempdimb          \ht@tempdimb\z@
\newdimen\ht@tempdimc          \ht@tempdimc\z@
\newdimen\ht@tempdimd          \ht@tempdimd\z@
\newdimen\ht@tempdime          \ht@tempdime\z@
\newdimen\ht@tempdimf          \ht@tempdimf\z@

\newdimen\ht@h@offset          \ht@h@offset=\z@\relax
\newdimen\ht@cur@lower@dp      \ht@cur@lower@dp=\z@\relax
\newdimen\ht@cur@upper@dp      \ht@cur@upper@dp=\z@\relax
\newdimen\ht@cur@upper@ht      \ht@cur@upper@ht=\z@\relax
\newdimen\ht@max@lower@dp      \ht@max@lower@dp=\z@\relax
\newdimen\ht@max@upper@dp      \ht@max@upper@dp=\z@\relax
\newdimen\ht@max@upper@ht      \ht@max@upper@ht=\z@\relax
\newdimen\ht@init@pagegoal     \ht@init@pagegoal=\z@\relax
\newdimen\ht@table@height      \ht@table@height=\z@\relax
\newdimen\ht@cell@insert@ht    \ht@cell@insert@ht=\z@\relax
\newdimen\ht@row@insert@ht     \ht@row@insert@ht=\z@\relax
\newdimen\ht@htTheadBox@fins@ht\ht@htTheadBox@fins@ht=\z@\relax
\newdimen\ht@htTfootBox@fins@ht\ht@htTfootBox@fins@ht=\z@\relax
\newbox\htCellBox    \global\setbox\htCellBox\box\voidb@x
\newbox\htRowBox     \global\setbox\htRowBox\box\voidb@x
\newbox\htTheadBox   \global\setbox\htTheadBox\box\voidb@x
\newbox\htTfootBox   \global\setbox\htTfootBox\box\voidb@x
\newbox\htTbodyBox   \global\setbox\htTbodyBox\box\voidb@x
\newbox\htCaptionBox \global\setbox\htCaptionBox\box\voidb@x
\newbox\htTableBox   \global\setbox\htTableBox\box\voidb@x
\newbox\ht@tempboxa  \global\setbox\ht@tempboxa\box\voidb@x
\newbox\ht@tempboxb  \global\setbox\ht@tempboxb\box\voidb@x
\def\HTResetInternal{%
  \global\ht@currow\z@ \global\ht@curcol\z@
  \global\ht@maxcol\z@ \global\ht@maxrow\z@
  \global\ht@tbodyrows\z@
  \global\ht@theadrows\z@
  \global\ht@tfootrows\z@
  \global\ht@htTheadBox@fins@ht\z@
  \global\ht@htTfootBox@fins@ht\z@
  \global\ht@last@break@row\z@
  \global\setbox\htTheadBox\box\voidb@x
  \global\setbox\htTbodyBox\box\voidb@x
  \global\setbox\htTfootBox\box\voidb@x
  \global\setbox\htCaptionBox\box\voidb@x
  \global\setbox\htTableBox\box\voidb@x
  \global\let\ht@structID@THead\@undefined
  \global\let\ht@structID@TBody\@undefined
  \global\let\ht@structID@TFoot\@undefined
  \global\let\ht@prev@parent\@undefined
  \global\let\htCaptionContent\relax
  \global\@ht@break@tablefalse
  \global\ht@add@to@bottom=\z@\relax
  \global\ht@add@to@top=\htAddToTop\relax}
\def\ht@str@collapse{collapse}
\def\ht@str@content{content}
\def\ht@str@caption{caption}
\def\ht@str@default{default}
\def\ht@str@tbody{tbody}
\def\ht@str@tfoot{tfoot}
\def\ht@str@thead{thead}
\def\ht@str@table{table}
\def\ht@str@td{td}
\def\ht@str@th{th}
\def\ht@str@tr{tr}
\def\ht@str@col{col}
\def\ht@str@true{true}
\def\ht@str@top{top}
\def\ht@str@bottom{bottom}
\def\ht@str@auto{auto}
\def\ht@str@none{none}
\AtBeginDocument{%
  \@ifpackageloaded{hyperref}
    {\def\ht@hy@safe@footnote{%
       \let\ht@ltx@footnote\footnote
       \def\footnote{\advance\c@Hfootnote\m@ne\relax\ht@ltx@footnote}}}
    {\let\ht@hy@safe@footnote\relax}}

\def\HTRegisterCSSProperty#1#2#3{{%
  \edef\ht@prop{#2}%
  \edef\ht@scope{\if!#1!\else#1-\fi}%
  \def\ht@val{#3}%%
  \def\ht@apply@prop{\HTRegisterCSSProperty{#1}}%
  \ht@parse@prop@name
  \ht@debugmsg{prop}{Registering property \ht@scope\ht@prop}%
  \expandafter\def\expandafter\@tempa\expandafter{\csname default-\ht@scope\ht@prop\endcsname}%
  \begingroup\expandafter\endgroup\expandafter\expandafter\expandafter\gdef\expandafter\@tempa\expandafter{\ht@val}%
  \ht@debugmsg{prop}{-> Initial Value: \expandafter\meaning\csname default-\ht@scope\ht@prop\endcsname}%
}}

\def\ht@parse@prop@name{%
  \ht@debugmsg{prop}{Parsing \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}{\ht@prop}}%
  \let\ht@prop@post\@empty%
  \let\ht@border@dired\@empty
  \expandafter\ifx\csname ht@handle@name@\ht@prop\endcsname\relax
    \let\ht@next\relax
  \else
    \csname ht@handle@name@\ht@prop\endcsname
  \fi}

\def\ht@handle@name@margin{\ht@parse@dir@prop}
\let\ht@handle@name@padding\ht@handle@name@margin
\def\ht@handle@name@font{\ht@parse@font}
\expandafter\let\csname ht@handle@name@font-family\endcsname\ht@handle@name@font
\expandafter\let\csname ht@handle@name@font-size\endcsname\ht@handle@name@font
\expandafter\let\csname ht@handle@name@font-style\endcsname\ht@handle@name@font
\expandafter\let\csname ht@handle@name@font-variant\endcsname\ht@handle@name@font
\expandafter\let\csname ht@handle@name@font-weight\endcsname\ht@handle@name@font

\def\ht@handle@name@color{\ht@parse@and@set@color@prop}
\expandafter\let\csname ht@handle@name@background-color\endcsname\ht@handle@name@color

\def\ht@handle@name@border{%
  \let\ht@next\ht@parse@border@prop
  \def\ht@prop{border-top}\csname ht@handle@name@border-top\endcsname
  \def\ht@prop{border-left}\csname ht@handle@name@border-left\endcsname
  \def\ht@prop{border-bottom}\csname ht@handle@name@border-bottom\endcsname
  \def\ht@prop{border-right}\csname ht@handle@name@border-right\endcsname
}
\def\ht@handle@border@dired{\let\ht@border@dired\relax\ht@parse@border@prop}
\expandafter\let\csname ht@handle@name@border-top\endcsname\ht@handle@border@dired
\expandafter\let\csname ht@handle@name@border-left\endcsname\ht@handle@border@dired
\expandafter\let\csname ht@handle@name@border-bottom\endcsname\ht@handle@border@dired
\expandafter\let\csname ht@handle@name@border-right\endcsname\ht@handle@border@dired

\expandafter\def\csname ht@handle@name@border-width\endcsname{%
  \def\ht@prop{border}%
  \def\ht@prop@post{-width}%
  \ht@parse@dir@prop}

\def\@ht@handle@border@color@dired{%
  \ifx\ht@is@nested\relax\else
    \ht@parse@color@prop
    \let\ht@no@expand\relax
    \let\ht@next\@undefined
    \expandafter\ht@apply@prop\expandafter{\expandafter\ht@prop\expandafter}\expandafter{\ht@color@val}%
  \fi}%

\def\ht@handle@border@color@dired#1#2{%
  \begingroup
    \edef\ht@prop{#1}%
    \edef\ht@val{#2}%
    \ht@parse@color@prop
    \let\ht@no@expand\relax
    \ht@brdcol@apply@prop{\ht@prop}{\ht@color@val}%
  \endgroup%
}

\expandafter\let\csname ht@handle@name@border-top-color\endcsname\@ht@handle@border@color@dired
\expandafter\let\csname ht@handle@name@border-left-color\endcsname\@ht@handle@border@color@dired
\expandafter\let\csname ht@handle@name@border-bottom-color\endcsname\@ht@handle@border@color@dired
\expandafter\let\csname ht@handle@name@border-right-color\endcsname\@ht@handle@border@color@dired

\expandafter\def\csname ht@handle@name@border-color\endcsname{%
  \def\ht@prop{border}%
  \def\ht@prop@post{-color}%
  \let\ht@brdcol@apply@prop\ht@apply@prop
  \let\ht@apply@prop\ht@handle@border@color@dired
  \ht@parse@dir@prop}

\expandafter\def\csname ht@handle@name@border-style\endcsname{%
  \def\ht@prop{border}%
  \def\ht@prop@post{-style}%
  \ht@parse@dir@prop}

\def\ht@parse@dir@prop{%
  \ht@debugmsg{prop}{Assigning Directions to [\meaning\ht@apply]{\ht@scope}{\ht@prop}}%
  \global\ht@tempcnta\z@
  \let\next\relax
  \expandafter\ht@count@args\expandafter{\ht@val}%
  \def\ht@apply@prop@top{\ht@apply@prop{\ht@prop-top\ht@prop@post}}%
  \def\ht@apply@prop@left{\ht@apply@prop{\ht@prop-left\ht@prop@post}}%
  \def\ht@apply@prop@right{\ht@apply@prop{\ht@prop-right\ht@prop@post}}%
  \def\ht@apply@prop@bottom{\ht@apply@prop{\ht@prop-bottom\ht@prop@post}}%
  \ifnum\ht@tempcnta=\z@
  \else
    \ifnum\ht@tempcnta=\@ne
      \expandafter\expandafter\expandafter\ht@apply@prop@top\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
      \expandafter\expandafter\expandafter\ht@apply@prop@left\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
      \expandafter\expandafter\expandafter\ht@apply@prop@right\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
      \expandafter\expandafter\expandafter\ht@apply@prop@bottom\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
    \else\ifnum\ht@tempcnta=\tw@
        \expandafter\expandafter\expandafter\ht@apply@prop@top\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
        \expandafter\expandafter\expandafter\ht@apply@prop@left\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
        \expandafter\expandafter\expandafter\ht@apply@prop@right\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
        \expandafter\expandafter\expandafter\ht@apply@prop@bottom\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
      \else\ifnum\ht@tempcnta=\thr@@
          \expandafter\expandafter\expandafter\ht@apply@prop@top\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@left\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@right\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@bottom\expandafter\expandafter\expandafter{\csname ht@val@3\endcsname}%
        \else
          \expandafter\expandafter\expandafter\ht@apply@prop@top\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@right\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@bottom\expandafter\expandafter\expandafter{\csname ht@val@3\endcsname}%
          \expandafter\expandafter\expandafter\ht@apply@prop@left\expandafter\expandafter\expandafter{\csname ht@val@4\endcsname}%
        \fi
      \fi
    \fi
  \fi
  }
\begingroup
\catcode `\#=\active\gdef#{\string#}
\gdef\@ht@parse@color@str{\if\ht@next@token #\@ht@set@html@color\else\@ht@set@name@color\fi}%
\endgroup

\def\@ht@set@name@color{\xdef\ht@color@val{\noexpand\color{\ht@val}}}
\def\@ht@set@html@color{\expandafter\expandafter\expandafter\ht@parse@hex@color\expandafter\expandafter\expandafter{\expandafter\@cdr\ht@val\@nil}}

\def\@ht@parse@hex@color#1#2#3#4\@nil{%
  \edef\@argiv{#4}%
  \ifx\@argiv\@empty
    \edef\ht@col@val{#1#1#2#2#3#3}%
  \else
    \edef\ht@col@val{#1#2#3#4}%
  \fi}

\def\ht@parse@hex@color#1{%
  \@ht@parse@hex@color#1\@nil%
  \xdef\ht@color@val{\noexpand\color[HTML]{\ht@col@val}}%
}

\def\ht@parse@color@prop{%
  \ht@debugmsg{prop}{Parsing color for \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}{\ht@prop}; input: "\ht@val"}%
  \global\let\ht@color@val\@empty
  \ifx\ht@val\@empty\else
    \edef\ht@next@token{\expandafter\@car\ht@val\@nil}%
    \def\@tempa{\#}%
    \ifx\ht@next@token\@tempa
      \@ht@set@html@color
    \else
      \@ht@parse@color@str%
    \fi
  \fi
}

\def\ht@parse@and@set@color@prop{%
  \ht@debugmsg{prop}{Processing \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}{\ht@prop}; input: "\ht@val"}%
  \ifx\ht@val\@empty\else
    \ht@parse@color@prop
    \let\ht@no@expand\relax
    \edef\ht@apply@color{\noexpand\ht@apply@prop{internal-\ht@prop}}%
    \expandafter\ht@apply@color\expandafter{\ht@color@val}%
  \fi
}
\def\ht@parse@border@prop{%
  \ht@debugmsg{prop}{Parsing Border for \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}{\ht@prop}}%
  \global\ht@tempcnta=\z@\relax
  \let\next\relax
  \expandafter\ht@count@args\expandafter{\ht@val}%
  \ifx\ht@border@dired\@empty
    \def\ht@apply@border@dir##1{%
      \ht@apply@prop{\ht@prop-top\ht@prop@post}{##1}%
      \ht@apply@prop{\ht@prop-left\ht@prop@post}{##1}%
      \ht@apply@prop{\ht@prop-right\ht@prop@post}{##1}%
      \ht@apply@prop{\ht@prop-bottom\ht@prop@post}{##1}}%
  \else
    \def\ht@apply@border@dir##1{%
      \ht@apply@prop{\ht@prop\ht@prop@post}{##1}%
    }%
  \fi
  \ht@set@border@prop}
\def\ht@set@border@prop{%
  \ifnum\ht@tempcnta=\@ne
    \def\ht@prop@post{-style}%
    \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
  \else
    \ifnum\ht@tempcnta=\tw@
      \def\ht@prop@post{-width}%
      \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
      \def\ht@prop@post{-style}%
      \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
    \else
      \ifnum\ht@tempcnta=\thr@@
        \def\ht@prop@post{-width}%
        \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@1\endcsname}%
        \def\ht@prop@post{-style}%
        \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@2\endcsname}%
        \begingroup
          \def\ht@prop@post{-color}%
          \let\ht@brdcol@apply@prop\ht@apply@prop
          \let\ht@apply@prop\ht@handle@border@color@dired
          \def\ht@apply@border@dir{\ht@apply@prop{\ht@prop\ht@prop@post}}%
          \expandafter\expandafter\expandafter\ht@apply@border@dir\expandafter\expandafter\expandafter{\csname ht@val@3\endcsname}%
        \endgroup
      \fi
    \fi
  \fi
}
\def\ht@parse@font{%
  \ht@debugmsg{font}{Parsing \ht@prop\space for \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}: \expandonce{\ht@val}}%
  \def\ht@tempa{font}%
  \ifx\ht@prop\ht@tempa
    \global\ht@tempcnta=\z@\relax
    \expandafter\ht@count@args\expandafter{\ht@val}%
    \ifnum\ht@tempcnta>\@ne
      \ht@tempcntb=\z@\relax
      \ht@Iterate{\ht@tempcntb}{1}{\the\ht@tempcnta}{%
        \expandafter\expandafter\expandafter\ht@apply@font\expandafter\expandafter\expandafter{\csname ht@val@\the\ht@tempcntb\endcsname}%
      }%
    \fi
  \else
    \expandafter\expandafter\expandafter\ht@apply@font\expandafter\expandafter\expandafter{\ht@val}%
  \fi}

\def\ht@apply@font#1{%
  \ht@debugmsg{font}{Applying \ht@prop:  #1;}%
  \expandafter\ifx\csname ht@\ht@prop @#1\endcsname\relax\else
    \let\ht@no@expand\relax
    \csname ht@\ht@prop @#1\endcsname
  \fi
}
\def\ht@handle@name@transform{\ht@parse@transform}
\def\ht@parse@transform{%
  \ht@debugmsg{prop}{Parsing transform for \ifx\ht@apply\@undefined\else[\ht@apply]\fi{\ht@scope}{\ht@prop}; input: "\ht@val"}%
  \ifx\ht@val\@empty\else
    \edef\ht@val{\ht@val\space()}%
    \expandafter\@ht@parse@transform\ht@val\@@
  \fi
}
\def\@ht@parse@transform#1(#2) #3\@@{%
  \ifx\csname @ht@parse@transform@#1\endcsname\relax
    \ht@warnmsg{transformation "#1" not yet supported!}%
  \else
    \csname @ht@parse@transform@#1\endcsname{#2}%
  \fi
  \edef\@argiii{#3}\def\@tempa{()}%
  \ifx\@argiii\@tempa\else
    \expandafter\@ht@parse@transform\@argiii\@@
  \fi
}
\def\ht@strip@deg#1deg\@@{#1}
\def\@ht@parse@transform@rotate #1{%
  \ht@debugmsg{prop}{transform rotates by "#1".}%
  \def\ht@tempa{\ht@apply@prop{internal-rotate}}%
  \expandafter\ht@tempa\expandafter{\ht@strip@deg-#1\@@}%
}
\def\@ht@parse@transform@scale #1{%
  \ht@debugmsg{prop}{transform scales by "#1".}%
  \ht@apply@prop{internal-scale}{#1}%
}
\def\ht@parse@style#1{%
  \ht@callback@semicolon#1;;\@nil ht@parse@css\@nil
  \global\let\ht@cur@style\@undefined}%
\def\ht@parse@css#1{%
  \edef\@argi{#1}%
  \expandafter\@ht@parse@css\@argi::\@@nil}
\def\@ht@parse@css #1:#2:\@@nil{%
  \if!#2!\relax
    \ht@cssError
  \else
    \@@ht@parse@css#1:#2\@@@nil
  \fi}
\def\@@ht@parse@css#1:#2:\@@@nil{%
  \edef\ht@prop{\ht@trimspaces{#1}}%
  \edef\ht@val{\ht@trimspaces{#2}}%
  \ht@debugmsg{style}{Processing css-property `\ht@prop'.\ht@debugbrk Value: `\ht@val'}%
  \ifx\ht@cur@element\ht@str@td
    \edef\ht@scope{td}%
    \def\ht@apply@prop{\SetCellProp}%
  \else\ifx\ht@cur@element\ht@str@tr
      \edef\ht@scope{tr}%
      \def\ht@apply@prop{\SetRowProp}%
    \else\ifx\ht@cur@element\ht@str@col
        \edef\ht@scope{col}%
        \def\ht@apply@prop{\SetColProp}%
      \else
        \let\ht@scope\ht@cur@element%
        \def\ht@apply@prop{\ht@set@prop{\ht@cur@element}{\ht@cur@element}}%
      \fi
    \fi
  \fi
  \ht@parse@prop@name
  \ifx\ht@next\relax
    \expandafter\expandafter\expandafter\ht@apply@prop\expandafter\expandafter\expandafter{\expandafter\ht@prop\expandafter}{\ht@val}%
  \fi
}


\def\SetHTClass{\@ifnextchar [{\ht@SetHTClass}{\ht@SetHTClass[]}}%]

\def\ht@SetHTClass[#1]#2#3{%
  \edef\cls@argi{#1}%
  \edef\cls@argii{#2}%
  \ifx\cls@argii\@empty\edef\ht@class@name{default}\else\let\ht@class@name\cls@argii\fi
  \ht@debugmsg{info}{Declaring class `\ht@class@name'\ifx\cls@argi\@empty\else\ht@debugbrk (parent class: #1)\fi}%
  \let\ht@recursive@inherit\relax
  \ifx\cls@argi\@empty\else
    \expandafter\ifx\csname #1-class-def\endcsname\relax
      \PackageError{htmltabs}{Class `#2' is defined^^Jto inherit from class `#1',^^Jbut that class is not (yet) defined.}
          {You reference a class that has not been defined (yet).
        ^^JClasses are read top to bottom, so make sure that classes
        ^^Jyou inherit from are defined prior to the referencing class.}%
    \else
      \csname #1-class-def\endcsname
      \edef\ht@recursive@inherit{\expandonce{\csname #1-class-def\endcsname}}%
    \fi
  \fi
  \begingroup\expandafter\endgroup\expandafter\expandafter\expandafter\gdef\expandafter\csname \ht@class@name-class-def\expandafter\endcsname\expandafter{\ht@recursive@inherit #3}%
  #3}
\def\SetClassProp{\@ifnextchar [{\@SetClassProp}{\@SetClassProp[]}}%]
\def\@SetClassProp[#1]#2#3#4{{%
  \global\advance\ht@nest@cnt\@ne
  \ifnum\ht@nest@cnt>\@ne\global\let\ht@is@nested\relax\fi
  \edef\ht@apply{#1}%%
  \edef\ht@scope{#2}%%
  \edef\ht@prop{#3}%%
  \edef\ht@val{\expandonce{#4}}%%
  \ifx\ht@scope\@empty
    \@SetAllClassProps%
  \else
    \def\ht@apply@prop{\@SetClassProp[\ht@apply]{\ht@scope}}%
    \ht@parse@prop@name
    \ifnum\ifnum\ht@nest@cnt=\@ne\ifx\ht@is@nested\relax\z@\else\@ne\fi\else\@ne\fi=\@ne\relax
      \expandafter\ifx\csname default-\ht@scope-\ht@prop\endcsname\relax
        %\htNCError{Property \ht@scope-\ht@prop\space not implemented!}%
      \fi
      \ifx\ht@apply\@empty
        \ifx\ht@class@name\ht@str@default
          \ht@debugmsg{class}{Re-defining default property\ht@debugbrk default-\ht@scope-\ht@prop\ht@debugbrk with value \meaning\ht@val.}%
          \expandafter\def\expandafter\@tempa\expandafter{\csname \ht@scope-\ht@prop\endcsname}%
          \begingroup\expandafter\endgroup\expandafter\expandafter\expandafter\gdef\expandafter\@tempa\expandafter{\ht@val}%
        \fi
      \else
        \expandafter\def\expandafter\ht@apply\expandafter{\ht@apply-}%
      \fi
      \edef\ht@proplistname{\ht@class@name-\ht@apply property-list}%
      \ht@debugmsg{class}{Declaring Property\ht@debugbrk\ht@class@name-\ht@scope-\ht@prop\space (nesting-level \the\ht@nest@cnt)\ht@debugbrk with value \meaning\ht@val\ht@debugbrk adding `\ht@scope-\ht@prop' to \ht@class@name-\ht@apply property-list.}%
      \expandafter\def\expandafter\@tempa\expandafter{\ht@scope-\ht@prop}%
      \edef\@tempb{%
        \noexpand\expandafter\noexpand\expandafter\noexpand\expandafter\noexpand
        \def\noexpand\expandafter\noexpand\csname \@tempa\noexpand\expandafter\noexpand\endcsname\expandafter\noexpand
        {\expandonce{\ht@val}}}%
      \expandafter\ht@append@to@props\expandafter{\@tempb}{\ht@proplistname}%
      \ht@debugmsg{class}{Current value of \ht@proplistname: \expandafter\meaning\csname\ht@proplistname\endcsname}%
    \fi
  \fi
  \global\advance\ht@nest@cnt\m@ne
  \ifnum\ht@nest@cnt=\z@\global\let\ht@is@nested\@undefined\fi
}}
\let\SetClassPropX\SetClassProp
\def\@SetAllClassProps{%
    \@SetClassProp[\ht@prop]{table}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{tfoot}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{tbody}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{thead}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{td}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{tr}{\ht@prop}{\ht@val}%
    \@SetClassProp[\ht@prop]{col}{\ht@prop}{\ht@val}%
}

\def\ht@append@to@props#1#2{%
  \def\@argi{#1}%
  \ht@debugmsg{verbose}{Adding \meaning\@argi\space to #2}%
  \expandafter\ifx\csname #2\endcsname\relax
    \begingroup\expandafter\endgroup\expandafter\gdef\csname #2\endcsname{}%
  \fi
  \begingroup\expandafter\endgroup\expandafter\g@addto@macro\csname #2\endcsname{#1}}

 % \def\htAddToPropertyList#1{%
 %   \edef\@tempa{%
 %         \noexpand\expandafter\noexpand\expandafter\noexpand\expandafter\noexpand
 %     \let\noexpand\expandafter\noexpand\csname #1\noexpand\expandafter\noexpand\endcsname
 %     \noexpand\csname \ht@classname-#1\noexpand\endcsname}%
 %   \expandafter\ht@append@to@props\expandafter{\@tempa}{\ht@proplistname}}

\def\ht@eval@props#1{%
  \expandafter\ifx\csname #1-props\endcsname\relax
  \else
    \csname #1-props\endcsname%
  \fi}

\def\ht@border@style@solid#1#2{%
  \ifx\ht@is@vert\relax
    \rlap{\vbox to \dimexpr#2\relax{\vrule \@width#1 \@height\dimexpr#2\relax}}\hskip#1%
  \else
    \vrule \@width#2 \@height#1\relax
  \fi}

\def\ht@border@style@double#1#2{{%
  \@tempdimc=#1\relax%
  \ifx\ht@is@vert\relax
    \rlap{\smash{\lower\@tempdimc\vbox to \dimexpr#2+2\@tempdimc\relax{%
          \vrule
            \@width0.33333\@tempdimc
            \@height\dimexpr#2+\ifx\ht@is@left\relax2\fi\@tempdimc\relax
            \ifx\ht@is@left\relax\else\@depth-\@tempdimc\fi
        \hskip0.33333\@tempdimc
        \vrule
          \@width0.33333\@tempdimc
          \@height\dimexpr#2+\ifx\ht@is@left\relax\else2\fi\@tempdimc\relax
          \ifx\ht@is@left\relax\@depth-\@tempdimc\fi
      }}}\hskip\@tempdimc%
  \else
    \raise.66667\@tempdimc\hb@xt@#2{%
      \rlap{\ifx\ht@is@top\relax\else\hskip0.66667\@tempdimc\fi\vrule \@width\dimexpr#2\ifx\ht@is@top\relax\else-1.33333\@tempdimc\fi\relax \@height0.33333\@tempdimc}%
      \rlap{\lower\dimexpr0.66667\@tempdimc\relax\hbox{\ifx\ht@is@top\relax\hskip0.66667\@tempdimc\fi\vrule \@width\dimexpr#2\ifx\ht@is@top\relax-1.33333\@tempdimc\fi\relax \@height0.33333\@tempdimc}}%
    }%
  \fi}}

\def\ht@border@style@dotted#1#2{%
  \ht@tempdimc=#1\relax
  \def\ht@border@rule{\vrule \@width\ht@tempdimc \@height\ht@tempdimc}%
  \ifx\ht@is@vert\relax
    \rlap{\lower\dimexpr-\ht@tempdimc\relax\vbox to \dimexpr#2+\ht@tempdimc\relax{\xleaders \vbox to \dimexpr 3\ht@tempdimc\relax{\vss\ht@border@rule\vss}\vfill}}\hskip\ht@tempdimc%
  \else
    \hskip-\ht@tempdimc\hb@xt@\dimexpr#2+\ht@tempdimc\relax{\xleaders \hb@xt@\dimexpr 3\ht@tempdimc\relax{\hss\ht@border@rule\hss}\hfill}%
  \fi
  }

\def\ht@border@style@dashed#1#2{%
  \ht@tempdimc=#1\relax
  \ifx\ht@is@vert\relax
    \rlap{\vbox to \dimexpr#2\relax{%
        \xleaders \vbox to \dimexpr8\ht@tempdimc\relax{\vrule \@width\ht@tempdimc \@height5\ht@tempdimc\vss}\vfill
        \vrule\@width\ht@tempdimc \@height5\ht@tempdimc
      }}\hskip\ht@tempdimc%
  \else
    \hb@xt@#2{%
      \xleaders \hb@xt@\dimexpr 8\ht@tempdimc\relax{\vrule \@width5\ht@tempdimc \@height\ht@tempdimc\hss}\hfill
      \vrule \@width5\ht@tempdimc \@height\ht@tempdimc
    }%
  \fi
  }

\def\ht@border@style@none#1#2{%
  \ifdim#1>\z@\relax
    \PackageWarning{htmltabs}{\ht@scope-border-style fuer tab-\the\ht@curtab\space ist `none',\ht@debugbrk aber \ht@scope-border-width ist #1!}%
  \fi}
\def\ht@border@top#1#2#3{{%
  \let\ht@is@top\relax
  \rlap{\raise\dimexpr\vsize\relax\hbox{#2%
      \csname ht@border@style@#3\endcsname{#1}{\dimexpr\hsize\relax}}}}}%

\def\ht@border@right#1#2#3{{%
  \let\ht@is@vert\relax
  \hbox{%
    #2\csname ht@border@style@#3\endcsname{#1}{\dimexpr\vsize\relax}}}}%

\def\ht@border@bottom#1#2#3{{%
    \llap{\lower\dimexpr#1\relax\hbox{#2
        \csname ht@border@style@#3\endcsname{#1}{\dimexpr\hsize\relax}}}}}%

\def\ht@border@left#1#2#3{{%
  \let\ht@is@vert\relax
  \let\ht@is@left\relax
  \hbox{%
    #2\csname ht@border@style@#3\endcsname{#1}{\dimexpr\vsize\relax}}}}%
\newif\if@ht@spaceskip
\def\@ht@setspaceskip{%
  \if@ht@spaceskip
    \ifdim\fontdimen\thr@@\font=\z@\relax
      \spaceskip\z@
    \else
      \spaceskip\fontdimen\tw@\font
    \fi
  \else
    \spaceskip\z@
  \fi}
\let\@ht@savedcr\\
\let\@ht@saved@gnewline\@gnewline
\def\@ht@gnewline#1{%
  \ifvmode\@nolnerr\else
    \unskip
    \ifmmode
      \reserved@e {\reserved@f #1}\nobreak \hfil \break
    \else
      \reserved@e {\reserved@f #1}{\parskip\z@\par}%
    \fi
  \fi}
\def\ht@halign{%
  \GetCascCellProp{hAlign}{text-align}%
  \GetCascCellProp{Hyphen}{hyphen}%
  \csname ht@halign@\hAlign @\Hyphen\endcsname}
\def\ht@set@alignment{%
  \let\centering\ht@halign@center@none
  \let\raggedleft\ht@halign@right@none
  \let\raggedright\ht@halign@left@none
  \let\Centering\ht@halign@center@auto
  \let\RaggedLeft\ht@halign@right@auto
  \let\RaggedRight\ht@halign@left@auto
  \let\justified\ht@halign@justified@auto
}
\def\ht@halign@center@none{%
  \@rightskip\z@\@plus1fill\relax
  \rightskip\@rightskip
  \leftskip\z@\@plus1fill\relax
  \parindent\z@
  \parfillskip\z@skip}
\def\ht@halign@center@auto{%
  \ifx\\\@ht@savedcr\let\\\@centercr\fi
  \let\@gnewline\@ht@gnewline
  \leftskip\z@\@plus\tw@ em\relax
  \@rightskip\z@\@plus\tw@ em\relax
  \rightskip\@rightskip
  \parfillskip\z@skip\relax
  \@ht@spaceskiptrue
  \@ht@setspaceskip
  \apptocmd\selectfont{\@ht@setspaceskip}{}{}%
  }
\def\ht@halign@left@none{%
  \leftskip\z@\relax
  \@rightskip\@flushglue
  \rightskip\@rightskip
  \relax}
\def\ht@halign@left@auto{%
  \ifx\\\@ht@savedcr\let\\\@centercr\fi
  \let\@gnewline\@ht@gnewline
  \leftskip\z@skip\relax
  \@rightskip\z@\@plus\tw@ em\relax
  \rightskip\@rightskip
  \parfillskip\@flushglue\relax
  \@ht@spaceskiptrue
  \@ht@setspaceskip
  \apptocmd\selectfont{\@ht@setspaceskip}{}{}%
}
\def\ht@halign@right@none{%
  \leftskip\@flushglue\relax
  \@rightskip\z@skip\relax
  \rightskip\@rightskip
  \parfillskip\z@\relax
}
\def\ht@halign@right@auto{%
  \ifx\\\@ht@savedcr\let\\\@centercr\fi
  \let\@gnewline\@ht@gnewline
  \leftskip\z@\@plus\tw@ em\relax
  \@rightskip\z@skip\relax
  \rightskip\@rightskip
  \parfillskip\z@skip\relax
  \@ht@spaceskiptrue
  \@ht@setspaceskip
  \apptocmd\selectfont{\@ht@setspaceskip}{}{}%
}
\def\ht@halign@justified@auto{%
  \let\\\@raggedtwoe@savedcr
  \let\@gnewline\@ht@saved@gnewline
  \leftskip\z@\relax
  \@rightskip\z@\relax
  \rightskip\@rightskip
  \parfillskip\@flushglue
  \@ht@spaceskipfalse
  \@ht@setspaceskip
  \apptocmd\selectfont{\@ht@setspaceskip}{}{}%
}
\let\ht@halign@justified@none\ht@halign@justified@auto
\def\ht@valign@box#1{%
  \GetCascCellProp{vAlign}{vertical-align}%
  \ht@debugmsg{align}{v-align for \ht@thecell: \vAlign}%
  \csname ht@valign@\vAlign\endcsname{#1}}
\def\ht@valign@top#1{%
  \raise\dimexpr\vsize-\MaxUpperHeight\relax\vtop to \dimexpr\MaxUpperHeight\relax{#1\vss}}
\def\ht@valign@middle#1{%
  \raise\dimexpr\MaxUpperHeight\relax\vtop to \vsize{\vfil#1\vfil}}
\def\ht@valign@bottom#1{%
  \raise\dimexpr\MaxLowerDepth\relax\vbox to \dimexpr\vsize-\MaxLowerDepth\relax{\vss#1}}
\def\ht@process@border@collapse#1{%
  \ifdim\csname internal-#1-margin-left\endcsname=\z@\relax
    \ifdim\csname internal-#1-border-width-left\endcsname>\z@\relax
      \IfCellPropEmpty{is-leftmost}{%
        \expandafter\edef\csname internal-#1-margin-left\endcsname{-\dimexpr\csname internal-#1-border-width-left\endcsname\relax}}{}%
    \fi
  \fi
  \ifdim\csname internal-#1-margin-top\endcsname=\z@\relax
    \ifdim\csname internal-#1-border-width-top\endcsname>\z@\relax
      \IfCellPropEmpty{is-topmost}{%
        \ifnum\ht@currow>\numexpr\the\ht@theadrows+\the\ht@tfootrows\relax\relax
          \IfTablePropText{repeat-head}{true}{%
            \expandafter\edef\csname internal-#1-margin-top\endcsname{-\dimexpr\csname internal-#1-border-width-top\endcsname\relax}%
            }{}%
        \else
          \expandafter\edef\csname internal-#1-margin-top\endcsname{-\dimexpr\csname internal-#1-border-width-top\endcsname\relax}%
        \fi}{%
        \IfCellPropEmpty{is-upper}{}{%
          \IfTablePropText{repeat-head}{true}{%
            \expandafter\edef\csname internal-#1-margin-top\endcsname{-\dimexpr\csname internal-#1-border-width-top\endcsname\relax}%
            }{}%
        }%
      }%
    \fi
  \fi}
\def\htDeclareFontProperty#1#2#3{\expandafter\def\csname ht@#1@#2\endcsname{\ht@apply@prop{internal-#1}{#3}}}

\htDeclareFontProperty{font-family}{sans-serif}{\sffamily}
\htDeclareFontProperty{font-family}{serif}{\rmfamily}
\htDeclareFontProperty{font-family}{monospace}{\ttfamily}
\htDeclareFontProperty{font-family}{inherit}{}

\htDeclareFontProperty{font-weight}{bold}{\bfseries}
\htDeclareFontProperty{font-weight}{semi-bold}{\sbseries}
\htDeclareFontProperty{font-weight}{extra-bold}{\ebseries}
\htDeclareFontProperty{font-weight}{normal}{\normalfont}
\htDeclareFontProperty{font-weight}{lighter}{\lfseries}
\htDeclareFontProperty{font-weight}{inherit}{}

\htDeclareFontProperty{font-style}{normal}{\upshape}
\htDeclareFontProperty{font-style}{italic}{\itshape}
\htDeclareFontProperty{font-style}{inherit}{}

\htDeclareFontProperty{font-variant}{normal}{\upshape}
\htDeclareFontProperty{font-variant}{small-caps}{\scshape}
\htDeclareFontProperty{font-variant}{inherit}{}

\htDeclareFontProperty{font-size}{normal}{\normalsize}
\htDeclareFontProperty{font-size}{large}{\large}
\htDeclareFontProperty{font-size}{x-large}{\Large}
\htDeclareFontProperty{font-size}{xx-large}{\LARGE}
\htDeclareFontProperty{font-size}{small}{\small}
\htDeclareFontProperty{font-size}{x-small}{\footnotesize}
\htDeclareFontProperty{font-size}{xx-small}{\tiny}
\htDeclareFontProperty{font-size}{inherit}{}

\def\ht@CalculateColumnWidths{%
  \global\let\has@relative@cells\@undefined
  \ht@currow\z@
  % 1. Iteration: Natürliche Breite aller Zellen ermitteln
  \ht@Iterate{\ht@currow}{1}{\the\ht@maxrow}{{%
    \ht@eval@props{tr-\the\ht@currow}%
    \ht@curcol\z@
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
      \HTEvalCellProps
      \ifnum\ht@curcol=\ht@maxcol\relax
        \SetCellProp{is-rightmost}{true}%
        \ht@debugmsg{render}{set-rightmost to cell: \ht@thecell}%
      \fi%
      \IfColPropEmpty{width}{%
        \@ht@nat@calctrue
        \ht@RenderCell%
        \@ht@nat@calcfalse
        \ht@tempdima=\wd\htCellBox \relax%
      }{\GetColProp{FixedWidth}{width}%
        \IfColPropText{col-type}{relative}{%
          \expandafter\ht@tempdima\dimexpr\CalcRatio{\FixedWidth pt}{\ht@colsum}pt\relax
          \global\let\has@relative@cells\relax
        }{%
          \ht@tempdima\dimexpr\FixedWidth\relax
        }%
      }%
      \IfColPropEmpty{max-width}{%
        \ht@debugmsg{calcwidth}{Setze Nat. Breite von Sp. \ht@thecol\space auf \the\ht@tempdima}%
        \SetColProp{max-width}{\the\ht@tempdima}%
      }{%
        \GetColProp{CurMaxWidth}{max-width}%
        \IfCellPropEmpty{is-spanner}{%
          \ifdim\CurMaxWidth<\ht@tempdima\relax
            \ht@debugmsg{calcwidth}{Update Nat. Breite von Sp. \ht@thecol\space auf \the\ht@tempdima}%
            \SetColProp{max-width}{\the\ht@tempdima}%
          \else
            \ht@tempdima\dimexpr\CurMaxWidth\relax
          \fi
        }{}% TODO: Breitenberechnung von colspans verbessern
      }%
    }}%% /Iterate::cols
  }}%% /Iterate::rows
   %% 2. Iteration: Nat. Gesamtbreite berechnen
  \global\ht@tabwidth\z@
  \ht@currow\@ne
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
    \ht@eval@props{col-\the\ht@curcol}%
    \GetColProp{ColWidth}{max-width}%
    \global\advance\ht@tabwidth\ColWidth
  }}%% /Iterate::cols
  \ifx\htTableWidth\@empty%
    \global\ht@rowspace\dimexpr\linewidth\relax
  \else
    \ht@debugmsg{calcwidth}{Gesamtbreite aus table-Element: \expandafter\the\dimexpr\htTableWidth\relax\space (\csname table-width\endcsname)}%
    \global\ht@rowspace\dimexpr\htTableWidth\relax
  \fi
  \ht@tempdimb\dimexpr\ht@tabwidth-\ht@rowspace\relax
  \@tempswatrue
  \ifx\htTableWidth\@empty
    \ifnum\ht@tempdimb<\z@
      \ifx\has@relative@cells\relax
      \else
        \@tempswafalse
      \fi
    \fi
  \fi
  \if@tempswa
    \ht@debugmsg{calcwidth}{\ht@debugbrk%
      natural width of \the\ht@curtab:\space\space \the\ht@tabwidth\ht@debugbrk
      available space:\space\space\space\space\space \the\ht@rowspace\ht@debugbrk
      difference:\space\space\space\space\space\space\space\space\space\space \the\ht@tempdimb }%
    %% tempdimc = Durchschnittliche Spaltenbreite (zul. Gesamtbreite/Anzahl Spalten)
    \global\ht@tempdimc\dimexpr\ht@rowspace/\ht@maxcol\relax
    \global\ht@tempdimd\z@
    %% 3a. Iteration: Anzahl und Gesamtbreite variabler Spalten ermitteln
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
      \ht@eval@props{col-\the\ht@curcol}%
      \IfColPropText{col-type}{relative}{%
        \GetColProp{Width}{max-width}%
        \expandafter\ht@tempdime\dimexpr\Width\relax%
        \edef\@tempa{\strip@pt\ht@tempdime}%
        \expandafter\ht@tempdime\dimexpr\@tempa\ht@rowspace\relax
        \ht@debugmsg{calcwidth}{relative Spaltenbreite von \ht@thecol: \the\ht@tempdime}%
        \SetColProp{max-width}{\the\ht@tempdime}%
      }{% ¬relative
        \IfColPropEmpty{width}{% erstmal nur nicht festgelegte Spalten verändern,
          \GetColProp{CurrentColWidth}{max-width}%
          \@tempswafalse
          \ifdim\ht@tempdimb<\z@\relax
            \ifdim\ht@tempdimc>\CurrentColWidth\relax\@tempswatrue\fi%% bei unterbreiten Tabellen schmaler sind als Durchschnitt,
          \else
            \ifdim\ht@tempdimc<\CurrentColWidth\relax\@tempswatrue\fi%% oder die breiter sind als Durchschnitt bei überbreiten Tabellen
          \fi
          \if@tempswa
            \global\advance\ht@tempdimd\CurrentColWidth\relax
            \SetColProp{is-variable}{true}%
          \fi
        }{}% /width
      }% /relative
    }}% /Iterate:cols
    %% 3b. Iteration: Verhältnis zwischen Breite der zu verändernden Spalte und Gesamtbreite der zu verändernden Spalten ermitteln und setzen
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
      \ht@eval@props{col-\the\ht@curcol}%
      \IfColPropEmpty{is-variable}{}{%
        \GetColProp{CurrentColWidth}{max-width}%
        \edef\ht@tempb{\CalcRatio{\CurrentColWidth}{\ht@tempdimd}}%
        \ht@tempdime\dimexpr\CurrentColWidth-\ht@tempb\ht@tempdimb\relax
        \ht@debugmsg{calcwidth}{Column \the\ht@curcol\space was: \CurrentColWidth, will be changed to \the\ht@tempdime\space (\ht@tempb\space x \the\ht@tempdimb).}%
        \SetColProp{max-width}{\the\ht@tempdime}%
      }%
    }}% /Iterate:cols
  \fi
  %% 4. Iteration: Setting col width
  \ht@tempdima\z@
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
    \ht@eval@props{col-\the\ht@curcol}%
    \GetColProp{CurrentColWidth}{max-width}%
    \global\advance\ht@tempdima\dimexpr\CurrentColWidth\relax
    \ht@debugmsg{calcwidth}{Finale Breite von Spalte \the\ht@curcol\space: \CurrentColWidth.}%
  }}%
  \ifx\htTableWidth\@empty\xdef\htTableWidth{\the\ht@tempdima}\relax\fi
  \global\ht@colsum=\z@\relax
}

\def\ht@CalculateRowHeights{%
  \ht@Iterate{\ht@currow}{1}{\the\ht@maxrow}{%
    \@ht@CalculateRowHeights
  }%
}
\def\@ht@CalculateRowHeights{%
    \global\ht@rowheight\z@
    \global\ht@rowdepth\z@
    \global\ht@max@lower@dp\z@
    \global\ht@max@upper@dp\z@
    \global\ht@max@upper@ht\z@
    \global\ht@row@insert@ht\z@
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
      \ht@eval@props{tr-\the\ht@currow}%
      \GetRowProp{ht@parent}{parent}%
      \HTEvalCellProps
      \GetCellProp{is@virtual}{virtual}%
      \ht@debugmsg{calcheight}{Calculating height\ifx\is@virtual\relax\else\space (is virtual)\fi.}%
      \GetCellPropDefault{AddCellHeight}{addheight}{\z@}%
      \ht@debugmsg{rowspan}{1st run, addheight: \AddCellHeight}%
      \IfCellPropEmpty{width}{\GetColProp{CurCellWidth}{max-width}}{\GetCellProp{CurCellWidth}{width}}%
      \IfCellPropEmpty{virtual}{% ¬ virtual
        \@ht@height@calctrue
        \ht@RenderCell
        \global\advance\ht@row@insert@ht\ht@cell@insert@ht
        \ifdim\ht@cur@lower@dp>\ht@max@lower@dp\relax\global\ht@max@lower@dp=\ht@cur@lower@dp\relax\fi
        \ifdim\ht@cur@upper@dp>\ht@max@upper@dp\relax\global\ht@max@upper@dp=\ht@cur@upper@dp\relax\fi
        \ifdim\ht@cur@upper@ht>\ht@max@upper@ht\relax\global\ht@max@upper@ht=\ht@cur@upper@ht\relax\fi
        \ht@debugmsg{calcheight}{Ht: \the\dimexpr\ht\htCellBox\relax, Dp: \the\dimexpr\dp\htCellBox\relax, Wd: \the\wd\htCellBox, Rem: \AddCellHeight}%
        \ht@debugmsg{calcheight}{low-dp: \the\ht@cur@lower@dp, up-dp: \the\ht@cur@upper@dp, up-ht: \the\ht@cur@upper@ht}%
        \expandafter\ht@tempdima\dimexpr\ht\htCellBox-\AddCellHeight\relax
        \ifdim\ht@rowheight<\ht@tempdima\relax\global\ht@rowheight\ht@tempdima\relax\fi
        \@ht@height@calcfalse
      }{% virtual
        \ifnum\ht@curcol=\ht@maxcol%
            %TODO
        \else%
          \GetCellProp{rowspan}{rowspan}%
          \ht@debugmsg{calcheight}{rowspan is: \rowspan}%
          \ifnum\rowspan<2\relax
            \GetNextColProp{NextCellWidth}{max-width}%
            \ht@tempdima\dimexpr\NextCellWidth+\CurCellWidth\relax
            \SetNextCellProp{width}{\the\ht@tempdima}%
            \ht@debugmsg{colspan}{colspan; width of next cell: \NextCellWidth}%
          \else
            %TODO
          \fi%
        \fi% /maxcol
      }% /is@virtual
      \global\let\CurCellWidth\relax
    }}%/Iterate:cols:1
    \advance\ht@rowheight\ht@max@lower@dp\relax
    \ht@debugmsg{footnote}{Calculated Footins-height: \the\ht@row@insert@ht}%
    \SetRowProp{footins-height}{\the\ht@row@insert@ht}%
    \SetRowProp{height}{\the\ht@rowheight}%
    \SetRowProp{max-upper-height}{\the\ht@max@upper@ht}%
    \SetRowProp{max-upper-depth}{\the\ht@max@upper@dp}%
    \SetRowProp{max-lower-depth}{\the\ht@max@lower@dp}%
    %% 2. Durchlauf: rowspans auffangen und darunterliegenden Zellen den freien Platz mitgeben:
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{{%
      \HTEvalCellProps
      \GetCellPropDefault{AddPrevCellHeight}{addheight}{\z@}%
      \IfCellPropEmpty{virtual}{}{%
        \GetCellPropDefault{rowspan}{rowspan}{1}%
        \ifnum\rowspan>1\relax
          %\SetRowProp{has-rowspan}{true}%
          \ht@tempdima\dimexpr\the\ht@rowheight+\AddPrevCellHeight\relax
          \SetBelowCellProp{addheight}{\the\ht@tempdima}%
          \ht@debugmsg{calcheight}{AddHeight to cell below: \the\ht@tempdima}%
        \fi
      }%
    }}%/Iterate:cols:2
  \ht@debugmsg{calcheight}{Calculated Row height: \the\ht@rowheight}%
}%/Iterate:rows

\def\HTProcessClass#1{%
  \ht@debugmsg{class}{\ht@cur@element\space class: #1}%
  \edef\ht@classname{#1}%
  \ifx\ht@classname\ht@str@default\else
    \ifx\ht@cur@element\ht@str@table\def\ht@proplistname{table-props}\else
      \ifx\ht@cur@element\ht@str@thead\def\ht@proplistname{thead-props}\else
        \ifx\ht@cur@element\ht@str@tbody\def\ht@proplistname{tbody-props}\else
          \ifx\ht@cur@element\ht@str@tfoot\def\ht@proplistname{tfoot-props}\else
            \ifx\ht@cur@element\ht@str@tr\def\ht@proplistname{tr-\the\ht@currow-props}\else
              \ifx\ht@cur@element\ht@str@col\def\ht@proplistname{col-\the\ht@curcol-props}\else
                \ifx\ht@cur@element\ht@str@td\def\ht@proplistname{td-\the\ht@currow-\the\ht@curcol-props}%
                \fi\fi\fi\fi\fi\fi\fi
    \expandafter\ifx\csname #1-property-list\endcsname\relax\else
      \expandafter\ht@append@to@props\expandafter{\csname #1-property-list\endcsname}{\ht@proplistname}%
    \fi
  \fi}

\def\HTResetTableProps{%
  \expandafter\global\expandafter\let\csname table-props\endcsname\relax
  \expandafter\global\expandafter\let\csname thead-props\endcsname\relax
  \expandafter\global\expandafter\let\csname tfoot-props\endcsname\relax
  \expandafter\global\expandafter\let\csname tbody-props\endcsname\relax
  \ht@Iterate{\ht@currow}{1}{\the\ht@maxrow}{%
    \expandafter\global\expandafter\let\csname tr-\the\ht@currow-props\endcsname\relax
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{%
      \expandafter\global\expandafter\let\csname col-\the\ht@curcol-props\endcsname\relax
      \expandafter\global\expandafter\let\csname \the\ht@currow-\the\ht@curcol-props\endcsname\relax
      \expandafter\global\expandafter\let\csname \ht@thecell-content\endcsname\relax
      \expandafter\global\expandafter\let\csname td-\the\ht@currow-\the\ht@curcol-props\endcsname\relax
    }}}
\def\HTInheritColProps{%
  \edef\ht@proplistname{\the\ht@currow-\the\ht@curcol-props}%
  \edef\@tempa{\expandafter\expandonce\expandafter{\csname col-\the\ht@curcol-props\endcsname}}%
  \expandafter\ht@append@to@props\expandafter{\@tempa}{\ht@proplistname}}%
\def\htAddClass{%
  \ifx\ht@cur@element\ht@str@tr\def\ht@cur@el{tr-\the\ht@currow}\else
    \ifx\ht@cur@element\ht@str@col\def\ht@cur@el{col-\the\ht@curcol}\else
      \ifx\ht@cur@element\ht@str@td\def\ht@cur@el{td-\the\ht@currow-\the\ht@curcol}\else
        \let\ht@cur@el\ht@cur@element
      \fi\fi\fi
  \@ifnextchar[{\ht@addclass}{\ht@addclass[\ht@cur@el]}}%]
\def\ht@addclass[#1]{\@ifnextchar[{\ht@add@class[#1]}{\ht@add@class[#1][td]}}%]
\def\ht@add@class[#1][#2]#3#4{%
  \edef\ht@scope{#2-}\edef\ht@list{#1-props}%
  \expandafter\ht@append@to@props\expandafter{\expandafter\expandafter\expandafter\def\expandafter\csname \ht@scope #3\endcsname{#4}}{\ht@list}%
}
\def\HTSetStyles#1{%
  \if!#1!\else
    \xdef\ht@cur@style{#1}%
  \fi}%
\def\htAddStyle#1{\gdef\ht@add@style{#1}}
\def\HTProcessStyle{%
  \ifx\ht@cur@style\@undefined
    \ifx\ht@add@style\@undefined\else
      \ht@debugmsg{style}{Generating style attribute in \ht@cur@element\space\ht@thecell.\ht@debugbrk Values: \ht@add@style}%
      \expandafter\ht@parse@style\expandafter{\ht@add@style}%
    \fi
  \else
    \ht@debugmsg{style}{Processing style attibute in \ht@cur@element\space\ht@thecell.\ht@debugbrk Values: \ht@cur@style}%
    \ifx\ht@add@style\@undefined\else
      \begingroup\expandafter\endgroup\expandafter\g@addto@macro\expandafter\ht@cur@style\expandafter{\expandafter;\ht@add@style}%
    \fi
    \expandafter\ht@parse@style\expandafter{\ht@cur@style}%
  \fi
  \global\let\ht@add@style\@undefined
}
\def\ht@set@prop#1#2#3#4{%
  \def\@argiv{#4}%
  \ht@debugmsg{prop}{Setting #1-#3 in #2-props to \meaning\@argiv}%
  \ifx\ht@no@expand\relax
    \edef\@tempa{\noexpand\expandafter\noexpand\def\noexpand\csname #1-#3\noexpand\endcsname{\expandafter\noexpand\@argiv}}%
    \let\ht@no@expand\@undefined
  \else
    \edef\@tempa{\noexpand\expandafter\noexpand\def\noexpand\csname #1-#3\noexpand\endcsname{\@argiv}}%
  \fi
  \expandafter\ht@append@to@props\expandafter{\@tempa}{#2-props}}

\DeclareRobustCommand\SetTableProp[2]{\ht@set@prop{table}{table}{#1}{#2}}

\DeclareRobustCommand\SetRowProp[2]{\ht@set@prop{tr}{tr-\ht@therow}{#1}{#2}}

\DeclareRobustCommand\SetColProp[2]{\ht@set@prop{col}{col-\the\ht@curcol}{#1}{#2}}

\DeclareRobustCommand{\SetCellContent}[1]{%
  \begingroup\expandafter\endgroup
    \expandafter\gdef\csname td-\ht@thecell-content\endcsname{#1}}

\DeclareRobustCommand{\GetCellContent}[1]{%
  \begingroup\expandafter\endgroup
    \expandafter\expandafter\expandafter\global
    \expandafter\expandafter\expandafter\let
      \expandafter\csname #1\expandafter\endcsname
      \csname td-\ht@thecell-content\endcsname}

\DeclareRobustCommand{\SetCellProp}[2]{%
  \ht@set@prop{td}{td-\ht@thecell}{#1}{#2}}

\DeclareRobustCommand{\ResetCellProp}[1]{\ht@append@to@props{\expandafter\let\csname td-#1\endcsname\relax}{td-\ht@thecell-props}}

\DeclareRobustCommand{\SetNextCellProp}[2]{%
  \bgroup
    \ht@temppropcnta\numexpr\ht@curcol+\@ne\relax
    \edef\ht@thecell{\ht@therow-\the\ht@temppropcnta}%
    \SetCellProp{#1}{#2}%
  \egroup}

\DeclareRobustCommand{\SetBelowCellProp}[2]{%
  \bgroup
    \ht@temppropcnta\numexpr\ht@currow+\@ne\relax
    \edef\ht@thecell{\the\ht@temppropcnta-\ht@thecol}%
    \SetCellProp{#1}{#2}%
  \egroup}

\DeclareRobustCommand{\GetCellProp}[2]{%
  \GetSpecificOrClassProp{#1}{td}{#2}}
\DeclareRobustCommand{\GetCellPropDefault}[3]{\GetSpecificOrClassProp{#1}{td}{#2}%
  \expandafter\ifx\csname#1\endcsname\relax\begingroup\expandafter\endgroup\expandafter\expandafter\expandafter\gdef\expandafter\expandafter\csname#1\endcsname\expandafter{#3}\fi}

\DeclareRobustCommand{\IfCellPropEmpty}[3]{\GetSpecificOrClassProp{ht@tempa}{td}{#1}\ifx\ht@tempa\relax#2\else#3\fi}
\DeclareRobustCommand{\IfCellPropText}[4]{\edef\@argii{#2}\GetSpecificOrClassProp{ht@tempa}{td}{#1}\ifx\ht@tempa\@argii#3\else#4\fi}

\DeclareRobustCommand{\GetColProp}[2]{\GetSpecificOrClassProp{#1}{col}{#2}}
\DeclareRobustCommand{\GetNextColProp}[2]{%
  \bgroup
    \advance\ht@curcol\@ne
    \ht@eval@props{col-\the\ht@curcol}%
    \GetSpecificOrClassProp{tempa}{col}{#2}%
    \expandafter\global\expandafter\let\csname #1\endcsname\tempa
  \egroup}

\DeclareRobustCommand{\IfColPropEmpty}[3]{\GetSpecificOrClassProp{ht@tempa}{col}{#1}\ifx\ht@tempa\relax#2\else#3\fi}
\DeclareRobustCommand{\IfColPropText}[4]{\edef\@argii{#2}\GetSpecificOrClassProp{ht@tempa}{col}{#1}\ifx\ht@tempa\@argii#3\else#4\fi}
\DeclareRobustCommand{\IfTablePropText}[4]{\edef\@argii{#2}\GetSpecificOrClassProp{ht@tempa}{table}{#1}\ifx\ht@tempa\@argii#3\else#4\fi}
\DeclareRobustCommand{\IfPropText}[5]{\edef\@argiii{#3}\GetSpecificOrClassProp{ht@tempa}{#1}{#2}\ifx\ht@tempa\@argiii#4\else#5\fi}

\DeclareRobustCommand{\GetRowProp}[2]{\GetSpecificOrClassProp{#1}{tr}{#2}}
\DeclareRobustCommand{\GetNextRowProp}[2]{\bgroup\advance\ht@currow\@ne\GetSpecificOrClassProp{#1}{tr}{#2}\egroup}

\DeclareRobustCommand{\GetScopedProp}[3]{\GetSpecificOrClassProp{#1}{#2}{#3}}%#1=Macro, #2=Skopus, #3=Property
\DeclareRobustCommand{\GetClassProp}[3]{\GetSpecificOrClassProp{#1}{#2}{#3}}%#1=Macro, #2=Skopus, #3 Property
\def\ht@get@fnt@param#1{%
  \GetCascCellProp{ht@font}{internal-#1}\ifx\ht@font\relax\else\expandafter\g@addto@macro\expandafter\ht@next\expandafter{\ht@font}\fi%
}
\DeclareRobustCommand{\GetFont}[1]{% #1=Macro
  \def\ht@next{\leavevmode}%
  \ht@get@fnt@param{font-family}%
  \ht@get@fnt@param{font-weight}%
  \ht@get@fnt@param{font-style}%
  \ht@get@fnt@param{font-variant}%
  \ht@get@fnt@param{font-size}%
  \ht@get@fnt@param{color}%
  \ifx\ht@next\@empty
    \expandafter\global\expandafter\let\csname #1\endcsname\relax
  \else
    \expandafter\global\expandafter\let\csname #1\endcsname\ht@next
  \fi
}
\DeclareRobustCommand{\GetCascCellProp}[2]{%
  \ht@debugmsg{verbose}{Cascading td-#2 (#1)}%
  \begingroup
    \expandafter\let\expandafter\next\csname td-#2\endcsname%
    \ifx\next\relax
      \expandafter\let\expandafter\next\csname col-#2\endcsname%
      \ifx\next\relax
        \expandafter\let\expandafter\next\csname tr-#2\endcsname%
        \ifx\next\relax
          \expandafter\let\expandafter\next\csname table-#2\endcsname%
          \ifx\next\relax
            \expandafter\let\expandafter\next\csname default-td-#2\endcsname%
          \fi
        \fi
      \fi
    \fi
    \ifx\next\@empty\let\next\relax\fi
    \ht@debugmsg{verbose}{Cascading td-#2: \meaning\next}%
    \begingroup\expandafter\endgroup\expandafter\global\expandafter\let\csname#1\endcsname\next
  \endgroup}% #1 Property name; #2 css-Eigenschaft
\DeclareRobustCommand{\GetSpecificOrClassProp}[3]{%#1=macro, #2=prefix, #3=scope-property
  \ht@debugmsg{verbose}{Getting #2-#3: \expandafter\meaning\csname #2-#3\endcsname\ht@debugbrk(default: \expandafter\meaning\csname default-#2-#3\endcsname)}%
  \begingroup
    \expandafter\let\expandafter\next\csname #2-#3\endcsname%
    \ifx\next\relax
      \ifx\next\relax
        \expandafter\let\expandafter\next\csname default-#2-#3\endcsname%
        \ifx\next\relax
          \expandafter\let\expandafter\next\csname default-#3\endcsname%
        \fi
      \fi
    \fi
    \ifx\next\@empty\let\next\relax\fi
    \begingroup\expandafter\endgroup\expandafter\global\expandafter\let\csname#1\endcsname\next
  \endgroup}
\HTRegisterCSSProperty{table}{is-twocolumn}{false}
\HTRegisterCSSProperty{table}{is-float}{false}
\HTRegisterCSSProperty{table}{float-position}{absolute}
\HTRegisterCSSProperty{table}{repeat-head}{true}
\HTRegisterCSSProperty{table}{repeat-foot}{true}
\HTRegisterCSSProperty{table}{repeat-caption}{false}
\HTRegisterCSSProperty{table}{break-table}{false}
\HTRegisterCSSProperty{table}{insert-tolerance}{2\baselineskip}
\HTRegisterCSSProperty{table}{allow-cell-breaks}{false}
\HTRegisterCSSProperty{tr}{do-break}{false}
\DeclareRobustCommand{\doTableBreak}{\ht@tempcnta\numexpr\ht@therow+1\relax\ht@set@prop{tr}{tr-\the\ht@tempcnta}{do-break}{true}}
\HTRegisterCSSProperty{table}{width}{auto}
\HTRegisterCSSProperty{table}{border-width}{\z@}
\HTRegisterCSSProperty{table}{border-style}{none}
\HTRegisterCSSProperty{table}{border-color}{}
\HTRegisterCSSProperty{table}{margin}{\z@}
\HTRegisterCSSProperty{table}{padding}{\z@}
\HTRegisterCSSProperty{table}{background-color}{}
\HTRegisterCSSProperty{table}{border-collapse}{collapse}
\HTRegisterCSSProperty{caption}{caption-side}{top}%
\HTRegisterCSSProperty{caption}{font}{}%
\HTRegisterCSSProperty{caption}{text-align}{left}
\HTRegisterCSSProperty{caption}{border-width}{\z@}
\HTRegisterCSSProperty{caption}{border-style}{none}
\HTRegisterCSSProperty{caption}{border-color}{}
\HTRegisterCSSProperty{caption}{margin}{\z@}
\HTRegisterCSSProperty{caption}{padding}{\z@}
\HTRegisterCSSProperty{caption}{width}{auto}
\HTRegisterCSSProperty{caption}{hyphen}{auto}
\HTRegisterCSSProperty{caption}{border-collapse}{collapse}
\HTRegisterCSSProperty{thead}{border-width}{\z@}
\HTRegisterCSSProperty{thead}{border-style}{none}
\HTRegisterCSSProperty{thead}{border-color}{}
\HTRegisterCSSProperty{thead}{margin}{\z@}
\HTRegisterCSSProperty{thead}{padding}{\z@}
\HTRegisterCSSProperty{thead}{background-color}{}
\HTRegisterCSSProperty{thead}{border-collapse}{collapse}
\HTRegisterCSSProperty{tfoot}{border-width}{\z@}
\HTRegisterCSSProperty{tfoot}{border-style}{none}
\HTRegisterCSSProperty{tfoot}{border-color}{}
\HTRegisterCSSProperty{tfoot}{margin}{\z@}
\HTRegisterCSSProperty{tfoot}{padding}{\z@}
\HTRegisterCSSProperty{tfoot}{background-color}{}
\HTRegisterCSSProperty{tfoot}{border-collapse}{collapse}
\HTRegisterCSSProperty{tbody}{border-width}{\z@}
\HTRegisterCSSProperty{tbody}{border-style}{none}
\HTRegisterCSSProperty{tbody}{border-color}{}
\HTRegisterCSSProperty{tbody}{margin}{\z@}
\HTRegisterCSSProperty{tbody}{padding}{\z@}
\HTRegisterCSSProperty{tbody}{background-color}{}
\HTRegisterCSSProperty{tbody}{border-collapse}{collapse}
\HTRegisterCSSProperty{col}{width}{}
\HTRegisterCSSProperty{col}{border-width}{\z@}
\HTRegisterCSSProperty{col}{border-style}{none}
\HTRegisterCSSProperty{col}{border-color}{}
\HTRegisterCSSProperty{col}{margin}{\z@}
\HTRegisterCSSProperty{col}{padding}{\z@}
\HTRegisterCSSProperty{col}{background-color}{}
\HTRegisterCSSProperty{col}{border-collapse}{collapse}
\HTRegisterCSSProperty{tr}{margin}{\z@}
\HTRegisterCSSProperty{tr}{padding}{\z@}
\HTRegisterCSSProperty{tr}{border-width}{\z@}
\HTRegisterCSSProperty{tr}{border-style}{none}
\HTRegisterCSSProperty{tr}{border-color}{}
\HTRegisterCSSProperty{tr}{border-collapse}{collapse}
\HTRegisterCSSProperty{tr}{background-color}{}
\HTRegisterCSSProperty{td}{padding}{0mm 1mm}
\HTRegisterCSSProperty{td}{margin}{\z@}
\HTRegisterCSSProperty{td}{border-color}{}
\HTRegisterCSSProperty{td}{border-width}{\arrayrulewidth}
\HTRegisterCSSProperty{td}{border-style}{solid}
\HTRegisterCSSProperty{td}{border-collapse}{collapse}
\HTRegisterCSSProperty{td}{background-color}{}
\HTRegisterCSSProperty{td}{text-align}{left}
\HTRegisterCSSProperty{td}{vertical-align}{top}
\HTRegisterCSSProperty{td}{font}{}
\HTRegisterCSSProperty{td}{hyphen}{none}
\HTRegisterCSSProperty{td}{hyphen-first}{true}
\HTRegisterCSSProperty{td}{transform}{}
\HTRegisterCSSProperty{}{class}{}
\HTRegisterCSSProperty{}{virtual}{}
\HTRegisterCSSProperty{}{parent}{}
\HTRegisterCSSProperty{td}{is-leftmost}{}
\HTRegisterCSSProperty{td}{is-topmost}{}
\HTRegisterCSSProperty{td}{is-rightmost}{}
\HTRegisterCSSProperty{td}{is-final}{}
\HTRegisterCSSProperty{td}{content}{}
\HTRegisterCSSProperty{td}{is-spanner}{}
\HTRegisterCSSProperty{td}{colspan}{}
\HTRegisterCSSProperty{td}{rowspan}{}
\HTRegisterCSSProperty{td}{addheight}{}
\HTRegisterCSSProperty{td}{no-strut}{none}
\HTRegisterCSSProperty{col}{col-type}{}
\HTRegisterCSSProperty{col}{max-width}{}
\HTRegisterCSSProperty{col}{is-variable}{}
\HTRegisterCSSProperty{tr}{height}{}
\HTRegisterCSSProperty{tr}{depth}{}
\HTRegisterCSSProperty{tr}{width}{}
\HTRegisterCSSProperty{tr}{has-rowspan}{}

\def\HTEvalCellProps{%
  \ht@debugmsg{verbose}{Render properties:\ht@debugbrk
 from table: \expandafter\meaning\csname table-props\endcsname\ht@debugbrk
 from \ht@parent: \expandafter\meaning\csname \ht@parent-props\endcsname\ht@debugbrk
 from tr-\ht@therow: \expandafter\meaning\csname tr-\ht@therow-props\endcsname\ht@debugbrk
 from col-\ht@thecol: \expandafter\meaning\csname col-\ht@thecol-props\endcsname\ht@debugbrk
 from td-\ht@thecell: \expandafter\meaning\csname td-\ht@thecell-props\endcsname\ht@debugbrk}%
  \ht@eval@props{table}%
  \ht@eval@props{\ht@parent}%
  \ht@eval@props{tr-\the\ht@currow}%
  \ht@eval@props{col-\the\ht@curcol}%
  \ht@eval@props{td-\ht@thecell}%
}
\def\ht@eval@no@strut{%
  \IfCellPropText{no-strut}{both}
    {\@ht@no@final@struttrue\@ht@no@init@struttrue}
    {\IfCellPropText{no-strut}{bottom}{\@ht@no@final@struttrue}{}%
     \IfCellPropText{no-strut}{top}{\@ht@no@init@struttrue}{}}%
   \IfCellPropText{hyphen-first}{true}{\@ht@hyph@first@wordtrue}{\@ht@hyph@first@wordfalse}}
\def\ht@RenderCell{{%
  \GetRowProp{ht@parent}{parent}%
  \HTEvalCellProps
  \GetCellContent{CellContent}%
  \GetCellPropDefault{colspan}{colspan}{1}%
  \GetCellPropDefault{int@colspan}{spanns-over-cols}{1}%
  \GetCellPropDefault{int@rowspan}{spanns-over-rows}{1}%
  \GetFont{CellFont}%
  \ht@eval@no@strut
  \ifx\CellFont\relax\else\ht@debugmsg{font}{Using font \meaning\CellFont}\fi%
  \if@ht@nat@calc
    \ht@protect@fragile
    \ht@debugmsg{colspan}{calculating natural width}%
    \IfCellPropEmpty{virtual}%
    {\global\setbox\htCellBox\hbox{\ht@build@cell{\CellFont\CellContent}}}% not virtual
    {\global\setbox\htCellBox\box\voidb@x}% virtual
  \else% ¬ \if@ht@nat@calc
    \GetColProp{CurColWidth}{max-width}%
    \GetCellPropDefault{CurCellWidth}{width}{\CurColWidth}%
    \if@ht@height@calc
      \ht@calc@savenotes
      \global\setbox\htCellBox\vbox{\hsize\CurCellWidth\ht@build@cell{\CellFont\CellContent}}%
      \ht@calc@spewnotes
    \else% ¬ \if@ht@height@calc
      \GetRowProp{RowHeight}{height}%
      \GetRowProp{MaxUpperDepth}{max-upper-depth}%
      \GetRowProp{MaxLowerDepth}{max-lower-depth}%
      \GetRowProp{MaxUpperHeight}{max-upper-height}%
      \GetCellPropDefault{AddCellHeight}{addheight}{\z@}%
      \IfCellPropEmpty{virtual}{%
        \global\setbox\htCellBox\vbox{%
          \vskip\dimexpr-\AddCellHeight\relax%
          \hsize\CurCellWidth
          \IfCellPropEmpty{is-spanner}{%
            \vsize=\RowHeight\relax
          }{%
            \expandafter\vsize\dimexpr\RowHeight+\AddCellHeight\relax
          }%
          \ht@build@cell{\CellFont\CellContent}%
        }%
        \expandafter\hskip\dimexpr-\wd\htCellBox+\CurColWidth\relax%
      }{% virtuelle Zellen dienen als Platzhalter:
        \global\setbox\ht@tempboxa\vbox{%
          \expandafter\vsize\dimexpr\RowHeight\relax
          \expandafter\hsize\dimexpr\CurColWidth\relax
          \ht@build@cell{\leavevmode}%
        }%
        \global\setbox\htCellBox\vbox{%
          \ccaStructStart{TD}%
          \ccaAddToStruct{\ht@structID@TR}%
          \csxdef{dummy-\ht@therow-\ht@thecol}{\ccaGetCurStruct{idx}}%
          \ccaStructEnd{TD}%
        }%
        \global\wd\htCellBox=\wd\ht@tempboxa\relax
        \global\ht\htCellBox=\ht\ht@tempboxa\relax
        \ht@debugmsg{render}{Height of virtual \ht@thecell: \the\ht\htCellBox}%
      }%
    \fi% /if@ht@height@ht@calc
    \GetCellPropDefault{bla}{virtual}{false}% FIXME: still needed?!?
  \fi% \if@ht@nat@calc
}}

\def\ht@get@dired@frame#1#2#3{%
  \def\@argiii{#3}%
  \expandafter\global\expandafter\let\csname internal-#1-margin-#2\endcsname\z@\relax
  \expandafter\global\expandafter\let\csname internal-#1-border-style-#2\endcsname\ht@str@none\relax
  \expandafter\global\expandafter\let\csname internal-#1-border-width-#2\endcsname\z@\relax
  \expandafter\global\expandafter\let\csname internal-#1-padding-#2\endcsname\z@\relax
  \ifx\@argiii\@empty
    \ifx\ht@scope\ht@str@td
      \GetCellProp{internal-#1-margin-#2}{margin-#2}%
      \GetCellProp{internal-#1-border-style-#2}{border-#2-style}%
      \GetCellProp{internal-#1-border-width-#2}{border-#2-width}%
      \GetCellProp{internal-#1-padding-#2}{padding-#2}%
    \else
      \GetScopedProp{internal-#1-margin-#2}{#1}{margin-#2}%
      \GetScopedProp{internal-#1-border-style-#2}{#1}{border-#2-style}%
      \GetScopedProp{internal-#1-border-width-#2}{#1}{border-#2-width}%
      \GetScopedProp{internal-#1-padding-#2}{#1}{padding-#2}%
    \fi
  \else
    \IfCellPropEmpty{#3}{}{%
      \GetScopedProp{internal-#1-margin-#2}{#1}{margin-#2}%
      \GetScopedProp{internal-#1-border-style-#2}{#1}{border-#2-style}%
      \GetScopedProp{internal-#1-border-width-#2}{#1}{border-#2-width}%
      \GetScopedProp{internal-#1-padding-#2}{#1}{padding-#2}%
    }%
  \fi
  \expandafter\ifx\csname internal-#1-border-style-#2\endcsname\ht@str@none
    \expandafter\global\expandafter\let\csname internal-#1-border-width-#2\endcsname\z@
  \fi
}
\def\ht@get@frame#1#2#3#4#5{%
  \ht@get@dired@frame{#1}{left}{#2}%
  \ht@get@dired@frame{#1}{top}{#3}%
  \ht@get@dired@frame{#1}{right}{#4}%
  \ht@get@dired@frame{#1}{bottom}{#5}}
\def\ht@build@padding@box#1#2{%
  \begingroup
    \hskip\csname internal-#1-padding-left\endcsname
    \vbox{%
      \advance\hsize-\dimexpr
         \csname internal-#1-padding-left\endcsname
        +\csname internal-#1-padding-right\endcsname
      \relax
      \advance\vsize-\dimexpr
         \csname internal-#1-padding-top\endcsname
        +\csname internal-#1-padding-bottom\endcsname
      \relax
      \vskip\csname internal-#1-padding-top\endcsname%
      \bgroup
        \ifx\ht@scope\ht@str@td
          \linewidth\hsize
          \if@ht@ally
            \GetCellProp{ht@is@th}{is-head}%
            \GetRowProp{cur@parent}{parent}%
            \ifx\ht@is@th\ht@str@true
              \def\ht@cell@struct{TH}%
            \else
              \def\ht@cell@struct{TD}%
            \fi
            \ccaStructStart{\ht@cell@struct}%
            \ccaAddKeep{}%
            \ifnum\int@colspan>\@ne\relax
              \ccaAddColSpan{\int@colspan}%
            \fi
            \ifnum\int@rowspan>\@ne\relax
              \ccaAddRowSpan{\int@rowspan}%
            \fi
            \ifx\ht@is@th\ht@str@true\ccaAddScope{Row}\fi
            \ifx\cur@parent\ht@str@thead\ccaAddScope{Column}\fi
          \fi%
          \hbox{\ht@transform@box{build}{#2}}%
          \if@ht@ally
            \ifnum\int@rowspan>\@ne\relax
              \edef\@target{\csname dummy-\the\numexpr\ht@therow-\int@rowspan+\@ne\relax-\the\numexpr\ht@thecol-\int@colspan+\@ne\relax\endcsname}%
              \ccaAddKeep{}%
              \expandafter\ccaReplaceStruct\expandafter{\@target}%
            \else
              \ccaAddToStruct{\ht@structID@TR}%
            \fi
            \ccaStructEnd{\ht@cell@struct}%
          \fi
        \else
          \IfCellPropEmpty{virtual}{#2}{}%
        \fi
      \egroup%
      \vskip\csname internal-#1-padding-bottom\endcsname
    }%
    \hskip\csname internal-#1-padding-right\endcsname
  \endgroup}
\def\ht@build@border@box#1#2{%
  \begingroup%
    \advance\vsize-\dimexpr
       \csname internal-#1-border-width-top\endcsname
      +\csname internal-#1-border-width-bottom\endcsname
    \relax
    \setbox\ht@tempboxa\hbox{%
      \ht@render@border{#1}{top}%
      \ht@render@border{#1}{left}%
      \advance\hsize-\dimexpr
         \csname internal-#1-border-width-left\endcsname
        +\csname internal-#1-border-width-right\endcsname
      \relax
      \hb@xt@\hsize{\ht@build@padding@box{#1}{#2}\hss}%
    }%
    \ifx\ht@scope\ht@str@td
      \GetCellProp{internal-background-color}{internal-background-color}%
    \else
      \GetScopedProp{internal-background-color}{#1}{internal-background-color}%
    \fi
    \expandafter\ifx\csname internal-background-color\endcsname\relax
    \else
      \smash{\rlap{\csname internal-background-color\endcsname
          \hskip\csname internal-#1-border-width-left\endcsname
          \if@ht@final@render\ccaVstructStart{TBackgroundColorBox}\fi
          \vrule
            \@width\dimexpr\wd\ht@tempboxa-\csname internal-#1-border-width-left\endcsname\relax
            \@height\dimexpr\ht\ht@tempboxa-\csname internal-#1-border-width-top\endcsname\relax
            \@depth\dp\ht@tempboxa
          \if@ht@final@render\ccaVstructEnd{TBackgroundColorBox}\fi
        }}%
    \fi
    \begingroup\box\ht@tempboxa\endgroup
    \ht@render@border{#1}{right}%
    \ht@render@border{#1}{bottom}%
  \endgroup}
\ccaAddToConfig{artifact}{TBackgroundColorBox={Type:Layout}}
\def\ht@render@border#1#2{%
  \ifdim\csname internal-#1-border-width-#2\endcsname>\z@\relax
    \ifx\ht@scope\ht@str@td
      \GetCascCellProp{internal-#1-border-color}{border-#2-color}%
    \else
      \GetScopedProp{internal-#1-border-color}{#1}{border-#2-color}%
    \fi
    \if@ht@final@render\ccaVstructStart{TRule}\fi
    \csname ht@border@#2\endcsname{\csname internal-#1-border-width-#2\endcsname}{\csname internal-#1-border-color\endcsname}{\csname internal-#1-border-style-#2\endcsname}%
    \if@ht@final@render\ccaVstructEnd{TRule}\fi
  \fi}
\ccaAddToConfig{artifact}{TRule={Type:Layout}}
\def\ht@build@margin@box#1#2{%
  \vskip\csname internal-#1-margin-top\endcsname
  \hskip\csname internal-#1-margin-left\endcsname
  \begingroup
    \advance\vsize-\dimexpr
       \csname internal-#1-margin-top\endcsname
      +\csname internal-#1-margin-bottom\endcsname
    \relax
    \advance\hsize-\dimexpr
       \csname internal-#1-margin-left\endcsname
      +\csname internal-#1-margin-right\endcsname
    \relax
    \ht@build@border@box{#1}{#2}%
  \endgroup
  \hskip\csname internal-#1-margin-right\endcsname
  \vskip\csname internal-#1-margin-bottom\endcsname}
\def\ht@build@frame#1#2#3#4#5#6{%
  \edef\ht@scope{#1}%
  \ht@get@frame{#1}{#2}{#3}{#4}{#5}%
  \IfCellPropText{border-collapse}{collapse}{\ht@process@border@collapse{#1}}{}%
  \ifx\ht@scope\ht@str@table
    \expandafter\let\csname internal-#1-margin-top\endcsname\z@\relax
    \expandafter\let\csname internal-#1-margin-bottom\endcsname\z@\relax
  \fi
  \ht@framewidth\dimexpr
     \csname internal-#1-margin-left\endcsname
    +\csname internal-#1-margin-right\endcsname
    +\csname internal-#1-border-width-left\endcsname
    +\csname internal-#1-border-width-right\endcsname
    +\csname internal-#1-padding-left\endcsname
    +\csname internal-#1-padding-right\endcsname
  \relax
  \if@ht@nat@calc
    \hskip\ht@framewidth
    \IfCellPropEmpty{internal-rotate}
      {\ifx\ht@scope\ht@str@td
         \setbox\z@\vtop{\hsize\maxdimen#6}%
         \ifdim\dp\z@<\baselineskip\relax
           \hbox{#6\ifhmode\strut\fi}%
         \else
           \hbox to \dimexpr\textwidth/\ht@maxcol\relax{\null}%
         \fi
       \else
         \hbox{#6\ifhmode\strut\fi}%
       \fi}
      {\ht@transform@box{calc}{#6}\hskip-\z@}%
  \else
    \if@ht@height@calc
      \advance\hsize-\ht@framewidth\relax%
      \ifx\ht@scope\ht@str@td
        \global\ht@cur@lower@dp=\z@\relax
        \global\ht@cur@upper@dp=\z@\relax
        \global\ht@cur@upper@ht=\z@\relax
        \linewidth\hsize
        \setbox\ht@tempboxa\vbox{\ht@transform@box{calc}{#6}}%
        \IfCellPropEmpty{internal-rotate}{}{\dp\ht@tempboxa=\dp\strutbox}%
        \global\ht@cur@lower@dp=\dimexpr\the\dp\ht@tempboxa\relax
        \setbox\z@\vtop{\unvcopy\ht@tempboxa}%
        \IfCellPropEmpty{internal-rotate}{}{\ht\z@=\ht\strutbox}%
        \global\ht@cur@upper@ht=\dimexpr\the\ht\z@\relax
        \global\ht@cur@upper@dp=\dimexpr\the\dp\z@\relax
      \fi
      \vskip\dimexpr
         \csname internal-#1-margin-top\endcsname
        +\csname internal-#1-border-width-top\endcsname
        +\csname internal-#1-padding-top\endcsname
        +\csname internal-#1-padding-bottom\endcsname
        +\csname internal-#1-border-width-bottom\endcsname
        +\csname internal-#1-margin-bottom\endcsname
      \relax
      \ifx\ht@scope\ht@str@td
        \unvbox\ht@tempboxa
        \global\setbox\z@\box\voidb@x
      \else
        #6
      \fi
    \else
      \ht@build@margin@box{#1}{#6}%
    \fi
  \fi}
\RequirePackage{graphicx}%
\def\htCellBreak{\break}
\long\def\ht@measure@parbox#1{%
  \begingroup
    \ht@protect@fragile
    \def\htCellBreak{\noexpand\ht@cr}%
    \def\tpBreak{\noexpand\ht@cr}%
    \protected@edef\@argi{#1}%
    \ht@tempdimc\z@%% width
    \long\def\ht@mesure@line ##1\ht@cr##2\@nil{%
      \if!##1!\else
        \setbox\ht@tempboxa\hbox{##1\strut}%
        \ifdim\wd\ht@tempboxa>\ht@tempdimc\relax
          \ht@tempdimc=\wd\ht@tempboxa
        \fi
        \if!##2!\else
          \ht@mesure@line##2\@nil
        \fi
      \fi
    }%
    \expandafter\ht@mesure@line\@argi\ht@cr\@nil
    \edef\@tempa{\endgroup
      \noexpand\SetCellProp{internal-transformbox-width}{\the\ht@tempdimc}%
      \noexpand\expandafter\noexpand\def\noexpand\csname td-internal-transformbox-width\endcsname{\the\ht@tempdimc}%
    }%
    \@tempa
}
\def\ht@align@box#1{%
  \if@ht@final@render
    \ht@hy@safe@footnote
    \ht@valign@box{\ht@halign#1}%
  \else
    \if@ht@nat@calc
      #1%
    \else
      \ht@halign#1%
    \fi
  \fi
}
\def\ht@transform@box#1#2{%
  \ht@set@alignment
  \ifx\ht@scope\ht@str@td
    \IfCellPropEmpty{internal-rotate}{\ht@align@box{#2}}{%
      \GetCellProp{htRotate}{internal-rotate}%
      \ifdim\htRotate\p@=\z@\relax
        \ht@align@box{#2}%
      \else
        \csname ht@#1@transform@box\endcsname{#2}%
      \fi
    }%
  \else
    #2%
  \fi
}
\def\ht@render@rotate@box#1{%
  \ifdim\htRotate\p@>\z@\relax\def\ht@rot@orig{origin=lB}\else\def\ht@rot@orig{origin=rB}\fi
  \expandafter\rotatebox\expandafter[\ht@rot@orig]{\htRotate}{%
    #1%
  }%
}
\def\ht@calc@transform@box#1{%
  \ht@tempdimc\z@
  \IfCellPropEmpty{internal-transformbox-width}{%
    \ht@measure@parbox{#1}%
  }{}%
  \GetCellPropDefault{rotWd}{internal-transformbox-width}{\the\ht@tempdimc}%
  \hb@xt@\z@{}%
  \ht@render@rotate@box{%
    \hsize\dimexpr\rotWd\relax
    \vbox{\ht@halign\leavevmode\ignorespaces#1}%
  }%
}
\def\ht@build@transform@box#1{%
  \edef\rotWd{\the\dimexpr\vsize-.5\dp\strutbox\relax}%
  \edef\rotHt{\the\hsize}%
  \ht@render@rotate@box{%
    \vsize\rotHt
    \hsize\rotWd
    \ifdim\htRotate\p@>\z@\relax\hskip.25\dp\strutbox\else\hskip-.25\dp\strutbox\fi
    \leavevmode
    \ht@valign@box{%
      \ht@hy@safe@footnote
      \ht@halign
      \leavevmode
      \ignorespaces
      #1}%
    \ifdim\htRotate\p@>\z@\relax\hskip-.25\dp\strutbox\else\hskip.25\dp\strutbox\fi
  }%
}%
\def\ht@build@tab@frame#1{%
  \ht@build@frame{table}{is-leftmost}{is-topmost}{is-rightmost}{is-final}{%
    \GetRowProp{Parent}{parent}%
    \ht@build@frame{\Parent}{is-leftmost}{is-upper}{is-rightmost}{is-lower}{%
      \ht@build@frame{tr}{is-leftmost}{}{is-rightmost}{}{%
        \ht@build@frame{td}{}{}{}{}{#1}}}}}

\def\ht@build@cell#1{%
  \ht@build@tab@frame{#1}}

\def\HTBeginTable{%
  \@ht@in@tabletrue
  \@ht@final@renderfalse
  \ifdim\pagegoal=\maxdimen
    \global\ht@init@pagegoal=\dimexpr\textheight-\baselineskip-\htAddToTop-\htInitSkip\relax
  \else
    \edef\ht@measurepage{\the\dimexpr\pagegoal-\pagetotal-\baselineskip-\htAddToTop-\htInitSkip\relax}%
    \expandafter\@tempdima\expandafter\dimexpr\ht@min@b@rows\baselineskip+2\baselineskip\relax
    \ifdim\ht@measurepage<\@tempdima
      \goodbreak
      \let\ht@omit@break\relax
      \global\ht@init@pagegoal=\dimexpr\textheight-\baselineskip-\htAddToTop-\htInitSkip\relax
    \else
      \global\ht@init@pagegoal=\ht@measurepage\relax
    \fi
  \fi
  \ht@footnoteheight\z@
  \ht@get@footnoteheight
  \global\ht@init@pagegoal\dimexpr\textheight-\ht@footnoteheight-\baselineskip-\htAddToTop-\htInitSkip\relax
  \ifdim\ht@init@pagegoal<\z@\relax
    \expandafter\global\ht@init@pagegoal\expandafter\dimexpr\pagegoal-(\pagetotal-\pagegoal)-\baselineskip\relax\fi
  \bgroup
  \tolerance\@M
  \parindent\z@
  \parskip\z@
  \hfuzz\maxdimen
  \hbadness=\@M
  \ht@adjust@linewidth
  \leftskip\z@ \rightskip\z@
  \global\advance\ht@curtab\@ne
  \HTResetInternal
  \let\ht@cur@element\ht@str@table
  \ht@infomsg{Processing table \string##\ifx\HTCurrentTableId\@empty\the\ht@curtab\else\HTCurrentTableId\space(internal ID: \string##\the\ht@curtab)\fi.}%
  \HTProcessClass{\htTableClass}%
  \HTProcessStyle%
  \bgroup
    \ht@eval@props{table}%
    \IfTablePropText{break-table}{true}{\global\@ht@break@tabletrue}{}%
    \expandafter\ifx\csname htTableWidth\endcsname\relax
      \GetScopedProp{htTableWidth}{table}{width}%
      \ifnum\ifx\htTableWidth\ht@str@auto1\else\ifx\htTableWidth\relax1\else0\fi\fi=1\relax
        \global\let\htTableWidth\@empty
      \else
        \ht@parse@width{\htTableWidth}{htTableWidth}%
      \fi
    \fi
    % \ifx\htTableWidth\@empty\else%
    %   \if@twocolumn
    %     \ifdim\htTableWidth>\columnwidth\relax
    %       \SetTableProp{is-twocolumn}{true}%
    %     \fi
    %   \fi
    % \fi
  \egroup
  \let\ht@parent\ht@str@tbody
  \let\ht@initial@run\relax
  \ccaDisable
}
\def\HTEndTable{%
  \let\ht@initial@run\@undefined
  \global\ht@maxrow\ht@currow
  \ht@flag@outermost@rows
  \global\ht@curcol\z@
  \ht@debugmsg{info}{Calculating table and column widths.}%
  \ht@CalculateColumnWidths
  \ht@debugmsg{info}{Calculating row heights.}%
  \ht@CalculateRowHeights
  \ht@currow\z@ \ht@curcol\z@
  \ht@debugmsg{info}{Rendering table.}%
  \bgroup
    \ht@eval@props{table}%
    \ht@render@final
    \htOutputTable
  \egroup
  \ht@debugmsg{info}{Resetting table properties...}%
  \HTResetTableProps
  \egroup
  \global\let\htTableWidth\relax
  \global\ht@h@offset\z@
  \let\leftskip\ltx@leftskip \let\rightskip\ltx@rightskip
  \ht@debugmsg{info}{Done with table \the\ht@curtab}%
  \@ht@final@rendertrue
  \@ht@in@tablefalse
}
\def\ht@adjust@linewidth{%
  \advance\ht@h@offset\leftskip
  \advance\ht@h@offset\@totalleftmargin
  \advance\linewidth-\leftskip
  \advance\linewidth-\rightskip
}
\def\HTCol#1{\relax
  \ht@tempcnta\@ne
  \ifx\htColSpan\@undefined\else\ht@tempcnta\htColSpan\fi
  \ht@tempdima\z@
  \ht@rIterate{\ht@tempcnta}{\htColSpan}{%
    \global\advance\ht@curcol\@ne\relax
    \let\ht@cur@element\ht@str@col
    \ifx\htColClass\@undefined\let\htColClass\ht@str@default\fi
    \HTProcessClass{\htColClass}%
    \HTProcessStyle
    \xdef\ht@tempa{#1}\relax
    \expandafter\edef\expandafter\htcol@wdt@arg{\expandafter\@stripstar#1*\@nil}%
    \ifx\ht@tempa\htcol@wdt@arg
      \expandafter\edef\expandafter\htcol@wdt@arg{\strippercent{#1}}%
      \ifx\ht@tempa\htcol@wdt@arg
        \SetColProp{col-type}{fixed}%
      \else
        \expandafter\edef\expandafter\htcol@wdt@arg{\CalcRatio{\htcol@wdt@arg pt}{100pt}\relax}%
      \fi
    \else
      \SetColProp{col-type}{relative}%
    \fi
    \ifx\htcol@wdt@arg\@empty
      \SetColProp{col-type}{empty}%
    \else
      \sbox\z@{\@tempdima=0\htcol@wdt@arg sp\relax}%
      \expandafter\ifdim\wd\z@>\z@\relax
        \SetColProp{col-type}{dimen}%
        \expandafter\ht@tempdima\dimexpr\htcol@wdt@arg\relax
        \SetColProp{width}{\the\ht@tempdima}%
      \else
        % \expandafter\ifdim\htcol@wdt@arg pt>\z@\relax
        \SetColProp{col-type}{relative}%
        % \else
        %   \expandafter\ht@tempdima\dimexpr\htTableWidth\relax
        %   \expandafter\ht@tempdima\dimexpr\htcol@wdt@arg\ht@tempdima\relax
        %   \SetColProp{width}{\the\ht@tempdima}%
        %   \SetColProp{col-type}{fixed}%
        % \fi
      \fi
    \fi
    \bgroup
      \ht@eval@props{col-\the\ht@curcol}%
      \GetColProp{WidthType}{col-type}%
      \IfColPropText{col-type}{relative}{%
        \SetColProp{width}{\htcol@wdt@arg}%
        \expandafter\global\expandafter\advance\expandafter\ht@colsum\htcol@wdt@arg pt\relax}{}%
      \ht@debugmsg{calcwidth}{Width of col element \ht@thecol: \the\ht@tempdima\space (\WidthType\ifx\htcol@wdt@arg\@empty\else, \htcol@wdt@arg\fi).}%
    \egroup
  }}

\def\HTTableCaption#1{%
  \def\ht@cur@element{caption}%
  \HTProcessClass{\htCaptionClass}%
  \HTProcessStyle%
  \gdef\htCaptionContent{\strut#1\strut\par}}
\def\HTBeginThead{%
  \global\ht@curcol\z@
  \global\let\ht@parent\ht@str@thead%
  \let\ht@cur@element\ht@str@thead
  \HTProcessClass{default-thead}%
  \ifx\htTheadClass\ht@str@default\else
    \HTProcessClass{\htTheadClass}%
  \fi
  \HTProcessClass{\htTableClass-thead}%
  \HTProcessStyle}
\def\HTEndThead{%
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{\SetCellProp{is-lower}{true}}%
  \global\let\ht@prev@parent\@undefined}
\def\HTBeginTfoot{%
  \global\ht@curcol\z@
  \let\ht@cur@element\ht@str@tfoot
  \let\ht@parent\ht@str@tfoot%
  \HTProcessClass{default-tfoot}%
  \HTProcessClass{\htTfootClass}%
  \HTProcessClass{\htTableClass-tfoot}%
  \HTProcessStyle%
  }
\def\HTEndTfoot{%
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{\SetCellProp{is-lower}{true}}%
  \global\let\ht@prev@parent\@undefined}
\def\HTBeginTbody{%
  \global\ht@curcol\z@
  \let\ht@cur@element\ht@str@tbody
  \HTProcessClass{default-tbody}%
  \HTProcessClass{\htTbodyClass}%
  \HTProcessClass{\htTableClass-tbody}%
  \HTProcessStyle%
  \global\let\ht@parent\ht@str@tbody}
\def\HTEndTbody{%
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{\SetCellProp{is-lower}{true}}%
  \ht@debugmsg{verbose}{Done reading}%
  \global\let\ht@prev@parent\@undefined}

\def\HTBeginTableRow{%
  \global\ht@curcol\z@
  \global\advance\ht@currow\@ne
  \ifx\ht@parent\ht@str@tbody\global\advance\ht@tbodyrows\@ne\fi
  \ifx\ht@parent\ht@str@tfoot\global\advance\ht@tfootrows\@ne\fi
  \ifx\ht@parent\ht@str@thead\global\advance\ht@theadrows\@ne\fi
  \ifx\ht@prev@parent\ht@parent\else
    \let\ht@isupper\relax
    \SetRowProp{is-first-in-parent}{true}%
  \fi
  \let\ht@cur@element\ht@str@tr
  \ht@debugmsg{rowspan}{Processing row \ht@therow}%
  \SetRowProp{parent}{\ht@parent}%
  \HTProcessClass{\htTrClass}%
  \HTProcessClass{\htTableClass-tr}%
  \HTProcessStyle%
  \ignorespaces}
\def\HTEndTableRow{%
  \ht@debugmsg{render}{curcol: \the\ht@curcol, curcell: \ht@thecell, spans: \last@rowspan x\last@colspan}%
  \global\let\ht@prev@parent\ht@parent
  \ifnum\ht@maxcol<\ht@curcol\relax
    \global\ht@maxcol\ht@curcol\relax
  \fi
  \let\ht@isupper\@undefined}
\def\ht@flag@outermost@rows{%
  \bgroup
    \ht@lastrow=\ht@maxrow\relax
    \ht@firstrow=\@ne\relax
    \ifnum\ht@tfootrows>\z@\relax
      \ifnum\ht@theadrows=\z@\relax
        \advance\ht@firstrow\ht@tfootrows\relax
      \fi
      \ht@lastrow=\numexpr\ht@maxrow-\ht@tbodyrows\relax
    \fi
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{%
      \bgroup
        \ht@currow=\ht@firstrow\relax
        \HTEvalCellProps
        \IfCellPropEmpty{rowspan}{}{\GetCellProp{rows}{rowspan}\advance\ht@currow\numexpr\rows-1\relax}%
        \SetCellProp{is-topmost}{true}%
      \egroup
      \ht@currow=\ht@lastrow\relax\SetCellProp{is-final}{true}%
    }%
  \egroup}
\long\def\HTTableCell#1{%
  \ifx\ht@isupper\relax\def\IsUpper{true}\fi
  \ht@debugmsg{rowspan}{is-first-in-parent: \meaning\IsUpper}%
  \global\advance\ht@curcol\@ne%
  \let\ht@cur@element\ht@str@td
  \ht@debugmsg{rowspan}{Processing cell \ht@thecell}%
  \def\ht@skip@spanners{%
    \let\next\relax%
    \bgroup
      \HTEvalCellProps
      \GetCellProp{is@spanner}{is-spanner}%
      \GetCellProp{Virt}{virtual}%
      \ht@debugmsg{rowspan}{Cell \ht@thecell\space is spanner: \ifx\is@spanner\relax 0\else1\fi, virtual: \ifx\Virt\relax0\else1\fi}%
      \ifnum\ifx\is@spanner\relax\ifx\Virt\relax0\else1\fi\else1\fi=1\relax%
        \GetCellPropDefault{Colspan}{colspan}{1}%
        \begingroup\expandafter\endgroup\expandafter\global\expandafter\advance\expandafter\ht@curcol\Colspan\relax%
        \global\let\next\ht@skip@spanners%
      \fi
    \egroup
    \next}%
  \ht@skip@spanners
  \expandafter\ht@tempcnta\numexpr\htCellRowspan\relax
  \global\let\last@rowspan\htCellRowspan
  \expandafter\ht@tempcntb\numexpr\htCellColspan\relax
  \global\let\last@colspan\htCellColspan
  \ht@rIterate{\ht@tempcnta}{\ht@tempcnta}{{%
      \ht@rIterate{\ht@tempcntb}{\ht@tempcntb}{{%
          \ifnum\ht@tempcntb>1
            \ht@ExpandContents%
          \else
            \ifnum\ht@tempcnta>1
              \ht@ExpandContents%
            \fi
          \fi
          \global\advance\ht@curcol\@ne\relax
        }}%
      \ifnum\ht@curcol=\@ne\relax\SetCellProp{is-leftmost}{true}\fi
      \ifnum\ht@tempcnta>1
        \global\advance\ht@currow\@ne\relax
        \SetRowProp{has-rowspan}{true}%
        \global\advance\ht@curcol-\htCellColspan\relax
      \else
        %% keine rowspans übrig:
        \global\advance\ht@curcol\m@ne\relax
        \ResetCellProp{virtual}%
      \fi
    }}%
  \ht@debugmsg{rowspan}{Setting contents of cell \ht@thecell.}%
  \ht@debugmsg{colspan}{Setting contents of cell \ht@thecell.}%
  \SetCellProp{class}{\htTdClass}%
  \SetCellContent{%
    \strut
    \if@ht@no@init@strut\par\vspace*{-\baselineskip}\fi
    \if@ht@hyph@first@word\ifhmode\nolinebreak\hskip\z@\fi\fi
    \ignorespaces
    #1%
    \if@ht@hyph@first@word\kern\z@\fi% to ensure hyphenation is applied when there is only a single word in the cell.
    \if@ht@no@final@strut\else\strut\fi}%
  \@tempswafalse
  \ifnum\htCellColspan>1\relax\@tempswatrue\fi
  \ifnum\htCellRowspan>1\relax\@tempswatrue\fi
  \ht@debugmsg{rowspan}{Cell \ht@thecell: rowspan=\htCellRowspan, colspan=\htCellColspan\if@tempswa; setting is-spanner\fi}%
  \if@tempswa\SetCellProp{is-spanner}{true}%
    \SetCellProp{spanns-over-cols}{\htCellColspan}%
    \SetCellProp{spanns-over-rows}{\htCellRowspan}%
    \ifnum\htCellColspan>1
      \advance\ht@curcol\numexpr-\htCellColspan+1\relax
      \HTInheritColProps
      \advance\ht@curcol\numexpr+\htCellColspan-1\relax
    \fi
  \else
    \HTInheritColProps
  \fi
  \HTProcessClass{\htTdClass}%
  \HTProcessStyle%
  \expandafter\ifnum\numexpr\ht@curcol-\htCellColspan\relax=0\relax
    \SetCellProp{is-leftmost}{true}%
  \fi
  \ifx\IsUpper\ht@str@true\SetCellProp{is-upper}{true}\fi
  \SetCellProp{is-head}{\ifx\is@head@cell\relax true\else false\fi}%
  \global\advance\ht@currow\numexpr-\htCellRowspan+1\relax
  \let\is@leftmost\@undefined}
\def\ht@ExpandContents{%
  \ht@debugmsg{rowspan}{Cell \ht@thecell: rowspan=\the\ht@tempcnta, colspan=\the\ht@tempcntb; setting to  virtual}%
  \ht@debugmsg{colspan}{Cell \ht@thecell: rowspan=\the\ht@tempcnta, colspan=\the\ht@tempcntb; setting to  virtual}%
  \SetCellProp{class}{\htTdClass}%
  \SetCellProp{virtual}{true}%
  \SetCellProp{colspan}{\the\ht@tempcntb}%
  \SetCellProp{rowspan}{\the\ht@tempcnta}}

\newdimen\ht@savsk \ht@savsk\z@
\newdimen\ht@footnoteheight
\def\ht@get@footnoteheight{%
  \bgroup
    \output{%
      \global\setbox\@holdpg\vbox{\unvbox\@holdpg\unvbox\@cclv}%
      \global\advance \ht@footnoteheight \ht\@holdpg
      \global\advance \ht@footnoteheight \dp\@holdpg
      \unvbox\@holdpg
      \ifvoid\footins \else
        \global\advance \ht@footnoteheight \ht\footins
        \global\advance \ht@footnoteheight \skip\footins
        \global\advance \ht@footnoteheight \dp\footins
      \fi
      \ifvbox \@kludgeins
        \ifdim \wd\@kludgeins=\z@
          \global\advance \ht@footnoteheight \ht\@kludgeins
        \fi
      \fi
      \@reinserts
      \ifx\@currbox\@undefined\else\ifvoid\@currbox\else\@addtocurcol\fi\fi
      \addpenalty \interlinepenalty
      \global \vsize \@colroom
    }%
    \ifx\ht@omit@break\relax\else
      \ht@savsk\lastskip% saving \lastskip
      \pagebreak
      \vskip-\ht@savsk\vskip\ht@savsk% restoring \lastskip
    \fi
  \egroup
  }
\newtoks\HT@ftn
\long\def\HT@ftntext#1{%
  \edef\@tempa{\the\HT@ftn\noexpand\footnotetext
    [\ifx\@thefnmark\@undefined\the\csname c@\@mpfn\endcsname\else\@thefnmark\fi]}%
  \global\HT@ftn\expandafter{\@tempa{#1}}}%
\long\def\HT@xftntext[#1]#2{%
  \global\HT@ftn\expandafter{\the\HT@ftn\footnotetext[#1]{#2}}}
\@ifpackageloaded{footnote}{}{\newif\if@savingnotes\@savingnotesfalse}
\def\ht@savenotes{\if@savingnotes\else\let\@footnotetext\HT@ftntext\let\@xfootnotenext\HT@xftntext\fi}%
\def\ht@spewnotes{\if@savingnotes\else\global\HT@ftn\expandafter{\expandafter}\the\HT@ftn\fi}%
\newbox\ht@footnotebox
\long\def\ht@footnotetext#1{\global\setbox\ht@footnotebox\vbox{\unvbox\ht@footnotebox%
    \reset@font\footnotesize
    \interlinepenalty\interfootnotelinepenalty
    \splittopskip\footnotesep
    \splitmaxdepth \dp\strutbox \floatingpenalty \@MM
    \hsize\columnwidth \@parboxrestore
    \protected@edef\@currentlabel{%
       \csname p@footnote\endcsname\@thefnmark
    }%
    \color@begingroup
      \@makefntext{%
        \rule\z@\footnotesep\ignorespaces#1\@finalstrut\strutbox}%
    \color@endgroup}}%
\def\ht@calc@savenotes{%
  \renewcommand\index[2][]{}%
  \renewcommand\marginpar[2][]{}%
  \renewcommand\glossary[2][]{}%
  \let\label\@gobble
  \if@savingnotes
    \renewcommand\footnote[2][\the\c@footnote]{\def\@thefnmark{##1}\@makefnmark}%
  \else%
    \renewcommand\footnote[1][\the\c@footnote]{\def\@thefnmark{##1}\@makefnmark\ht@footnotetext}%
    \global\setbox\ht@footnotebox\box\voidb@x
  \fi%
  \global\ht@cell@insert@ht\z@
}%
\def\ht@calc@spewnotes{%
  \if@savingnotes\else%
    \@tempdima\dimexpr\ht\ht@footnotebox+\dp\ht@footnotebox\relax
    \global\ht@cell@insert@ht=\the\@tempdima\relax
    \global\setbox\ht@footnotebox\box\voidb@x
  \fi}
\def\ht@build@rowbox{%
  \global\setbox\htRowBox\hb@xt@\dimexpr\htTableWidth+\ht@h@offset{%
    \if@ht@ally
      \ccaStructStart{TR}%
      \xdef\ht@structID@TR{\ccaGetCurStruct{idx}}%
    \fi
    \hskip\ht@h@offset
    \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{%
      \begingroup
        \@ht@final@rendertrue
        \ht@savenotes
        \ht@RenderCell%
        \box\htCellBox
        \@ht@final@renderfalse
      \endgroup
    }%% /Iterate::cols
    \if@ht@ally
      \ccaStructEnd{TR}%
    \fi
  }% /rowbox
}
\def\ht@build@macro@box#1#2#3#4{%
  \expandafter\ifnum\numexpr #3-#2+1\relax>0\relax
    \ht@Iterate{\ht@currow}{#2}{#3}{{%
        \ht@eval@props{tr-\the\ht@currow}%
        \ht@build@rowbox
        \GetRowProp{insertHt}{footins-height}%
        \expandafter\global\expandafter\advance\csname ht@#1@fins@ht\endcsname\insertHt\relax
        \expandafter\global\expandafter\setbox\csname #1\endcsname\vbox{%
          \if@ht@ally\ifnum\ht@currow=#2\relax
              \ccaVstructStart{#4}%
              \csxdef{ht@structID@#4}{\ccaGetCurStruct{idx}}%
            \fi\fi
          \expandafter\unvbox\csname #1\endcsname%
          \nointerlineskip%
          \box\htRowBox
          \ccaMoveStruct{\ht@structID@TR}%
          \nopagebreak%
          \if@ht@ally\ifnum\ht@currow=#3\relax
              \ccaVstructEnd{#4}%
            \fi\fi
        }% /rowboxname
    }}%
  \else
    \expandafter\global\expandafter\setbox\csname #1\endcsname\box\voidb@x
  \fi}
\def\ht@build@tbody@box{%
  \if@ht@break@table
    \ht@determine@break@points
  \fi
  \edef\ht@start@tbody@row{\the\numexpr\ht@theadrows+\ht@tfootrows+1\relax}%
  \ht@Iterate{\ht@currow}%
    {\ht@start@tbody@row}%
    {\ht@maxrow}{{%
      \ht@eval@props{tr-\the\ht@currow}%
      \ht@build@rowbox
      \global\setbox\htTbodyBox\vbox{%
        \if@ht@ally\ifnum\ht@currow=\ht@start@tbody@row\relax
            \ccaVstructStart{TBody}%
            \xdef\ht@structID@TBody{\ccaGetCurStruct{idx}}%
          \fi\fi
        \unvbox\htTbodyBox%
        \nointerlineskip%
        \IfPropText{tr}{do-break}{true}{%
          \ht@insert@page@breakers
        }{}%
        \box\htRowBox%
        \ccaMoveStruct{\ht@structID@TR}%
        \ht@spewnotes
        \nopagebreak
        \if@ht@ally\ifnum\ht@currow=\ht@maxrow\relax
            \ccaVstructEnd{TBody}%
          \fi\fi
      }% /htTbodyBox
    }}%
}
\def\ht@insert@page@breakers{%
  \IfTablePropText{repeat-foot}{true}{\nopagebreak\nointerlineskip%
    \unvcopy\htTfootBox}{}%
  \IfTablePropText{repeat-caption}{true}{%
    \htOutputCaption{bottom}%
    \goodbreak
    \htOutputCaption{top}%
  }{\goodbreak}%
  \IfTablePropText{repeat-head}{true}{%
    \unvcopy\htTheadBox\nopagebreak%
    \nointerlineskip}{%
  }}
\def\htBuildTableBox{%
  \global\setbox\htTableBox\vbox{%
    \ifdim\TabMarginTop=\z@\else\addvspace{\TabMarginTop}\fi%
    \@cc@is@finaltrue
    \unvcopy\htTheadBox
    \nobreak\nointerlineskip%
    \ht@spewnotes
    \unvbox\htTbodyBox
    \nobreak\nointerlineskip%
    \unvbox\htTfootBox%
    \ht@spewnotes
    \htOutputCaption{bottom}%
    \ifdim\TabMarginBot=\z@\else\addvspace{\TabMarginBot}\fi%
  }}%
\def\ht@RenderCaption{%
  \GetScopedProp{CaptionWidth}{caption}{width}%
  \ifx\CaptionWidth\ht@str@auto
    \let\CaptionWidth\htTableWidth\relax
  \fi
  \GetScopedProp{CaptionFont}{caption}{font}%
  \GetScopedProp{chAlign}{caption}{text-align}%
  \GetScopedProp{cHyphen}{caption}{hyphen}%
  \expandafter\let\expandafter\ht@align\csname ht@halign@\chAlign @\cHyphen\endcsname
  \begingroup
    \@ht@height@calctrue
    \ht@protect@fragile
    \global\setbox\htCaptionBox\vbox{\hsize\dimexpr\CaptionWidth-\TabMarginRight\relax\ht@build@frame{caption}{}{}{}{}{{\ht@align\CaptionFont\htCaptionContent}}}%
    \@ht@height@calcfalse
  \endgroup
  \begingroup
    \hsize\wd\htCaptionBox
    \vsize\ht\htCaptionBox
    \ht@savenotes
    \GetScopedProp{CapMargL}{caption}{margin-left}%
    \expandafter\edef\csname caption-margin-left\endcsname{\the\dimexpr\CapMargL+\TabMarginLeft+\ht@h@offset\relax}%
    \global\setbox\htCaptionBox\vbox{\ht@build@frame{caption}{}{}{}{}{{\ht@align\CaptionFont\htCaptionContent}}}%
  \endgroup
}%
\def\ht@render@final{%
  \global\ht@table@height=\z@\relax
    \GetScopedProp{TabMarginTop}{table}{margin-top}%
    \GetScopedProp{TabMarginBot}{table}{margin-bottom}%
    \GetScopedProp{TabMarginLeft}{table}{margin-left}%
    \GetScopedProp{TabMarginRight}{table}{margin-right}%
    \ccaEnable
    \ifx\htCaptionContent\relax\else
      \bgroup
        \ht@eval@props{caption}%
        \ht@RenderCaption
      \egroup
    \fi
    \ht@build@macro@box{htTheadBox}{1}{\the\ht@theadrows}{THead}%
    \ht@build@macro@box{htTfootBox}{\numexpr\the\ht@theadrows+\@ne\relax}{\numexpr\the\ht@theadrows+\the\ht@tfootrows\relax}{TFoot}%
    \ht@build@tbody@box%
    \htBuildTableBox
}
\def\ht@determine@break@points{%
  \ifnum\ht@maxrow>\numexpr\ht@min@b@rows\relax
    \ht@calculate@add@to@top
    \ht@calculate@add@to@bottom
    \global\ht@table@height=\dimexpr
       \ht@add@to@top
      +\ht@add@to@bottom
      +\ht@htTheadBox@fins@ht
    \relax
    \IfTablePropText{repeat-foot}{true}{%
      \ifdim\ht@htTfootBox@fins@ht>\z@\relax
        \global\advance\ht@table@height\ht@htTfootBox@fins@ht
      \fi
      \global\ht@htTfootBox@fins@ht\z@}{}%
    \global\ht@htTheadBox@fins@ht\z@
    \global\let\ht@used@footins@tolerance\@undefined
    \ht@Iterate{\ht@currow}%
      {\the\numexpr\ht@theadrows+\ht@tfootrows+1\relax}%
      {\ht@maxrow}
      {{\ht@eval@props{tr-\the\ht@currow}%
        \IfPropText{tr}{do-break}{true}
          {\ht@prepare@break}
          {\GetRowProp{rowHeight}{height}%
           \GetRowProp{insertHt}{footins-height}%
           \GetRowProp{rowspan}{has-rowspan}%
           \ifnum\ht@currow=\ht@maxrow
             \edef\rowHeight{\dimexpr\rowHeight+\htAddToBottom\relax}%
           \fi
           \ht@debugmsg{footnote}{Adding Footins-height: \insertHt}%
           \ifx\ht@used@footins@tolerance\@undefined
             \ifdim\insertHt>\z@\relax
               \GetScopedProp{insertTol}{table}{insert-tolerance}%
               \global\advance\ht@table@height\dimexpr\insertTol\relax
               \global\let\ht@used@footins@tolerance\relax
             \fi
           \fi
           \global\advance\ht@table@height\dimexpr\rowHeight+\insertHt\relax
           \expandafter\ifnum\numexpr\ht@currow-\ht@theadrows-\ht@tfootrows\relax>\numexpr\ht@min@p@rows\relax\relax
             \ifdim\ht@table@height<\ht@init@pagegoal\else
               % \ifdim\rowHeight>2\baselineskip\relax
               %   \IfPropText{table}{allow-cell-breaks}{true}{\ht@find@row@break@point}{\ht@find@row@break@point}%
               % \else
               \ht@find@row@break@point
               % \fi
             \fi
           \else
             \ifdim\ht@table@height<\ht@init@pagegoal\relax\else
               \global\ht@init@pagegoal=\textheight\relax
               \global\advance\ht@init@pagegoal-\htInitSkip\relax
               \global\let\ht@used@footins@tolerance\@undefined
             \fi
           \fi
       }}}%
  \fi
}
\def\ht@find@cell@break@point{%
  \advance\ht@currow\m@ne
  \ht@prepare@break
  \advance\ht@currow\@ne
}
\def\ht@find@row@break@point{%
  \ht@tempcnta=\ht@currow\relax
  \loop
  \ifx\rowspan\ht@str@true
    \global\advance\ht@table@height-\dimexpr\rowHeight\relax
    \global\advance\ht@currow\m@ne
    \expandafter\let\csname tr-has-rowspan\endcsname\relax
    \expandafter\let\csname tr-height\endcsname\z@\relax
    \ht@eval@props{tr-\the\ht@currow}%
    \GetRowProp{rowspan}{has-rowspan}%
    \GetRowProp{rowheight}{height}%
  \repeat
  \ifnum\ht@min@p@rows=\z@\relax\let\ht@min@p@rows\@ne\relax\fi
  \expandafter\ifnum\numexpr\ht@currow-\ht@theadrows-\ht@tfootrows\relax>\ht@min@p@rows\relax
    \ifnum\ht@currow=\ht@last@break@row\relax
      \ht@warnmsg{Spanned row block in \string##Tab\the\ht@curtab\space too large for page!}
      \global\ht@init@pagegoal=\textheight\relax
      \global\advance\ht@init@pagegoal-\htInitSkip\relax
      \global\let\ht@used@footins@tolerance\@undefined
      \global\ht@currow\numexpr\ht@tempcnta+\@ne\relax
    \else
      \ht@prepare@break
    \fi
  \else
    \global\ht@init@pagegoal=\textheight\relax
    \global\advance\ht@init@pagegoal-\htInitSkip\relax
    \global\let\ht@used@footins@tolerance\@undefined
    \global\ht@currow\numexpr\ht@tempcnta+\@ne\relax
  \fi
}

\def\ht@prepare@break{%
  \global\ht@last@break@row\ht@currow%
  \ht@eval@props{tr-\the\ht@currow}%
  \GetRowProp{rowHeight}{height}%
  \ht@expand@macro@borders
  \SetRowProp{do-break}{true}%
  \ht@calculate@add@to@top
  \ht@calculate@add@to@bottom
  \global\ht@table@height=\dimexpr
     \ht@add@to@top
    +\ht@add@to@bottom
    +\rowHeight
  \relax
  \global\ht@init@pagegoal=\textheight\relax
}%
\def\ht@expand@macro@borders{{%
  \advance\ht@currow\m@ne
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{\SetCellProp{is-lower}{true}}%
  \@ht@CalculateRowHeights
  \advance\ht@currow\@ne
  \ht@Iterate{\ht@curcol}{1}{\the\ht@maxcol}{\SetCellProp{is-upper}{true}}%
  \@ht@CalculateRowHeights
}}
\def\ht@calculate@add@to@top{%
  \global\ht@add@to@top=\htAddToTop\relax
  \ifvoid\htCaptionBox\else
    \IfTablePropText{repeat-caption}{true}{%
      \IfPropText{caption}{caption-side}{top}{%
        \global\advance\ht@add@to@top\dimexpr
           \ht\htCaptionBox
          +\dp\htCaptionBox
        \relax}{}%
    }{}%
  \fi
  \ifvoid\htTheadBox\else
    \IfTablePropText{repeat-head}{true}{%
      \global\advance\ht@add@to@top\dimexpr
         \ht\htTheadBox
        +\dp\htTheadBox
      \relax
    }{}%
  \fi}
\def\ht@calculate@add@to@bottom{%
  \global\ht@add@to@bottom=\z@\relax
  \ifvoid\htTfootBox\else
    \IfTablePropText{repeat-foot}{true}{%
      \global\advance\ht@add@to@bottom\dimexpr
         \ht\htTfootBox
        +\dp\htTfootBox
      \relax
    }{}%
  \fi
  \ifvoid\htCaptionBox\else
    \IfTablePropText{repeat-caption}{true}{%
      \IfPropText{caption}{caption-side}{bottom}{%
        \global\advance\ht@add@to@bottom\dimexpr
           \ht\htCaptionBox
          +\dp\htCaptionBox
        \relax
      }{}%
    }{}%
  \fi}
\def\htOutputCaption#1{%
  \ifx\htCaptionContent\relax\else
    \IfPropText{caption}{caption-side}{#1}{%
        \copy\htCaptionBox
        \ht@spewnotes
    }{}%
  \fi}
\def\htOutputTable{%
  % \IfTablePropText{is-float}{true}%
  % {\htOutputFloatTable}%
  %{
  \if@ht@ally\ccaStructStart{Table}%
    \ifx\ht@structID@THead\@undefined\else\ccaMoveStruct{\ht@structID@THead}\fi%
    \ifx\ht@structID@TBody\@undefined\else\ccaMoveStruct{\ht@structID@TBody}\fi%
    \ifx\ht@structID@TFoot\@undefined\else\ccaMoveStruct{\ht@structID@TFoot}\fi%
  \fi%
  \unvbox\htTableBox
  \if@ht@ally\ccaStructEnd{Table}\fi%
  %}%
}

 % \RequirePackage{dblfloatfix}
 %  \def\htOutputFloatTable{%
 %  \IfTablePropText{float-position}{absolute}{\def\ht@float@pos{h}}{%
 %    \IfTablePropText{float-position}{bottom}{\def\ht@float@pos{b}}{%
 %      \def\ht@float@pos{t}}}%
 %  \IfTablePropText{is-twocolumn}{true}{%
 %    \ht@debugmsg{float}{Table is floating, starred and pos is \ht@float@pos}%
 %    \if@firstcolumn
 %      \ifdim\ht@table@height<\ht@init@pagegoal\relax
 %        \expandafter\table\expandafter[\ht@float@pos]%
 %          \unvcopy\htTableBox
 %        \endtable
 %        \expandafter\table\expandafter[\ht@float@pos]%
 %          \vrule \@width\z@ \@height\ht\htTableBox\@depth\dp\htTableBox
 %        \endtable
 %      \else
 %        \expandafter\begin\expandafter{\expandafter table*\expandafter}\expandafter[\ht@float@pos]%
 %          \box\htTableBox
 %        \end@dblfloat\endgroup
 %      \fi
 %    \else
 %      \expandafter\begin\expandafter{\expandafter table*\expandafter}\expandafter[\ht@float@pos]%
 %        \box\htTableBox
 %      \end@dblfloat\endgroup
 %    \fi
 %  }{%
 %    \ht@debugmsg{float}{Table is floating and pos is \ht@float@pos!}%
 %    \expandafter\table\expandafter[\ht@float@pos]%
 %      \unvbox\htTableBox%
 %    \endtable
 %  }}

\def\ht@parse@kv#1=#2\@nil{%
  \expandafter\def\csname ht@\ht@ltx@cur@env @attr@#1\endcsname{#2}}
\def\ht@parse@attributes #1,#2,\@nil{%
  \if!#1!\else
    \ht@parse@kv#1\@nil
    \if!#2!\else
      \ht@parse@attributes#2,\@nil
    \fi\fi}
\let\ht@ltx@label\label
\def\ht@ltx@reg@style@and@class{%
  \expandafter\expandafter\expandafter\let
    \expandafter\csname ht\ht@ltx@cur@env Class\expandafter\endcsname
    \csname ht@\ht@ltx@cur@env @attr@class\endcsname%
  \expandafter\ifx\csname ht\ht@ltx@cur@env Class\endcsname\relax
    \expandafter\def\csname ht\ht@ltx@cur@env Class\endcsname{default}%
  \fi
  \expandafter\expandafter\expandafter\let
    \expandafter\csname ht\ht@ltx@cur@env Style\expandafter\endcsname
    \csname ht@\ht@ltx@cur@env @attr@style\endcsname%
  \expandafter\ifx\csname ht\ht@ltx@cur@env Style\endcsname\relax
    \expandafter\def\csname ht\ht@ltx@cur@env Style\endcsname{}%
  \fi
  \expandafter\HTSetStyles\expandafter{\csname ht\ht@ltx@cur@env Style\endcsname}%
}
\def\ht@ltx@define#1{%
  \expandafter\ifx\csname#1\endcsname\relax
    \expandafter\def\csname#1\endcsname{\ht@env@not@in@htmltab@error{#1}}%
    \ifx\ht@isenv\relax
      \expandafter\let\csname#1\endcsname\relax
    \fi
  \else
    \expandafter\expandafter\expandafter\let\expandafter\expandafter\csname #1Original\expandafter\endcsname\csname#1\endcsname
  \fi}

\let\ht@isenv\relax
\ht@ltx@define{tbody}
\ht@ltx@define{thead}
\ht@ltx@define{tfoot}
\ht@ltx@define{colgroup}
\let\ht@isenv\@undefined
\ht@ltx@define{HTtr}
\ht@ltx@define{HTtd}
\ht@ltx@define{HTth}
\ht@ltx@define{HTcol}
\ht@ltx@define{HTcaption}
\def\ht@register@macro#1{\expandafter\long\expandafter\def\csname #1\endcsname{\@ifnextchar[{\csname ht@#1\endcsname}{\csname ht@#1\endcsname[]}}}%]
\def\ht@register@env#1{\expandafter\def\csname #1\endcsname{\@ifnextchar[{\csname ht@#1\endcsname}{\csname ht@#1\endcsname[]}}%]
  \expandafter\expandafter\expandafter\let\expandafter\csname end#1\expandafter\endcsname\csname endht@#1\endcsname}
\def\ht@ltx@prepare@env@macros{%
  \def\@captype{table}%
  \ht@register@env{tbody}%
  \ht@register@env{tfoot}%
  \ht@register@env{thead}%
  \ht@register@env{colgroup}%
  \ht@register@macro{HTcol}%
  \ht@register@macro{HTtr}%
  \ht@register@macro{HTtd}%
  \ht@register@macro{HTth}%
  \ht@register@macro{HTcaption}%
  %\let\HTth\HTtd
}
\def\htmltab{\@ifnextchar [{\ht@htmltab}{\ht@htmltab[]}}%]
\def\ht@parse@width#1#2{%
  \edef\ht@tmp@wd{#1}%
  \expandafter\edef\expandafter\ht@wdt@arg{\strippercent{#1}}%
  \ifx\ht@tmp@wd\ht@wdt@arg
    \edef\ht@wdt@arg{\the\dimexpr\ht@tmp@wd\relax}%
  \else
    \expandafter\edef\expandafter\ht@wdt@arg{\CalcRatio{\ht@wdt@arg pt}{100pt}\relax}%
    \ht@tempdimb=\ht@wdt@arg\linewidth\relax
    \edef\ht@wdt@arg{\the\ht@tempdimb}%
  \fi
  \expandafter\xdef\csname #2\endcsname{\ht@wdt@arg}%
}
\def\ht@htmltab[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Table}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@prepare@env@macros
    \expandafter\ifx\csname ht@Table@attr@id\endcsname\relax
      \let\HTCurrentTableId\@empty
    \else
      \expandafter\let\expandafter\HTCurrentTableId\csname ht@Table@attr@id\endcsname
    \fi
    \ht@ltx@reg@style@and@class
    \expandafter\ifx\csname ht@Table@attr@width\endcsname\relax\else
      \expandafter\ht@parse@width\expandafter{\csname ht@Table@attr@width\endcsname}{htTableWidth}%
      \ifx\htTableWidth\relax\edef\htTableWidth{\the\linewidth}\fi
    \fi
    \HTBeginTable
  }
\def\endhtmltab{%
    \HTEndTable
  \endgroup
  %\let\label\ht@ltx@label
}
\def\ht@colgroup[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Col}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
  \endgroup\ignorespaces}
\def\endht@colgroup{%
}
\def\ht@tbody[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Tbody}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
    \HTBeginTbody
    \ignorespaces}
\def\endht@tbody{%
    \ifhmode\unskip\fi
    \HTEndTbody
  \endgroup
  \ignorespaces}%
\def\ht@thead[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Thead}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
    \HTBeginThead
    \ignorespaces}
\def\endht@thead{%
    \ifhmode\unskip\fi
    \HTEndThead
  \endgroup
  \ignorespaces}%
\def\ht@tfoot[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Tfoot}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
    \HTBeginTfoot
    \ignorespaces}
\def\endht@tfoot{%
    \ifhmode\unskip\fi
    \HTEndTfoot
  \endgroup
  \ignorespaces}%
\def\ht@HTcol[#1]{%
  \begingroup
    \def\ht@ltx@cur@env{Col}%
    \ht@parse@attributes #1,,\@nil
    \ifx\ht@Col@attr@colspan\@undefined
      \global\let\htColSpan\@ne
    \else
      \global\let\htColSpan\ht@Col@attr@colspan
    \fi
    \ht@ltx@reg@style@and@class%
    \expandafter\let\expandafter\htColWidth\csname ht@Col@attr@width\endcsname%
    \HTCol{\htColWidth}%
  \endgroup}
\long\def\ht@HTtr[#1]#2{%
  \begingroup
    \def\ht@ltx@cur@env{Tr}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
    \HTBeginTableRow
    \ignorespaces
    #2
    \ifhmode\unskip\fi
    \HTEndTableRow
  \endgroup
  \ignorespaces}
\long\def\ht@HTtd[#1]#2{%
  \@ht@HTtd{}[#1]{#2}%
}
\long\def\ht@HTth[#1]#2{%
  \@ht@HTtd{\let\is@head@cell\relax}[#1]{#2}%
}
\long\def\@ht@HTtd#1[#2]#3{%
  \begingroup
    \def\ht@ltx@cur@env{Td}%
    \ht@parse@attributes #2,,\@nil
    \ht@ltx@reg@style@and@class%
    \expandafter\let\expandafter\htCellRowspan\csname ht@Td@attr@rowspan\endcsname
    \ifx\htCellRowspan\relax\def\htCellRowspan{1}\fi%
    \expandafter\let\expandafter\htCellColspan\csname ht@Td@attr@colspan\endcsname
    \ifx\htCellColspan\relax\def\htCellColspan{1}\fi%
    #1%
    \HTTableCell{\ignorespaces#3}%
  \endgroup
}
\long\def\ht@HTcaption[#1]#2{%
  \begingroup
    \def\ht@ltx@cur@env{Caption}%
    \ht@parse@attributes #1,,\@nil
    \ht@ltx@reg@style@and@class%
    \HTTableCaption{%
      \ignorespaces
      #2%
      \ifhmode\unskip\fi}%
  \endgroup}

\endinput
%%
%% End of file `htmltabs.sty'.
