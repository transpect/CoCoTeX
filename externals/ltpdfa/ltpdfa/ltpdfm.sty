\NeedsTeXFormat{LaTeX2e}[1994/06/01]%% TODO check
\ProvidesPackage{ltpdfm}[\ltpdfapkgdate\space v\ltpdfaversion\space latex adaptions]

\AtBeginShipout{\directlua{ltpdfa.pageprocessor(tex.box["AtBeginShipoutBox"])}}%

%% TL2018=107, TL2020=112, TL2021=113 
\newif\if@TLtwenty\@TLtwentyfalse
\ifnum\luatexversion>112 \@TLtwentytrue\fi
%% basic latex definitions (latex.ltx) should be overwritten
%% in this file
%% defs from cls are okay too, if universal

%% insert explicit space manually
%% TODO\newcommand{\dspSpace}{\directlua{ltpdfa.tagger.dspace()}}
%% \document => \endgroup !!! => input .aux => \@begindocumenthook
%%%%% latex stuff %%%%%
\let\@ltpdfa@org@begin\begin
\let\@ltpdfa@org@end\end
%% NEW: macro to exclude certain environments from being auto-tagged. Usage: \ltOmitEnv{<name of environment>}
\def\ltOmitEnv#1{\expandafter\let\csname lt@omit@env@#1\endcsname\@empty}
\def\@@lt@beginBhook#1{\expandafter\ifx\csname lt@omit@env@#1\endcsname\@empty\else\vstructStart{#1}\fi}
\def\@@lt@endBhook#1{\expandafter\ifx\csname lt@omit@env@#1\endcsname\@empty\else\vstructEnd{#1}\fi}
%% before and after command
\let\@lt@beginBhook\@@lt@beginBhook
\let\@lt@endBhook\@@lt@endBhook
\let\@lt@endEhook\relax
\if@TLtwenty
  \DeclareRobustCommand*\begin[1]{%
      \UseHook{env/#1/before}%
      \@ifundefined{#1}%
      {\def\reserved@a{\@latex@error{Environment #1 undefined}\@eha}}%
      {\def\reserved@a{\def\@currenvir{#1}%
         \edef\@currenvline{\on@line}%
         \@lt@beginBhook{#1}\@execute@begin@hook{#1}%
         \csname #1\endcsname}}%
     \@ignorefalse
     \begingroup\@endpefalse\reserved@a}
   \edef\end{\unexpanded{%
     \romannumeral
       \ifx\protect\@typeset@protect
       \expandafter       %1
         \expandafter        %2
       \expandafter       %1
           \expandafter         %3 expands the \csname inside \end<space>
       \expandafter       %1
         \expandafter        %2  expands \end<space>
       \expandafter       %1     expands the \else
           \z@
       \else
         \expandafter\z@\expandafter\protect
       \fi
     }%
     \expandafter\noexpand\csname end \endcsname
   }
   \@namedef{end }#1{%
     \romannumeral
     \IfHookEmptyTF{env/#1/end}%
        {\expandafter\z@}%
        {\z@\UseHook{env/#1/end}}%
     \@lt@endBhook{#1}\csname end#1\endcsname\@checkend{#1}%
     \expandafter\endgroup\if@endpe\@doendpe\fi
     \UseHook{env/#1/after}%
     \if@ignore\@ignorefalse\ignorespaces\fi
   }
\else
  \def\begin#1{%
      \@ifundefined{#1}%
      {\def\reserved@a{\@latex@error{Environment #1 undefined}\@eha}}%
      {\def\reserved@a{\def\@currenvir{#1}%
          \edef\@currenvline{\on@line}%
          \@lt@beginBhook{#1}\csname #1\endcsname}}%
      \@ignorefalse
      \begingroup%
      \@endpefalse\reserved@a}%%\directlua{ltpdfa.tagger.vstructStart('\luaescapestring{#1}')}
    \def\end#1{%
        \@lt@endBhook{#1}\csname end#1\endcsname\@lt@endEhook\@checkend{#1}%
        \expandafter\endgroup\if@endpe\@doendpe\fi
        \if@ignore\@ignorefalse\ignorespaces\fi}

% \renewcommand{\end}[1]{%
%     \@ltpdfa@end@bhook\directlua{ltpdfa.tagger.vstructEnd('\luaescapestring{#1}')}\@ltpdfa@end@ahook%
%     \@ltpdfa@org@end{#1}%
%   }
\fi
\let\@lt@save@begin\begin
\let\@lt@save@end\end

%% head and foot as artifact
%% Type Pagination SubType Header/Footer
\def\ps@plain{\let\@mkboth\@gobbletwo
     \let\@oddhead\@empty\def\@oddfoot{\structStart[document]{footer}\reset@font\hfil\thepage
     \hfil\structEnd{footer}}\let\@evenhead\@empty\let\@evenfoot\@oddfoot}

%% @footnotemark + @footnotetext
%% latex define @thefnmark with \protected@xdef
\let\@ltpdfa@org@@footnotemark\@footnotemark
\let\@ltpdfa@org@@makefnmark\@makefnmark
\renewcommand{\@makefnmark}{\structStart{Lbl}\@ltpdfa@org@@makefnmark\structEnd{Lbl}}%
\renewcommand{\@footnotemark}{%
  \structStart{Span}\protected@xdef\@lt@fn@parent{\getCurrentStruct{idx}}%
  \structStart{footnotemark}%\addAltText{\@thefnmark}
  \@ltpdfa@org@@footnotemark%
  \structEnd{footnotemark}\structEnd{Span}%
}
\let\@lt@fn@parent\@empty
\let\@ltpdfa@org@@makefntext\@makefntext
\long\def\@makefntext#1{%
  \structStart{footnotetext}%\addPlacement{Block}%
  \ifx\@lt@fn@parent\@empty\relax\else\addToStruct{\@lt@fn@parent}\fi%
  \@ltpdfa@org@@makefntext{#1}\addID{auto}\structEnd{footnotetext}%
}

% \let\@ltpdfa@org@footnote\footnote
% \def\footnote{\@ifnextchar[\@xfootnote{\stepcounter\@mpfn
%     \protected@xdef\@thefnmark{\thempfn}%
%     %\pstructStart{Span}\edef\@ltaddto{\getCurrentStruct}%
%     \@footnotemark%\pstructEnd{Span}
%     \@footnotetext}}

% \let\@ltpdfa@org@@xfootnote\@xfootnote
% \def\@xfootnote[#1]{%
%    \begingroup
%      \csname c@\@mpfn\endcsname #1\relax
%      \unrestored@protected@xdef\@thefnmark{\thempfn}%
%    \endgroup
%    \pstructStart{Span}\edef\@ltaddto{\getCurrentStruct}%
%    \@footnotemark\pstructEnd{Span}\@footnotetext}
 
\let\@ltpdfa@org@footnoterule\footnoterule
\renewcommand{\footnoterule}{%
  \structStart[document]{footnoterule}\@ltpdfa@org@footnoterule\structEnd{footnoterule}
}

\def\thanks#1{%
  \footnotemark%
  \protected@xdef\@thanks{\@thanks
    \protect\structStart{P}\protect\footnotetext[\the\c@footnote]{#1}\protect\structEnd{P}}}%
    
%@startsection #1name #2level #3skip #4skip #5skip #6font
%{\@ssect{#3}{#4}{#5}{#6}} if section*
%{\@dblarg{\@sect{#1}{#2}{#3}{#4}{#5}{#6}}}} if section
%\@dblarg makes []
\let\@lt@faked@seclevel\@empty
\def\@startsection#1#2#3#4#5#6{%
  \if@noskipsec \leavevmode \fi
  \par
  \@tempskipa #4\relax
  \@afterindenttrue
  \ifdim \@tempskipa <\z@
  \@tempskipa -\@tempskipa \@afterindentfalse
  \fi
  \if@nobreak
  \everypar{}%
  \else
  \addpenalty\@secpenalty\addvspace\@tempskipa
  \fi
  \structStart{#1}%
  \@ifstar
  {\edef\@lt@seclevel{#1}\@ssect{#3}{#4}{#5}{#6}}%
  {\@dblarg{\@sect{#1}{#2}{#3}{#4}{#5}{#6}}}}

%% runin headings use \@svsechd are executed in everypar
%% if followed by \structStart or friends before next input
%% starting horizontal mode these are interpreted 'too early'
%% => so move sectionhead up to its parent at position 1
\def\@sect#1#2#3#4#5#6[#7]#8{%
  \edef\@lt@seclevel{#1}\ifx\@lt@faked@seclevel\@empty\else\let\@lt@seclevel\@lt@faked@seclevel\global\let\@lt@faked@seclevel\@empty\fi%
  \ifnum #2>\c@secnumdepth
  \let\@svsec\@empty
  \else
  \refstepcounter{#1}%
  \protected@edef\@svsec{\@seccntformat{#1}\relax}%
  \fi
  \@tempskipa #5\relax
  \ifdim \@tempskipa>\z@
  \begingroup\vstructStart{\@lt@seclevel head}%
  #6{%
    \@hangfrom{\hskip #3\relax\@svsec}%
    \interlinepenalty \@M #8\@@par}%
  \vstructEnd{\@lt@seclevel head}\endgroup
  \csname #1mark\endcsname{#7}%
  \addcontentsline{toc}{#1}{%
    \ifnum #2>\c@secnumdepth \else
    \protect\numberline{\csname the#1\endcsname}%
    \fi
    #7}%
  \else
  \def\@svsechd{%
    \structStart{\@lt@seclevel head}#6{\hskip #3\relax
      \@svsec #8}\setNewParent{\@lt@seclevel[1][A]/[1]}\structEnd{\@lt@seclevel head}%
    \csname #1mark\endcsname{#7}%
    \addcontentsline{toc}{#1}{%
      \ifnum #2>\c@secnumdepth \else
      \protect\numberline{\csname the#1\endcsname}%
      \fi
      #7}}%
  \fi
  \@xsect{#5}%
}

%section*
\def\@ssect#1#2#3#4#5{%
  \@tempskipa #3\relax
  \ifdim \@tempskipa>\z@
  \ifx\@lt@faked@seclevel\@empty\else\let\@lt@seclevel\@lt@faked@seclevel\global\let\@lt@faked@seclevel\@empty\fi%
  \begingroup\vstructStart{\@lt@seclevel head}
  #4{%
    \@hangfrom{\hskip #1}%
    \interlinepenalty \@M #5\@@par}%
  \vstructEnd{\@lt@seclevel head}\endgroup
  \else
  \def\@svsechd{#4{\hskip #1\relax \structStart{\@lt@seclevel head}#5\structEnd{\@lt@seclevel head}}}%
  \fi
  \@xsect{#3}%
}

%% list and items are used at too many unintuitive places ;-(
\let\@ltpdfa@orgitem\item
\let\@ltpdfa@org@item\@item
\newif\if@infirstitem\@infirstitemfalse
\def\@ltpdfa@item{%
  \@inmatherr\item
  \if@infirstitem\@infirstitemfalse\else\relax\structEnd{listbody}\vstructEnd{listitem}\fi%
  \vstructStart{listitem}%
  \@ifnextchar [\@ltpdfa@@item{\@noitemargtrue \@ltpdfa@@item[\@itemlabel]}}
\def\@ltpdfa@@item[#1]{%
  \if@noparitem
    \@donoparitem
  \else
    \if@inlabel
      \indent \par
    \fi
    \ifhmode
      \unskip\unskip \par
    \fi
    \if@newlist
      \if@nobreak
        \@nbitem
      \else
        \addpenalty\@beginparpenalty
        \addvspace\@topsep
        \addvspace{-\parskip}%
      \fi
    \else
      \addpenalty\@itempenalty
      \addvspace\itemsep
    \fi
    \global\@inlabeltrue
  \fi
  \everypar{%
    \@minipagefalse
    \global\@newlistfalse
    \if@inlabel
      \global\@inlabelfalse
      {\setbox\z@\lastbox
       \ifvoid\z@
         \kern-\itemindent
       \fi}%
      \box\@labels%
      \penalty\z@
    \fi
    \if@nobreak
      \@nobreakfalse
      \clubpenalty \@M
    \else
      \clubpenalty \@clubpenalty
      \everypar{}%
    \fi}%
  \if@noitemarg
    \@noitemargfalse
    \if@nmbrlist
      \refstepcounter\@listctr
    \fi
  \fi
  \sbox\@tempboxa{\structStart{listlbl}\makelabel{#1}\structEnd{listlbl}}%
  \global\setbox\@labels\hbox{%
    \unhbox\@labels
    \hskip \itemindent
    \hskip -\labelwidth
    \hskip -\labelsep
    \ifdim \wd\@tempboxa >\labelwidth
      \box\@tempboxa
    \else
      \hbox to\labelwidth {\unhbox\@tempboxa}%
    \fi
    \hskip \labelsep}%
  \ignorespaces\structStart{listbody}%
}
\renewcommand{\itemize}{%
  \addNumbering{Disc}%
  \ifnum \@itemdepth >\thr@@\@toodeep\else
  \advance\@itemdepth\@ne
  \edef\@itemitem{labelitem\romannumeral\the\@itemdepth}%
  \let\item\@ltpdfa@item%
  \@infirstitemtrue%
  \expandafter
  \list
  \csname\@itemitem\endcsname
  {\def\makelabel##1{\hss\llap{##1}}}%
  \fi}
\renewcommand{\enditemize}{\structEnd{listbody}\vstructEnd{listitem}\endlist}%
\renewcommand{\enumerate}{%
  \addNumbering{Decimal}%
  \ifnum \@enumdepth >\thr@@\@toodeep\else
  \advance\@enumdepth\@ne
  \edef\@enumctr{enum\romannumeral\the\@enumdepth}%
  \let\item\@ltpdfa@item%
  \@infirstitemtrue%
  \expandafter
  \list
  \csname label\@enumctr\endcsname
  {\usecounter\@enumctr\def\makelabel##1{\hss\llap{##1}}}%
  \fi}
\renewcommand{\endenumerate}{\structEnd{listbody}\vstructEnd{listitem}\endlist}%

\newif\if@infirstbibitem\@infirstbibitemfalse
\let\@lt@save@@lbibitem\@lbibitem
\renewcommand{\@lbibitem}[2][]{%
  \if@infirstbibitem\global\@infirstbibitemfalse\else\relax\structEnd{BibEntry}\fi%
  \structStart{BibEntry}\addPlacement{Block}\@lt@save@@lbibitem[#1]{#2}%
}

\let\@lt@save@@bibitem\@bibitem
\renewcommand{\@bibitem}[1]{%
  \if@infirstbibitem\global\@infirstbibitemfalse\else\relax\structEnd{BibEntry}\fi%
  \structStart{BibEntry}\addPlacement{Block}\@lt@save@@bibitem{#1}%
}%

%% HLIST subtype: equation but no local_par node in front
%% needs Alt
\DeclareRobustCommand\({%
  \relax\ifmmode\@badmath\else$\structStart{Formula}\fi}%
\DeclareRobustCommand\){%
  \relax\ifmmode\ifinner\structEnd{Formula}$\else\@badmath\fi\else \@badmath\fi}%

\DeclareRobustCommand\[{%
    \vstructStart{P}%
    \structStart{Formula}\relax\ifmmode%%\addPlacement{Block}
       \@badmath
    \else
       \ifvmode
          \nointerlineskip
          \makebox[.6\linewidth]{}%
       \fi
       $$%
    \fi
}%
\DeclareRobustCommand\]{%
    \relax\ifmmode
       \ifinner
          \@badmath
       \else
          $$%
       \fi
    \else
       \@badmath
    \fi
    \structEnd{Formula}\vstructEnd{P}%
    \ignorespaces
}%

\renewcommand{\@xmpar}[2][]{%
  \@savemarbox\@marbox{\structStart{marginpar}#1\structEnd{marginpar}}%
  \@savemarbox\@currbox{\structStart{marginpar}#2\structEnd{marginpar}}%
  \@xympar}
\renewcommand{\@ympar}[1]{%
  \@savemarbox\@marbox{\structStart{marginpar}#1\structEnd{marginpar}}%
  \global\setbox\@currbox\copy\@marbox
  \@xympar}

\let\@lt@save@setref\@setref
\renewcommand{\@setref}[3]{%
  \ifx#1\relax
   \protect\G@refundefinedtrue
   \nfss@text{\reset@font\bfseries ??}%
   \@latex@warning{Reference `#3' on page \thepage \space
             undefined}%
  \else
   \structStart{Reference}\expandafter#2#1\null\structEnd{Reference}%
   \fi}
 
%% configuration %%
% artifacts
\addToConfig{artifact}{header={Type:Pagination}{Subtype:Header}}
\addToConfig{artifact}{footer={Type:Pagination}{Subtype:Footer}}
\addToConfig{artifact}{leaders={Type:Layout}}
\addToConfig{artifact}{footnoterule={Type:Layout}}
\addToConfig{artifact}{Artifact={Type:Layout}}
\addToConfig{artifact}{colseprule={Type:Layout}}
% autoclose
\addToConfig{autoclose}{document={Type:Sectioning}{Child:chapter}{Egroup:false}}
\addToConfig{autoclose}{chapter={Type:Sectioning}{Child:section}{Egroup:true}}
\addToConfig{autoclose}{section={Type:Sectioning}{Child:subsection}{Egroup:true}}
\addToConfig{autoclose}{subsection={Type:Sectioning}{Child:subsubsection}{Egroup:true}}
\addToConfig{autoclose}{subsubsection={Type:Sectioning}{Child:paragraph}{Egroup:true}}
\addToConfig{autoclose}{paragraph={Type:Sectioning}{Child:subparagraph}{Egroup:true}}
\addToConfig{autoclose}{subparagraph={Type:Sectioning}{Child:none}{Egroup:true}}

%% Rolemap
\addRolemap{document}{Document}
\addRolemap{figure}{Figure}
\addRolemap{footnotemark}{Reference}
\addRolemap{footnotetext}{Note}
\addRolemap{section}{Sect}
\addRolemap{subsection}{Sect}
\addRolemap{subsubsection}{Sect}
\addRolemap{paragraph}{Sect}
\addRolemap{subparagraph}{Sect}
\addRolemap{center}{Div}
\addRolemap{tabular}{Table}
\addRolemap{em}{BlockQuote}
\addRolemap{quotation}{BlockQuote}
\addRolemap{quote}{BlockQuote}
\addRolemap{itemize}{L}
\addRolemap{enumerate}{L}
\addRolemap{verse}{BlockQuote}
%\addRolemap{thebibliography}{L}
\addRolemap{titlepage}{Div}
\addRolemap{autopara}{P}
\addRolemap{listbody}{LBody}
\addRolemap{listitem}{LI}
\addRolemap{listlbl}{Lbl}
\addRolemap{verbatim}{Code}
\addRolemap{equation}{Formula}
\addRolemap{marginpar}{Div}
\ifltpdfa@headnums
  \addRolemap{sectionhead}{H1}
  \addRolemap{subsectionhead}{H2}
  \addRolemap{subsubsectionhead}{H3}
  \addRolemap{paragraphhead}{H4}
  \addRolemap{subparagraphhead}{H5}
\else
  \addRolemap{sectionhead}{H}
  \addRolemap{sechead}{H}
  \addRolemap{subsectionhead}{H}
  \addRolemap{subsubsectionhead}{H}
  \addRolemap{paragraphhead}{H}
  \addRolemap{subparagraphhead}{H}
\fi
\@ifclassloaded{book}{\RequirePackage{ltbook}}{}
\@ifclassloaded{article}{\RequirePackage{ltart}}{}

\@ifpackageloaded{multicol}%
{%
  \def\LR@column@boxes{%
     \process@cols\mult@gfirstbox{%
       \ifdim\dp\count@>\dimen\tw@
         \global\dimen\tw@\dp\count@ \fi
       \mc@col@status@write
       \box\count@
       \hss{\vstructStart{colseprule}\columnseprulecolor\vrule
              \@width\columnseprule\vstructEnd{colseprule}}\hss}%
     \ifdim\dp\mult@rightbox>\dimen\tw@
       \global\dimen\tw@\dp\mult@rightbox \fi
     \mc@lastcol@status@write
     \box\mult@rightbox
   }
   \LRmulticolcolumns%
}%
{\relax}%
%%%%%%%%%%%%%%%% dviwriter and distwriter
%/@rwi { 10 div /rwi X /rwiSeen true N } B % rwi will be real width after scaling
%/@rhi { 10 div /rhi X /rhiSeen true N } B % rhi will be real height after scaling
% => rwi or rhi get defined by @rxi divided by ten
% rwi urx llx sub div xscale yscale scale + llx neg lly neg translate
\def\ltpdf@tempa{distps}
\ifx\ltpdfa@driver\ltpdf@tempa
\@ifpackageloaded{graphics}{%
  % from dvips.def
  \ifx\GPT@space\@undefined\def\GPT@space{ }\fi
  \renewcommand{\Ginclude@eps}[1]{%
    \message{<#1>}%
    \bgroup
    \def\@tempa{!}%
    \dimen@\Gin@req@width
    \dimen@ii.1bp%
    \divide\dimen@\dimen@ii
    \@tempdima\Gin@req@height
    \divide\@tempdima\dimen@ii
    \special{PSfile="#1"\GPT@space
      llx=\Gin@llx\GPT@space
      lly=\Gin@lly\GPT@space
      urx=\Gin@urx\GPT@space
      ury=\Gin@ury\GPT@space
      \ifx\Gin@scalex\@tempa\else rwi=\number\dimen@\GPT@space\fi
      \ifx\Gin@scaley\@tempa\else rhi=\number\@tempdima\GPT@space\fi
      \ifGin@clip clip\fi}%
    \addFigure{\Gin@llx}{\Gin@lly}{\Gin@urx}{\Gin@ury}%
    {\ifx\Gin@scalex\@tempa\else \number\dimen@\fi}%
    {\ifx\Gin@scaley\@tempa\else \number\@tempdima\fi}{\ifGin@clip true\else false\fi}%rwi/rhi
    \egroup}%
  \global\let\@lt@save@Ginclude@graphics\Ginclude@graphics%
  \renewcommand{\Ginclude@graphics}[1]{%
    \figureStart{}\@lt@save@Ginclude@graphics{#1}\figureEnd{}%
  }%
}{\relax}
\futurelet\@ltpdfa@tmp\endinput%% added due to 'can't use `macro parameter character #' in vertical mode' from below with dvi
\fi

%% DO NOT ADD SOMETHING BELOW EXCEPT FOR PDF ENGINES !!!!

%%%%%%%%%%%%%%%% pdftex
\def\ltpdf@tempa{pdftex}
\ifx\ltpdfa@driver\ltpdf@tempa
  \@ifpackageloaded{graphics}{%
    \renewcommand{\Ginclude@@pdftex}[1]{%
      \hbox{%
        \Gscale@box{\Gin@scalex}[\Gin@scaley]{%
          \@ifundefined{Gin@vllx}{%
            \GPT@viewportfalse
            % without viewport/trim clipping does not make sense
            % for pdfTeX
            \Gin@clipfalse
          }{}%
          \ifGin@clip
            \if!\Gin@vllx\Gin@vlly\Gin@vurx\Gin@vury!%
            \else
              \let\GPT@clipend\GPT@DoClipEnd
              \setbox\@tempboxa\hbox\bgroup
            \fi
          \fi
          \ifGPT@viewport
            \ifdim\Gin@vlly\p@=\z@
            \else
              \lower\Gin@vlly bp\hbox\bgroup
            \fi
            \ifdim\Gin@vllx\p@=\z@
            \else
              \hskip-\Gin@vllx bp\relax
            \fi
          \fi
          #1%
          \ifGPT@viewport
            \ifdim\Gin@vlly\p@=\z@
            \else
              \egroup
            \fi
            \GPT@clipend
          \fi
        }%
      }%
      \def\@tempa{!}%
      \addFigure{\Gin@llx}{\Gin@lly}{\Gin@urx}{\Gin@ury}%
      {\ifx\Gin@scalex\@tempa\else \Gin@scalex\fi}%
      {\ifx\Gin@scaley\@tempa\else \Gin@scaley\fi}{\ifGin@clip true\else false\fi}%rwi/rhi
    }%
    %% TODO check
    \global\let\@lt@save@Ginclude@graphics\Ginclude@graphics%
    \renewcommand{\Ginclude@graphics}[1]{%
      \figureStart{}\@lt@save@Ginclude@graphics{#1}\figureEnd{}%
    }%
  }{\relax}
\fi

\endinput
