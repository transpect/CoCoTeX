%    \end{macrocode}
% \chapter{transpect-headings.dtx}
% This module provides handlers for headings like parts, chapters,
% sections, or inline headings common to all Transpect projects
%
%    \begin{macrocode}
%%
%% module for le-tex transpect.cls that extends heading objects.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive >= 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{transpect-headings}
    [\filedate \fileversion le-tex transpect headings module]
\RequirePackage{transpect-common}
%    \end{macrocode}
%
% Headings are handled differently with \lstinline{transpect.cls}
% compared to standard \LaTeX, since transpect manuscripts tend to
% have a whole collection of additional information that are pressed
% into the headings, like subtitles or section authors down to
% subsection level, etc. Therefore, the \lstinline{\@startsection} and
% \lstinline{\@make[s]chapterhead} facilities from {\LaTeX} are no longer
% sufficient. At the same time, the package does not redefine those
% macros and keeps them available for backwards compatibility.
%
% First, we load the \lstinline{bookmark} package:
%    \begin{macrocode}
\RequirePackage{bookmark}
%    \end{macrocode}
% Since we use our own heading levels, we disable all automatically generated bookmarks.
%    \begin{macrocode}
\hypersetup{bookmarksdepth=-999}
%    \end{macrocode}
%
% \section{Facility for declaring heading levels and their layouts}%
% \begin{description}
% \item[1] (optional) inherit-from: load all properties from that heading level, first.
% \item[2] level: used for toc entries. -1 for part, 0 for chapter, 1 for section, etc.
% \item[3] name: part, chapter, section, etc, to be used in toc, head lines, bookmarks, etc.
% \item[4] Property definitions and switches
% \end{description}
%    \begin{macrocode}
\long\def\tpDeclareHeading{\@ifnextchar[{\@tpDeclareHeading}{\@tpDeclareHeading[]}}%]

\long\def\@tpDeclareHeading[#1]#2#3#4{%
  \tpNamespace{heading}%
  \expandafter\def\csname tp@heading@name\endcsname{#3}%
  %
  \if!#1!\else\expandafter\protect\expandafter\def\csname tp@heading@#3@parent\endcsname{#1}\fi%
  \expandafter\protect\expandafter\def\csname tp@heading@#3@properties\endcsname{#4}%
  \tp@init@hooks{#3}%
  \tp@init@l@{#2}{#3}%
  \tp@init@cnt{#2}{#3}%
  \tp@restore@init{tp-heading-number-#2-maxwd}%
  %
  %
  %
  \expandafter\def\csname tpUseHeading#3\endcsname{%
    \if!#1!\else\edef\tp@heading@parent{#1}\fi%
    \edef\tp@heading@level{#2}%
    \@setpar{\@@par}%
    \tpNamespace{heading}%
    \tpCascadeProps{#3}{heading}%
    \def\Hy@toclevel{#2}%
    \tp@auto@number{#2}{#3}%
    \tpUseProperty{heading-par}%
    \tpUseHook{before-hook-\tp@heading@name}%
    \tpUseProperty{before-heading}%
    \everypar{}%
    \tp@hdg@create@labels{#3}% label facility
    \tp@format@number{}{}{\tp@heading@level}% Calculate number width
    \tpIfProp{after-skip}{\expandafter\global\expandafter\@tempskipa\expandafter=\tpUseProperty{after-skip}\relax}{\global\@tempskipa=1sp\relax}%
    \def\@svsec{%
      \tpUseProperty{before-heading-block}%
      \leftskip\tpUseProperty{margin-left}%
      \rightskip\tpUseProperty{margin-right}%
      {\tpUseProperty{heading-block}}%
      \tpUseProperty{after-heading-block}%
      \tp@make@toc% ToC entries
      \tp@make@bookmarks% Bookmarks
      \tp@make@run% Running headers
    }%
    \ifdim\@tempskipa <\z@\relax
      \tp@inline@heading
    \else
      \tp@block@heading
    \fi
    \aftergroup\next%
  }}
%    \end{macrocode}
% Macro tht initializes the Hooks for a given level (\#1)
%    \begin{macrocode}
\def\tp@init@hooks#1{%
  \tpDeclareHook{toc-before-hook-#1}%
  \tpDeclareHook{toc-after-hook-#1}%
  \tpDeclareHook{before-hook-#1}%
}
%    \end{macrocode}
% Initialite the counters for automatic numbering if they don't exist, yet.
%    \begin{macrocode}
\def\tp@init@cnt#1#2{%
  \tpIfPropVal{numbering}{auto}
    {\expandafter\ifx\csname c@#2\endcsname\relax \expandafter\newcount\csname c@#2\endcsname \fi
     \global\csname c@#2\endcsname=\z@
    }{}%
}
%    \end{macrocode}
% Advance the heading counter if the \lstinline{numbering} Property is
% set to \texttt{auto} and the current heading is not overridden by
% the \lstinline{Number} Component.
%    \begin{macrocode}
\def\tp@auto@number#1#2{%#1 level #2 name
  \tpIfPropVal{numbering}{auto}
    {%
     \expandafter\ifx\csname tp@heading@attr@nonumber\endcsname\@empty
     \else
       \tpIfComp{Number}
         {}%
         {\expandafter\global\expandafter\advance\csname c@#2\endcsname\@ne
          \edef\@tempa{\csname the#2\endcsname}%
          \expandafter\tpNumber\expandafter{\@tempa}}
     \fi}{}
}

\def\tp@hdg@create@labels#1{%
  \ifx\Hy@MakeCurrentHrefAuto\@undefined\else
    \Hy@MakeCurrentHrefAuto{#1}%
    \Hy@raisedlink{\hyper@anchorstart{\@currentHref}\hyper@anchorend}%
  \fi
  \expandafter\ifx\csname tp@heading@attr@label\endcsname\relax\else
    \tpIfComp{Number}{%
      \edef\@tempa{\expandonce{\tp@heading@Number}}%
      \let\@currentlabel\@tempa\relax
      \let\@currentlabelname\tp@heading@Title
      \expandafter\ltx@label\expandafter{\tp@heading@attr@label}%
    }{}%
  \fi
  \global\let\label\ltx@label}
%    \end{macrocode}
%
% \subsection{Table of Contents}
% This macro prepares the Components used to compose the running
% titles. It checks if the user provides running heading specific
% overrides in the \lstinline{heading} environment. If not, it uses
% the non-specific data fields instead, as long as they are not empty.
%
% After the Fields are filled, the style specific property
% running-heading is evaluated and the corresponding
% \lstinline{\<heading>mark} macros are written.
%    \begin{macrocode}
\def\tp@make@toc{%
  \tp@check@empty{Title}{Toc}%
  \tp@check@empty{Number}{Toc}%
  \tp@check@empty{Subtitle}{Toc}%
  \tp@check@empty{Author}{Toc}%
  \expandafter\ifx\csname tp@heading@attr@notoc\endcsname\@empty\else
    \edef\tp@heading@toc@entry{%
      \tpIfComp{TocTitle}{\string\tpTocTitle{\expandonce{\tp@heading@TocTitle}}}{}%
      \tpIfComp{TocNumber}{\string\tpTocNumber{\expandonce{\tp@heading@TocNumber}}}{}%
      \tpIfComp{TocAuthor}{\string\tpTocAuthor{\expandonce{\tp@heading@TocAuthor}}}{}%
      \tpIfComp{TocSubtitle}{\string\tpTocSubtitle{\expandonce{\tp@heading@TocSubtitle}}}{}%
    }%
    \tpIfProp{toc-level}{\edef\tp@heading@name{\tpUseProperty{toc-level}}}{}%
    \addcontentsline{toc}{\tp@heading@name}{\expandonce{\tp@heading@toc@entry}}\relax
  \fi}
%    \end{macrocode}
% This macro handles the distinction between empty and un-used
% components.
%    \begin{macrocode}
\def\tp@check@empty#1#2{%
  \tpIfComp{#2#1}
    {\tpIfCompEmpty{#2#1}
      {\expandafter\global\expandafter\let\csname tp@heading@#2#1\endcsname\relax}
      {}}
    {\tpIfComp{#1}
      {\expandafter\expandafter\expandafter\let\expandafter\csname tp@heading@#2#1\expandafter\endcsname\csname tp@heading@#1\endcsname}
      {}}}
%    \end{macrocode}
% low-level macro to dynamically define \lstinline{l@<level>}
% macros. \#1 is the heading level, \#2 is the heading name.
%    \begin{macrocode}
\def\tp@init@l@#1#2{%
  \ifnum #1>\c@tocdepth
    \expandafter\let\csname l@#2\endcsname\@gobbletwo
  \else
    \tp@restore@init{tp-heading-toc-number-#1-maxwd}%
    \tp@restore@init{tp-heading-toc-number-#1-indent}%
    \expandafter\gdef\csname l@#2\endcsname##1##2{%
      \bgroup
        \tp@toc@extract@data{#1}{#2}{##1}{##2}%
        \tp@toc@print@entry{#2}%
      \egroup
    }%
  \fi}
%    \end{macrocode}
% Macro to extract data from the .toc lines. \#1 is the heading level,
% \#2 is the heading name, \#3 is the content of the toc entry, \#4 is
% the page number.
%    \begin{macrocode}
\def\tp@toc@extract@data#1#2#3#4{%
  \tpNamespace{heading}%
  \tpCascadeProps{#2}{heading}%
  \tpProvideComp{tpTocPage}{}{}{TocPage}%
  \tpTocPage{\tpUseProperty{toc-page-format}#4}%
  \tpProvideComp{tpTocTitle}{}{}{TocTitle}%
  \tpProvideComp{tpTocSubtitle}{}{}{TocSubtitle}%
  \tpProvideComp{tpTocNumber}{}{}{TocNumber}%
  \tpProvideComp{tpTocAuthor}{}{}{TocAuthor}%
  \let\tpTocLink\Hy@tocdestname%
  \tp@expand@l@contents{#3}%% expand toc-specific macros from heading; \expandonce is necessary because of hyperref...
  \tp@format@number{toc-}{Toc}{#1}
}
%    \end{macrocode}
% This macro expands the content of the l@<level> macro and contains
% some code to catch and handle standard \LaTeX\ headings.
%    \begin{macrocode}
\def\tp@expand@l@contents#1{%
  \sbox\z@{\def\numberline##1{\gdef\tp@heading@TocNumber{##1}}\expandonce#1}%
  \ifdim\wd\z@>\z@
    \let\numberline\@gobble%
    \expandafter\tpTocTitle\expandafter{\expandonce#1}%
  \else
    \expandonce#1%
  \fi}

%    \end{macrocode}
% Macro to actually print the toc entry.
%    \begin{macrocode}
\def\tp@toc@print@entry#1{%
  \bgroup
    \tpUseHook{toc-before-hook-#1}%
    \tpUseProperty{toc-before-entry}%
    \tpUseProperty{toc-heading}%
    \tpUseHook{toc-after-hook-#1}%
    \tpUseProperty{toc-after-entry}%
  \egroup}
%    \end{macrocode}
% \subsection{Macro to determine indentation}
%
% Macro to process heading numbers. \#1 is the heading level
%    \begin{macrocode}
\def\tp@set@hang#1{%
  \tpSetProperty{#1hang-number}{\tpUseProperty{#1formatted-number}}
  \tpIfProp{#1indent}
    {\ifdim\tpUseProperty{#1indent}<\z@
        \tpSetProperty{#1hang-number}{%
          \hskip\tpUseProperty{#1indent}%
          \hbox to -\tpUseProperty{#1indent}{%
            \tpIfPropVal{#1number-align}{left}{}{\hss}%
            \tpUseProperty{#1formatted-number}%
            \tpIfPropVal{#1number-align}{right}{}{\hss}}}%
      \fi}{}}
%    \end{macrocode}
% \#1 is the property prefix, \#2 is the heading level.
%    \begin{macrocode}
\def\tp@det@prev@indent#1#2{%
  \@tempcnta\numexpr#2-1\relax
  \ifdim\tpUseProperty{#1indent}<\z@\relax
    \@tempdimb=-\tpUseProperty{#1indent}\relax
  \else
    \@tempdimb=\tpUseProperty{#1indent}\relax
  \fi
  \expandafter\ifx\csname tp-\tp@namespace-#1\the\@tempcnta-indent\endcsname\relax
    \@tempdima=\@tempdimb\relax%
  \else
    \@tempdima\dimexpr \csname tp-\tp@namespace-#1\the\@tempcnta-indent\endcsname+\@tempdimb\relax
  \fi
  \tp@store@maxwd{#1#2-indent}{\the\@tempdima}%
  \tpSetProperty{#1margin-left}{\csname tp-\tp@namespace-#1#2-indent\endcsname}}
%    \end{macrocode}
% This low-level macro takes the csname of an unprefixed dimension and
% stores its value in the aux files iff the previous value of that
% conrol structure is lower than the current value.
%    \begin{macrocode}
\def\tp@store@maxwd#1#2{%
  \expandafter\ifx\csname tp-\tp@namespace-#1\endcsname\relax
    \immediate\write\@auxout{\string\expandafter\string\gdef\string\csname\space tp-\tp@namespace-#1\string\endcsname{#2}}
    \expandafter\xdef\csname tp-\tp@namespace-#1\endcsname{#2}%
  \else
    \expandafter\ifdim\csname tp-\tp@namespace-#1\endcsname<#2\relax
      \immediate\write\@auxout{\string\expandafter\string\gdef\string\csname\space tp-\tp@namespace-#1\string\endcsname{#2}}%
      \expandafter\xdef\csname tp-\tp@namespace-#1\endcsname{#2}%
    \fi
  \fi}
%    \end{macrocode}
% Eventually, write the actually used values for margin-left and
% indent into the headings's Property list.
%    \begin{macrocode}
\def\tp@get@indent#1#2{%
  \tpSetPropertyX{int-#1margin-left}{\tpUseProperty{#1margin-left}}%
  \tpSetPropertyX{int-#1indent}{\tpUseProperty{#1indent}}%
  \expandafter\let\expandafter\tp@tmp@numwd\csname tp-\tp@namespace-#1number-#2-maxwd\endcsname\relax
  \tpIfPropVal{int-#1margin-left}{auto-global}
    {\tpSetProperty{#1indent}{-\csname tp-\tp@namespace-#1number-maxwd\endcsname}%
     \tpSetProperty{#1margin-left}{\csname tp-\tp@namespace-#1number-maxwd\endcsname}}
    {\tpIfPropVal{int-#1margin-left}{auto}
       {\tpIfPropVal{int-#1indent}{auto}
          {\tpSetProperty{#1indent}{-\tp@tmp@numwd}}
          {\tpIfProp{int-#1indent}
             {\tpSetPropertyX{#1indent}{\tpUseProperty{int-#1indent}}}
             {\tpSetProperty{#1indent}{\z@}}}%
        \tp@det@prev@indent{#1}{#2}}
       {\tpIfProp{int-#1margin-left}
          {\tpIfPropVal{int-#1indent}{auto}
            {\tpSetProperty{#1indent}{-\tp@tmp@numwd}}
            {\tpIfProp{int-#1indent}
               {\tpSetPropertyX{#1indent}{\tpUseProperty{int-#1indent}}}
               {\tpSetProperty{#1indent}{\z@}}}}
         {\tpIfPropVal{int-#1indent}{auto}
            {\tpSetProperty{#1margin-left}{\tp@tmp@numwd}%
             \tpSetProperty{#1indent}{-\tp@tmp@numwd}}
            {\tpIfProp{int-#1indent}
               {\tpSetPropertyX{#1indent}{\tpUseProperty{int-#1indent}}%
                \tpSetProperty{#1margin-left}{\z@}}
               {\tpSetProperty{#1indent}{\z@}%
                \tpSetProperty{#1margin-left}{\z@}}}}}}
    }
%    \end{macrocode}
%
%\subsection{Facility to create the running title macros}
%
%
%    \begin{macrocode}
\def\tp@make@run{%
  \tp@check@empty{Title}{Run}%
  \tp@check@empty{Number}{Run}%
  \tp@check@empty{Author}{Run}%
  \tp@check@empty{Subtitle}{Run}%
  \tpIfProp{running-level}
    {\expandafter\let\expandafter\tp@mark@name\csname\tpUseProperty{running-level}mark\endcsname}
    {\expandafter\let\expandafter\tp@mark@name\csname\tp@heading@name mark\endcsname}%
  \ifx\tp@mark@name\relax\ifx\tp@heading@parent\@undefined\else
      \expandafter\let\expandafter\tp@mark@name\csname\tp@inherit@name mark\endcsname%
    \fi\fi
  \ifx\tp@mark@name\relax\else
    \protected@edef\@tempa{\expandafter\@empty\csname tp@heading@running-heading\endcsname}%
    \expandafter\tp@mark@name\expandafter{\@tempa}%
  \fi}
%    \end{macrocode}
% \subsection{Facility to create PDF bookmarks}
%    \begin{macrocode}
\def\tp@make@bookmarks{%
  \tpIfProp{bookmark-level}{\edef\Hy@toclevel{\tpUseProperty{bookmark-level}}}{}%
  \protected@edef\@tempa{\expandafter\@empty\csname tp@heading@bookmark\endcsname}%
  \bookmark[level=\Hy@toclevel,dest=\@currentHref]{\expandonce{\@tempa}}%
}
%    \end{macrocode}
% This macro calculates number widths and prepares macros to be used by the user
%    \begin{macrocode}
\def\tp@format@number#1#2#3{%
  \tpSetProperty{#1formatted-number}{}%
  \tpIfComp{#2Number}{%
    \tpSetProperty{#1formatted-number}{%
      \bgroup
        \tpUseProperty{#1title-format}%
        \tpUseProperty{#1number-format}%
        \tpUseComp{#2Number}%
        \tpUseProperty{#1number-sep}%
      \egroup}%
    \sbox\z@{\tpUseProperty{#1formatted-number}}%
  }{%
    \sbox\z@{}%
  }%
  \tp@store@maxwd{#1number-#3-maxwd}{\the\wd\z@}%
  \tpSetValProp{#1number-width-level-max}{\csname tp-heading-#1number-#3-maxwd\endcsname}%
  \tp@store@maxwd{#1number-maxwd}{\the\wd\z@}%
  \tpSetValProp{#1number-width-max}{\csname tp-heading-#1number-#3-maxwd\endcsname}%
  \tpSetValProp{#1number-width}{\the\wd\z@}%
  \tp@get@indent{#1}{#3}%
  \tp@set@hang{#1}%
}
%    \end{macrocode}
% This macro looks if \#1 has already been defined (e.g., in an
% earlier tex run) and stores that inital value back in the aux files
% for the following runs. Useful if you want to store only the highest
% value of a parameter, like the maximum width of a heading number of
% a certain level.
%    \begin{macrocode}
\def\tp@restore@init#1{%
  \AtBeginDocument{\expandafter\ifx\csname #1\endcsname\relax\else
      \immediate\write\@auxout{\string\expandafter\string\gdef\string\csname\space #1\string\endcsname{\csname #1\endcsname}}%
    \fi}}
\tp@restore@init{tp-heading-toc-number-maxwd}
\tp@restore@init{tp-heading-number-maxwd}
%    \end{macrocode}
%
%\subsection{Facility to render inline headings}
%
%
% Inline headings are stored in a temporary box and expanded after the
% next (non-heading) paragraph is opened.
%    \begin{macrocode}
\def\tp@inline@heading{%
  \tpIfProp{after-indent}{\global\@afterindenttrue}{\global\@afterindentfalse}%
  \tpIfProp{interline-para}
    {\global\setbox\tp@tempboxa\hbox{\@svsec}}
    {\global\setbox\tp@tempboxa\hbox{\ifvoid\tp@tempboxa\else\unhbox\tp@tempboxa\tpUseProperty{interline-para-sep}\fi\@svsec}}%
  \@nobreakfalse
  \global\@noskipsectrue
  \gdef\next{%
    \global\everypar{%
      \if@noskipsec
        \global\@noskipsecfalse
        {\setbox\z@\lastbox}%
        \clubpenalty\@M
        \begingroup \unhbox\tp@tempboxa \endgroup
        \unskip
        \hskip -\@tempskipa
      \else
        \clubpenalty \@clubpenalty
        \global\setbox\tp@tempboxa\box\voidb@x
        \everypar{}%
      \fi}%
    \ignorespaces}}
%    \end{macrocode}
%
%\subsection{Facility to render block-type headings}
%
%
%    \begin{macrocode}
\def\tp@block@heading{%
  \@svsec
  \par \nobreak
  \tpIfProp{after-indent}{\global\@afterindenttrue}{\global\@afterindentfalse}%
  \gdef\next{%
    \vskip \@tempskipa
    \@afterheading}}
%    \end{macrocode}
%
% \section{The \protect\texttt{heading} environment}
%
%    \begin{macrocode}
\def\heading{\@ifnextchar [{\@heading}{\@heading[]}}%]
\DeclareRobustCommand{\TitleBreak}{\hfill\break}
\def\@heading[#1]#2{%
  \tp@heading@reserve
%    \end{macrocode}
% handling of the optional argument
%    \begin{macrocode}
  \tpParseAttributes{heading}{#1}%
%    \end{macrocode}
% The mandatory argument contains the section level, this corresponds
% to \LaTeX's way of counting where part is -1, chapter is 0, section
% is 1, etc.
%    \begin{macrocode}
  \edef\tp@heading@name{#2}%
  \tp@heading@load@props%
  \tp@provide@hd@macros{Author}%
  \tp@provide@hd@macros{Title}%
  \tp@provide@hd@macros{Subtitle}%
  \tp@provide@hd@macros{Number}%
  \tpProvideComp{tpQuote}{}{}{Quote}%
  \tpProvideComp{tpQuoteSource}{}{}{QuoteSource}}
\def\tp@heading@load@props{\csname tp@heading@\tp@heading@name @properties\endcsname}
%    \end{macrocode}
% Macro that creates user macros with a three-way distinction between
% printed data, data sent to toc, and data sent to page styles.
%    \begin{macrocode}
\def\tp@provide@hd@macros#1{%
  \tpProvideComp{tp#1}{}{}{#1}%
  \tpProvideComp{tpToc#1}{}{}{Toc#1}%
  \tpProvideComp{tpRun#1}{}{}{Run#1}}
%    \end{macrocode}
% The ending part of the heading environment.
%    \begin{macrocode}
\def\endheading{%
  \expandafter\ifx\csname tpUseHeading\tp@heading@name\endcsname\relax
    \PackageError{transpect.cls}{Heading level \tp@heading@name\space unknown!}{A Heading with level \tp@heading@name\space is unknown. Use the \string\tpDeclareHeading\space macro to declare heading levels.}%
  \else
    \afterfi\csname tpUseHeading\tp@heading@name\endcsname%
  \fi
  \tp@heading@reset
  \nopagebreak
}
%    \end{macrocode}
% We need to re-direct some \LaTeX\space kernel macros and make sure
% that some other macros have their default values:
%    \begin{macrocode}
\def\tp@heading@reserve{%
  \tpNamespace{heading}%
  \let\ltx@dbl@backslash\\
  \let\\\TitleBreak
  \let\ltx@label\label
  \let\tp@heading@label\relax
  \let\tp@notoc\@empty}
%    \end{macrocode}
% Restoring \LaTeX's default definitions
%    \begin{macrocode}
\def\tp@heading@reset{%
  \let\tp@namespace\relax
  \let\\\ltx@dbl@backslash
  \let\label\ltx@label
  \let\tp@heading@name\relax
  \let\tp@heading@label\relax
  \let\tp@notoc\@empty}

%    \end{macrocode}
% \section{Defaults}
% Those are the global defaults for all headings.
%    \begin{macrocode}
\tpAddToDefault{heading}{%
  \tpSetProperty{interline-para}{}%
  \tpSetProperty{interline-para-sep}{\space}
  \tpSetProperty{heading-par}{%
    \tpIfProp{interline-para}{\if@noskipsec \leavevmode \fi}{}%
    \par\global\@afterindenttrue}%
  \tpSetProperty{before-heading}{}%
  \tpSetProperty{title-format}{\bfseries}%
  \tpSetProperty{subtitle-format}{\normalfont}%
  \tpSetProperty{author-format}{\normalfont}%
  \tpSetProperty{quote-format}{\raggedleft}%
  \tpSetProperty{quote-source-format}{}%
  \tpSetProperty{heading-block}
    {\bgroup
       \tpUseProperty{title-format}%
       \tpIfComp{Number}
         {\tpUseProperty{hang-number}}
         {\leftskip0pt}%
       {\tpUseComp{Title}}\par%
       \tpIfComp{Subtitle}{{\tpUseProperty{subtitle-format}\tpUseComp{Subtitle}}\par}{}%
       \tpIfComp{Author}{{\tpUseProperty{author-format}\tpUseComp{Author}}\par}{}%
       \tpIfComp{Quote}{%
         \bgroup\tpUseProperty{quote-format}%
           \tpUseComp{Quote}\par
           \tpIfComp{QuoteSource}{{\tpUseProperty{quote-source-format}--\space\tpUseComp{Quote}}\par}{}%
         \egroup}{}%
    \egroup}%
  \tpSetProperty{after-heading-block}{}%
  \tpSetProperty{before-heading-block}{\parindent\z@ \parskip\z@}%
  \tpSetProperty{after-indent}{}%
  \tpSetProperty{margin-left}{}%
  \tpSetProperty{margin-right}{\@flushglue}%
  \tpSetProperty{after-skip}{1sp}%
  \tpSetProperty{indent}{auto}%
  \tpSetProperty{number-width}{}%
  \tpSetProperty{number-sep}{\space}%
  \tpSetProperty{number-align}{left}%
  \tpSetProperty{numbering}{auto}%
  %% running header
  \tpSetProperty{running-level}{}% override level for running title, name
  \tpSetProperty{running-heading}{%
    \tpIfComp{RunAuthor}{\tpUseComp{RunAuthor}:\space}{}%
    \tpUseComp{RunTitle}%
  }%
  %% ToC
  \tpSetProperty{toc-page-sep}{\dotfill}% between toc-title and page
  \tpSetProperty{toc-page-format}{}%
  \tpSetProperty{toc-number-width}{}% current width of number
  \tpSetProperty{toc-number-align}{left}% alignment of number within hbox when hanging
  \tpSetProperty{toc-title-format}{}% format of title
  \tpSetProperty{toc-number-format}{\tpUseProperty{toc-title-format}}% format of number
  \tpSetProperty{toc-number-sep}{\enskip}% thing between numebr and toc-title
  \tpSetProperty{toc-margin-top}{\z@}% left indent of the whole entry
  \tpSetProperty{toc-margin-bottom}{\z@}% right margin of the whole entry
  \tpSetProperty{toc-margin-left}{auto}% left indent of the whole entry
  \tpSetProperty{toc-margin-right}{\@pnumwidth}% right margin of the whole entry
  \tpSetProperty{toc-level}{}% override heading level for ToC, name!
  \tpSetProperty{toc-indent}{auto}% offset of the first line of the entry. auto: hang indent by max-number-width for the level
  \tpSetProperty{toc-before-entry}{% stuff before anything is output; used to setup margins, alignment, line-breaking rules, etc.
    \addvspace{\tpUseProperty{toc-margin-top}}%
    \parindent \z@
    \let\\\@centercr
    \hyphenpenalty=\@M
    \rightskip \tpUseProperty{toc-margin-right} \@plus 1fil\relax
    \parfillskip -\rightskip
    \leftskip\tpUseProperty{toc-margin-left}%
  }%
  \tpSetProperty{toc-after-entry}{\par\addvspace{\tpUseProperty{toc-margin-bottom}}}% Thing at the end of the entry, after the page number
  \tpSetProperty{toc-heading}{% Order and formatting of the entry itself
    \tpUseProperty{toc-title-format}%
    \tpIfComp{TocNumber}
      {\tpUseProperty{toc-hang-number}}
      {\leftskip0pt}%
    \tpIfComp{TocAuthor}{\tpUseComp{TocAuthor}:\space}{}%
    \tpUseComp{TocTitle}%
    \tpUseProperty{toc-page-sep}\tpUseComp{TocPage}%
  }%
  %% PDF-Bookmarks
  \tpSetProperty{bookmark-level}{}% override heading level for PDF bookmarks, numeric!
  \tpSetProperty{bookmark}{%
    \tpIfComp{TocNumber}{\tpUseComp{TocNumber}\space}{}%
    \tpIfComp{TocTitle}{\tpUseComp{TocTitle}}{\tpUseComp{Title}}%
  }%
}

%    \begin{macrocode}
% \def\partmark#1{}%
% \tpDeclareHeading{-1}{part}{%
%   \tpHeadingProperty{BlockFormat}{\centering
%     \markboth{}{}%
%     \thispagestyle{empty}%
%   }%
%   \tpHeadingProperty{BeforeHeading}{\cleardoublepage\null\vskip10mm}%
%   \tpHeadingProperty{AfterHeading}{\vfill}%
%   \tpHeadingProperty{AuthorFormat}{\itshape}%
%   \tpHeadingProperty{AfterAuthor}{\@@par\vskip2\baselineskip}%
%   \tpHeadingProperty{TitleFormat}{\Huge}%
%   \tpHeadingProperty{BeforeSubtitle}{\@@par\vskip\baselineskip}%
%   \tpHeadingProperty{SubtitleFormat}{\leavevmode\vskip\baselineskip\large\bfseries}%
%   \tpHeadingProperty{AfterNumber}{:\@@par}%
%   \tpToCBefore{\vskip2\baselineskip}%
%   \tpToCFormat{\bfseries}%
%   \tpToCPageSep{\hfill}%
% }
% \tpDeclareHeading{0}{chapter}{%
%   \tpHeadingProperty{BlockFormat}{\centering
%     \markboth{}{}%
%     \thispagestyle{empty}%
%   }%
%   \tpHeadingProperty{BeforeHeading}{\cleardoublepage\null\vskip10mm}%
%   \tpHeadingProperty{AfterSkip}{3\baselineskip}%
%   \tpHeadingProperty{AuthorFormat}{\itshape}%
%   \tpHeadingProperty{AfterAuthor}{\@@par\vskip\baselineskip}%
%   \tpHeadingProperty{TitleFormat}{\LARGE}%
%   \tpHeadingProperty{SubtitleFormat}{\leavevmode\vskip\baselineskip\Large\bfseries}%
%   \tpHeadingProperty{BeforeSubtitle}{\@@par\vskip.5\baselineskip}%
%   \tpHeadingProperty{BeforeQuote}{\strut\@@par\vskip\baselineskip\hfil\hbox\bgroup\centering\vbox\bgroup\hsize.5\textwidth\centering}%
%   \tpHeadingProperty{AfterQuote}{\egroup\egroup}%
%   \tpHeadingProperty{AfterNumber}{:\enskip}%
%   \tpToCBefore{\vskip1\baselineskip}%
%   \tpToCFormat{\bfseries}%
%   \tpToCPageSep{\bfseries\dotfill}%
%   %% 
%   \tpHeadingProperty{AfterNumber}{:\enskip}%
% }
% \tpDeclareHeading{1}{section}{%
%   \tpAuthorAfter
%   \tpHangNumber
%   %\tpHangFixed{12mm}%
%   \tpHeadingProperty{BeforeHeading}{\vskip2\baselineskip}%
%   \tpHeadingProperty{AfterSkip}{1\baselineskip}%
%   \tpHeadingProperty{BeforeSubtitle}{ -- }%
%   \tpHeadingProperty{BeforeAuthor}{\@@par}%
%   \tpHeadingProperty{AuthorFormat}{\itshape}%
%   \tpHeadingProperty{AfterAuthor}{\@@par}%
%   \tpHeadingProperty{TitleFormat}{\Large}%
%   \tpHeadingProperty{SubtitleFormat}{\Large}%
%   \tpHeadingProperty{BeforeQuote}{\@@par\vskip.5\baselineskip}%
%   \tpHeadingProperty{AfterNumber}{:\enskip}%
%   % \tpHeadingProperty{AfterQuote}{\@@par\vskip.5\baselineskip}%
% }
% \tpDeclareHeading{2}{subsection}{%
%   \tpHeadingProperty{BeforeHeading}{\vskip1.5\baselineskip}%
%   \tpHeadingProperty{AfterSkip}{0.5\baselineskip}%
%   \tpHeadingProperty{BeforeSubtitle}{ -- }%
%   \tpHeadingProperty{AfterAuthor}{\@@par}%
%   \tpHeadingProperty{TitleFormat}{\large}%
%   \tpHeadingProperty{SubtitleFormat}{}%
%   \tpHeadingProperty{BeforeQuote}{\@@par\vskip.5\baselineskip}%
%   \tpHeadingProperty{AfterNumber}{:\enskip}%
% }
% \tpDeclareHeading{3}{subsubsection}{}
% \tpDeclareHeading{4}{paragraph}{%
%   \tpHeadingProperty{BeforeHeading}{\vskip1\baselineskip \@minus5bp}%
%   \tpHeadingProperty{AfterSkip}{-.5em}%
%   \tpHeadingProperty{BeforeSubtitle}{ -- }%
%   \tpHeadingProperty{AfterAuthor}{\@@par}%
%   \tpHeadingProperty{TitleFormat}{\normalsize\bfseries}%
%   \tpHeadingProperty{SubtitleFormat}{}%
%   \tpHeadingProperty{AfterNumber}{:\enskip}%
% }
