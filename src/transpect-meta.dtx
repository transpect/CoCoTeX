% \chapter{transpect-meta.dtx}
% This file provides some macros that are used to process meta data,
% both for the whole document, as well as parts of a document.
%
%    \begin{macrocode}[gobble=1]
%<*meta>
%    \end{macrocode}
% File preamble
%    \begin{macrocode}
%%
%%      module for le-tex transpect.cls that provides handling of a
%%      document's meta data.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{transpect-meta}
    [\filedate \fileversion le-tex transpect meta module]
\RequirePackage{transpect-common}
%    \end{macrocode}
% \begin{tpContainer}{Meta} is the abstract Container for meta data,
%   both for whole documents as well as parts of documents.
%    \begin{macrocode}
\tpDeclareContainer{Meta}{%
  \tpDeclareType{Components}{%
    \tpDeclareRole[author]{Author}%
  }%
  \tpDeclareType{Properties}{%
    \tp@Meta@default
  }%
}
%    \end{macrocode}
% \end{tpContainer}
%
% \section{Counted Container Handlers}
%
% \subsection{Generic Blocks}
%
% \begin{macro}{\tp@meta@generic@comp} is used to define a generic
%   meta data block.It provides two Components for each instance, one
%   for the block's Heading and one for its Content.
%    \begin{macrocode}
\def\tp@meta@generic@comp{%
  \tpDeclareComp{GenericMetaBlock}{\expandafter\global}{}%
  \tpDeclareComponentGroup{tpGenericMeta}{%
    \tpDeclareCountedComp{Heading}%
    \tpDeclareCountedComp{Content}%
  }}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@generic@eval} evaluates the Components and
%   tells the Framework how the generic counted Sub-Containers should
%   be rendered.
%    \begin{macrocode}
\def\tp@meta@generic@eval{{%
  \def\tp@cur@cont{titlepage}%
  \tpComposeCollection{tpGenericMeta}{generic-meta-format}{GenericMetaBlock}
}}
%    \end{macrocode}
% \end{macro}
% \subsection{Contributor Roles}
%
% Contributors are counted sub-containers that represent the meta-data
% of people that share a role in contributing content to a document.
% Examples for such roles are an article{\slash}chapter{\slash}book's
% authors, or a collection{\slash}series' editors.
%
% \begin{macro}{\tpDeclareRole} is used to declare the Components that
%   belong to each member of a contributor role. \#2 is the name of
%   the role, optional \#1 is the internal name of the Role's
%   formatting Property. If omitted, it is the same as \#2.
%
%   The output of all members of a role is controlled by a Component
%   called ``\lstinline{<role>NameList}'' that is formatted according
%   to the \lstinline{<role>-format} Property. For reasons of naming
%   conventions, the role names for a Component and its respective
%   Property do not necessarily need to be identical.
%    \begin{macrocode}
\def\tpDeclareRole{\tp@opt@second\tp@declare@role}%
\def\tp@declare@role[#1]#2{%
  \tpDeclareComponentGroup{tp#2}{%
    \tpDeclareCountedComp{FullName}%
    \tpDeclareCountedComp{SurName}%
    \tpDeclareCountedComp{FirstName}%
    \tpDeclareCountedComp{MidName}%
    \tpDeclareCountedComp{PersonPrefix}%
    \tpDeclareCountedComp{OCRID}%
    \tpDeclareCountedComp{Affil}%
    \tpDeclareCountedComp{Email}%
  }%
  \tpGroupHandler{tp#2}{%
    \tpIfComp{FullName}{}{\tpFullName{\tpUseProperty{name-format}}}%
  }%
  \tpDeclareRoleBlock{#2}{NameList}{#1-list-format}%
}

\def\tpAddToRole#1#2{\csgappto{tp#1}{#2}}
%    \end{macrocode}
% \#1 is the name of the Component Group's output block, \#2 is the name of the property used to compose the Output Compoent.
%    \begin{macrocode}
\def\tpDeclareRoleBlock#1#2#3{%
  \tpDeclareComp{#1#2}{\expandafter\global}{}%
  \csgdef{tp@meta@role@#1@#2}{#3}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tp@meta@role@eval} creates the name list for the role. \#1
%   is the name of the role.
%    \begin{macrocode}
\def\tp@meta@role@eval#1{{%
  \tpIfComp{#1NameList}{}{%
    \ifcsdef{tp#1-Cnt}
      {\ifnum\csname tp#1-Cnt\endcsname>\z@
          \tp@eval@role@attrs{#1}%
          \tpApplyCollection{tp#1}{\csname tp@meta@role@#1@NameList\endcsname}{#1NameList}%
        \fi
      }{}}}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@eval@role@attrs} evaluates the attributes that are
%   provided by the user in the optional argument of a role's
%   environment. \#1 is the name of the role.
%    \begin{macrocode}
\def\tp@eval@role@attrs#1{%
    \tp@iterate{\@tempcnta}{\@ne}{\expandafter\the\csname tp#1-Cnt\endcsname}{%
      \ifcsdef{tp@meta@#1-\the\@tempcnta @attrs\endcsname}{%
        \tpParseAttributes{#1-\the\@tempcnta }{\csname tp@meta@#1-\the\@tempcnta @attrs\endcsname}%
      }{}}}
%    \end{macrocode}
% \end{macro}
% Defaut Property settings for the Meta Container.
%    \begin{macrocode}
\tpAddToDefault{Meta}{%
  \tpSetProperty{name-format}{\tpUseComp{FirstName}\space\tpUseComp{SurName}}%
  \tpSetProperty{name-list-format}{\tpUseComp{FullName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}%
  \tpSetProperty{counted-name-sep}{,\space}%
  \tpPropertyLet{author-format}{name-format}% Override for single author names
  \tpSetProperty{name-and}{\space and\space}%
  \tpSetProperty{name-etal}{\space et~al.}%
  \tpSetProperty{name-sep}{,\space}%
  \tpSetProperty{corresp-mark}{*}%
}
%    \end{macrocode}
%    \begin{macrocode}[gobble=1]
%</meta>
%    \end{macrocode}
