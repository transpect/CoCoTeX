%    \end{macrocode}
% \chapter{transpect-floats.dtx}
% This module provides handlers for floating objects like tables and
% figures common to all Transpect projects
%
%    \begin{macrocode}
%%
%% module for le-tex transpect.cls that extends floating objects.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{transpect-floats}
    [\filedate \fileversion le-tex transpect floats module]
%    \end{macrocode}
% Hard requirements:
%    \begin{macrocode}
\RequirePackage{transpect-common}
\RequirePackage{rotating}
%    \end{macrocode}
% for automatic typesetting and float positioning, we use very high tolerances from standard \LaTeX:
%    \begin{macrocode}
\def\topfraction{0.9}
\def\textfraction{0.1}
\def\bottomfraction{0.8}
\def\totalnumber{8}
\def\topnumber{8}
\def\bottomnumber{8}
\def\floatpagefraction{.95}
%    \end{macrocode}
% some reserved registers
%    \begin{macrocode}
\newbox  \tp@floatbox
\newbox  \tp@subfltbox
\newcount\tpSubFloatCnt       \tpSubFloatCnt=\z@\relax
\newcount\tp@subfloat@row     \tp@subfloat@row\z@
\newcount\tp@subfloat@col     \tp@subfloat@col\z@

\newdimen\tp@subflt@maxheight \tp@subflt@maxheight=\z@\relax
\newdimen\tp@subflt@sep       \tp@subflt@sep=\fboxsep\relax
\newdimen\tp@total@flt@width  \tp@total@flt@width=\textwidth\relax

\newdimen\tp@flt@marg@r       \tp@flt@marg@r=\z@\relax
\newdimen\tp@flt@marg@l       \tp@flt@marg@l=\z@\relax

\def\tp@str@landscape{landscape}
\def\tp@str@figure{figure}
\def\tp@str@table{table}
\def\tp@str@bottom{bottom}
\def\tp@str@top{top}

%    \end{macrocode}
% Storing the final definition of \lstinline{\label}:
%    \begin{macrocode}
\AtBeginDocument{%
  \global\let\ltx@label\label
  \global\let\ltx@includegraphics\includegraphics
  \@ifpackageloaded{htmltabs}{\global\let\tp@uses@htmltabs\relax}{}%
}%

%    \end{macrocode}
% Resetting the subfloats. \#1 is the caption family, \#2 is the
% abbreviation of the caption list (e.g., standard {\LaTeX} uses
% \lstinline{lof} for the List of Figures, \lstinline{lot} for the
% List of Tables).
%    \begin{macrocode}

\def\tp@reset@components#1{%
  \@tempcnta=#1\relax
  \@tp@reset@components
  \global\let\@tp@reset@components\relax
}
\global\let\@tp@reset@components\relax

\def\tp@reset@defaults#1#2{%
  \global\tpSubFloatCnt=\z@
  \global\let\tp@has@capt@top\@undefined
  \global\let\tp@has@capt@bottom\@undefined
  \global\let\tp@has@subcapt@top\@undefined
  \global\let\tp@has@subcapt@bottom\@undefined
  \global\tp@subfloat@row=\z@
  \global\tp@subfloat@col=\z@
  \global\tp@subflt@maxheight=\z@\relax
  \tp@reset@components{0}%
  \def\tp@captype{#1}%
  \def\tp@caplisttype{#2}%
  \let\ht@cur@element\tp@captype
  \global\let\tp@current@class\relax
  \global\let\tp@subfloat@parent=f\relax
}
%    \end{macrocode}
% Handles the optional argument of float environments. \#1 is the
% content of the optional argument, #2 is the caption family.
%    \begin{macrocode}
\def\tp@get@flt@attr#1#2{%
  \if!#1!\else
    \tpParseAttributes{#2}{#1}%
    \expandafter\ifx\csname tp@#2@attr@class\endcsname\relax\else
      \expandafter\global\expandafter\let\expandafter\tp@current@class\csname tp@#2@attr@class\endcsname
      \message{^^Jtranspect-floats.sty: Class of float \tp@captype\space is: `\csname tp@#2@attr@class\endcsname'.}%
      \tpUseClass{default}{\tp@captype}%
      \expandafter\tpUseClass\expandafter{\csname tp@#2@attr@class\endcsname}{\tp@captype}%
    \fi
  \fi
  \tp@get@flt@pos{#2}}
%    \end{macrocode}
% Handler for determining the floating position
%    \begin{macrocode}
\def\tp@get@flt@pos#1{%
  \expandafter\ifx\csname tp@#1@attr@float-pos\endcsname\relax
    \let\tp@fps\@empty
  \else
    \expandafter\let\expandafter\tp@fps\csname tp@#1@attr@float-pos\endcsname
  \fi
  \def\@tempa{h!}\ifx\tp@fps\@tempa\let\tp@fps\@empty\fi
  \ifx\tp@do@dblfloat\relax\linewidth\dimexpr2\columnwidth+\columnsep\relax\fi
  \expandafter\ifx\csname tp@#1@attr@orientation\endcsname\tp@str@landscape\relax
    \linewidth\textheight
    \def\tp@fps{p}%
  \else
    \tp@set@top@sep
  \fi}

\def\tp@set@flt@pos{%
  \ifx\tp@fps\@empty
    \let\tp@b@float\relax
    \let\tp@e@float\relax
  \else
    \def\@tempa{h}\ifx\tp@fps\@tempa\def\tp@fps{ht!}\fi
    \let\tp@b@float\tp@captype%
    \expandafter\ifx\csname tp@\tp@captype @attr@orientation\endcsname\tp@str@landscape\relax
      \ifx\tp@b@float\tp@str@table
        \edef\@tp@b@float{sidewaystable}%
      \else
        \edef\@tp@b@float{sidewaysfigure}%
      \fi
      \edef\tp@b@float{\noexpand\begin{\@tp@b@float\ifx\tp@do@dblfloat\relax*\fi}}
      \edef\tp@e@float{\noexpand\end{\@tp@b@float\ifx\tp@do@dblfloat\relax*\fi}}
    \else
      \ifx\tp@do@dblfloat\relax
        \edef\tp@b@float{\noexpand\@xdblfloat {\tp@captype}[\tp@fps]}
        \let\tp@e@float\end@dblfloat
      \else
        \edef\tp@b@float{\noexpand\@xfloat {\tp@captype}[\tp@fps]}
        \let\tp@e@float\end@float
      \fi
    \fi
  \fi}

%    \end{macrocode}
% depending on the float position, apply the top separator
%    \begin{macrocode}
\def\tp@set@top@sep{%
  \ifx\tp@fps\@empty
    \expandafter\addvspace\expandafter{\tpUseProperty{intext-skip-top}}%
  \else
    \expandafter\addvspace\expandafter{\tpUseProperty{float-skip-top}}%
  \fi}

\def\tp@set@bot@sep{%
  \expandafter\ifx\csname tp@\tp@captype @attr@orientation\endcsname\tp@str@landscape\else
    \ifx\tp@fps\@empty
      \expandafter\vskip\tpUseProperty{intext-skip-bottom}%
    \else
      \expandafter\addvspace\expandafter{\tpUseProperty{float-skip-bottom}}%
    \fi
  \fi}


%    \end{macrocode}
% Declarations for caption related Components in float
% environments. The first function provides an easily accessible alias
% for the user defined property overrides. The second macro registers
% the actual, sub-float dependent Components.
%    \begin{macrocode}
\def\tpMakeFltComp#1#2#3{%
  \tpProvideComp{#1}
    {\bgroup\ifx\tp@is@subflt\relax\else\tpSubFloatCnt=\z@\relax\fi\expandafter\global}
    {\def\@tempa{{@tp@reset@components}}%
     \edef\@tempb{%
       \noexpand\ltx@LocalExpandAfter\noexpand\global\noexpand\expandafter\noexpand\let
         \noexpand\csname tp@\noexpand\tp@namespace @#2-\the\tpSubFloatCnt\noexpand\endcsname
         \noexpand\relax}%
     \expandafter\expandafter\expandafter\csgappto\expandafter\@tempa\expandafter{\@tempb}%
     \egroup}
    {#2-\the\tpSubFloatCnt}%
  \expandafter\long\expandafter\def\csname tp@\tp@namespace @#3\endcsname{\csname tp@\tp@namespace @#2-\the\tpSubFloatCnt\endcsname}%
  \csgappto{@tp@reset@components}{\csname tp@\tp@namespace @#3\endcsname}%
}

\def\tp@set@caption@comps{%
  \tpMakeFltComp{tpCaption}{caption}{Caption}%
  \tpMakeFltComp{tpLegend}{legend}{Legend}%
  \tpMakeFltComp{tpSource}{source}{Source}%
  \tpMakeFltComp{tpNumber}{number}{Number}%
  \tpMakeFltComp{label}{label}{Label}%
}

%    \end{macrocode}
% \section{Caption mechanism}
%    \begin{macrocode}

\def\tp@iterate@mp#1#2{%
  \@tempcnta=\z@\relax
  \tp@iterate{\@tempcnta}{\@ne}{\tpSubFloatCnt}{%
    \ifnum\@tempcnta>\@ne\relax\hfill\fi
    \tp@create@mp{#1}{#2}{\csname tp@\tp@namespace @res@width-\the\@tempcnta\endcsname}%
  }}


%    \end{macrocode}
% creates a minipage of a fixed width for each part of a sub figure
%    \begin{macrocode}
\def\tp@create@mp#1#2#3{%
    \begin{minipage}[#2][][t]{#3}%
      \ifx\tp@current@class\relax\else
        \let\includegraphics\tp@includesubgraphics
      \fi
      #1%
    \end{minipage}%
}

%    \end{macrocode}
% prints the caption
%    \begin{macrocode}
\def\tp@make@caption#1#2{%
  \bgroup
    \tpSubFloatCnt#1\relax
    \def\@argii{#2}%
    % \ifnum\tpSubFloatCnt=\z@\hsize\tp@total@flt@width\fi
    \tpUseProperty{caption-format}%
    \tpUseProperty{caption-format-#2}%
    \ifx\@argii\tp@str@bottom
      \vskip\dimexpr-\topsep-\baselineskip\relax
      \expandafter\vskip\tpUseProperty{caption-sep-bottom}%
    \fi
    \leavevmode%
    \strut\tpUseProperty{caption-#2}\strut%
    \par\nobreak
    \ifx\@argii\tp@str@bottom
      %% \tp@add@list{#1}% TODO
    \else
      \vskip\tpUseProperty{caption-sep-top}%
    \fi
  \egroup
}

%    \end{macrocode}
% Calculate the available maximum width for the float contents and
% captions according to the values of the \lstinline{margin-right} and
% the \lstinline{margin-left} properties.
%    \begin{macrocode}
\def\tp@flt@set@hsize{%
  \tp@total@flt@width=\hsize\relax
  \expandafter\tp@flt@marg@r\tpUseProperty{margin-right}\relax
  \ifdim\tp@flt@marg@r>\z@\relax\advance\tp@total@flt@width-\tp@flt@marg@r\relax\fi
  \expandafter\tp@flt@marg@l\tpUseProperty{margin-left}\relax
  \ifdim\tp@flt@marg@l>\z@\relax\advance\tp@total@flt@width-\tp@flt@marg@l\relax\fi
  }

%    \end{macrocode}
% High level macro to (re-)declare a new tpFloat
% environment. \lstinline{#1}: inherit from, \lstinline{#2}:
% environment name, \lstinline{#3}: caption name, \lstinline{#4}:
% listof, \lstinline{#5} parameters.
%    \begin{macrocode}
\def\tpDeclareFloat{\@ifnextchar[{\@tpDeclareFloat}{\@tpDeclareFloat[]}}%]
\def\@tpDeclareFloat[#1]#2#3#4#5{%
  \def\tp@float@name{#2}%
  \expandafter\ifx\csname #2\endcsname\relax
    \PackageInfo{transpect}{Declaring #2 environment}%
    \newenvironment{#2}[1][]{\tp@float[##1]{#3}{#4}{#2}}{\endtp@float}%
    \newenvironment{#2*}[1][]{\let\tp@do@dblfloat\relax\tp@float[##1]{#3}{#4}{#2}}{\let\tp@do@dblfloat\relax\endtp@float}%
  \else
    \PackageWarning{transpect}{#2 environment already exists. Re-Declaring.}%
    \renewenvironment{#2}[1][]{\tp@float[##1]{#3}{#4}{#2}}{\endtp@float}%
    \renewenvironment{#2*}[1][]{\let\tp@do@dblfloat\relax\tp@float[##1]{#3}{#4}{#2}}{\let\tp@do@dblfloat\relax\endtp@float}%
  \fi
  \if!#1!\else
    \expandafter\def\csname tp@float@#2@parent\endcsname{#1}%
  \fi
  \expandafter\ifx\csname tp@float@#2@properties\endcsname\relax%
    \expandafter\def\csname tp@float@#2@properties\endcsname{#5}%
  \else
    \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\@tempa\expandafter\expandafter\expandafter{\csname tp@float@#2@properties\endcsname}%
    \expandafter\expandafter\expandafter\def\expandafter\csname tp@float@#2@properties\expandafter\endcsname\expandafter{\@tempa #5}%
  \fi
  }
%    \end{macrocode}
% In order to account for sub-floats, we need to re-define some of the transpect-common Component conditionals:
%    \begin{macrocode}
\long\def\tp@flt@cond{%
  \long\def\tpIfComp##1##2##3{\expandafter\let\expandafter\@tempa\csname tp@\tp@namespace @##1\endcsname\expandafter\expandafter\expandafter\ifx\@tempa\relax##3\else##2\fi}%
  \long\def\tpIfCompEmpty##1##2##3{\expandafter\let\expandafter\@tempa\csname tp@\tp@namespace @##1\endcsname\expandafter\expandafter\expandafter\ifx\@tempa\relax##2\else##3\fi}%
}

%    \end{macrocode}
% Mid-level Macro that provides the common floating {\LaTeX}
% environment.
%    \begin{macrocode}

\def\tp@float[#1]#2#3#4{%
  \savenotes
  \begingroup
    \tpNamespace{#4}%
    \tp@reset@defaults{#2}{#3}%
    \tp@flt@cond
    \expandafter\tpCascadeProps\expandafter{#4}{float}%
    \tp@get@flt@attr{#1}{#2}%
    \tp@set@caption@comps
    \tpUseProperty{content-handler}%
    \tpUseProperty{before-float}%
    \tp@flt@set@hsize
}

\def\endtp@float{%
    \tp@set@flt@pos
    \tp@b@float
    \tp@test@caption{0}{capt}{top}%
    \tp@test@caption{0}{capt}{bottom}%
    %\tp@flt@create@labels%
    \tp@flt@compose
    \tp@set@bot@sep
    \tp@e@float
  \endgroup
  \global\let\tp@current@class\relax
  \spewnotes}
%    \end{macrocode}
% Test if the current (sub)float has any top or bottom captions that
% needed printed
%    \begin{macrocode}

\def\tp@test@caption#1#2#3{%
  \setbox\@tempboxa\hbox{\tpSubFloatCnt#1\tpUseProperty{caption-#3}}%
  \ifdim\wd\@tempboxa>\z@
    \expandafter\let\csname tp@has@#2@#3\endcsname\relax
  \fi
}

%    \end{macrocode}
% Calculate the ratio between each subfloat's height and the height of the largest subfloat
%    \begin{macrocode}
\def\tp@flt@calc@sameheight{%
  \@tempdima=\z@\relax
  \@tempcnta=\z@\relax
  \tp@iterate{\@tempcnta}{\@ne}{\tpSubFloatCnt}{%
    \edef\@tempa{\CalcRatio{\tp@subflt@maxheight}{\csname tp@\tp@namespace @height-\the\@tempcnta\endcsname}}%
    \ifnum\@tempcnta>\@ne
      \advance\tp@total@flt@width-\tp@subflt@sep\relax%
    \fi
    \expandafter\@tempdimc\csname tp@\tp@namespace @width-\the\@tempcnta\endcsname\relax
    \@tempdimb=\@tempa\@tempdimc\relax
    \expandafter\edef\csname  tp@\tp@namespace @adj@width-\the\@tempcnta\endcsname{\the\@tempdimb}%
    \advance\@tempdima\@tempdimb
  }%
  \@tempcnta=\z@\relax
  \tp@iterate{\@tempcnta}{\@ne}{\tpSubFloatCnt}{%
    \edef\@tempa{\CalcRatio{\csname tp@\tp@namespace @adj@width-\the\@tempcnta\endcsname}{\@tempdima}}%
    \expandafter\edef\csname tp@\tp@namespace @res@width-\the\@tempcnta\endcsname{\dimexpr\@tempa\tp@total@flt@width\relax}%
    \tp@test@caption{\the\@tempcnta}{subcapt}{top}%
    \tp@test@caption{\the\@tempcnta}{subcapt}{bottom}%
  }%
}

%    \end{macrocode}
% Process the contents of a subfloat
%    \begin{macrocode}
\def\tp@flt@process@sameheight{%
  \tp@flt@calc@sameheight
  \hskip\tp@flt@marg@l
  \vbox{%
    \tpUseProperty{subfloat-block}%
  }%
}

\def\tp@flt@process@sub{%
  \hskip\tp@flt@marg@l
  \tpUseProperty{subfloat-block}%
}

%    \end{macrocode}
% Process the contents of a float environment
%    \begin{macrocode}
\def\tp@flt@process{%
  \bgroup
    \ifnum\tpSubFloatCnt=\z@\relax
      \hskip\tp@flt@marg@l%
      \tpUseProperty{float-block}%
    \else
      \expandafter\tp@subflt@sep=\tpUseProperty{sub-float-sep}\relax%
      \tpIfProp{subfloat-same-height}
        {\tp@flt@process@sameheight}
        {\tp@flt@process@sub}%
    \fi
  \egroup
}

%    \end{macrocode}
% Composes the float.
%    \begin{macrocode}
\def\tp@make@full@caption#1{%
  \hskip\tp@flt@marg@l
  \tp@create@mp{\tp@make@caption{0}{#1}}{t}{\tp@total@flt@width}%
}

\def\tp@flt@compose{%
  \hsize\tp@total@flt@width
  \ifx\tp@has@capt@top\relax
    \expandafter\ifx\csname tp@\tp@captype @attr@sidecap\endcsname\relax\relax
      \tp@make@full@caption{top}%
    \else
      %% TODO: Sidecap handler: Besser nach \tp@flt@process ?
    \fi
  \fi
  \ifhmode\@@par\fi
  \tp@flt@process
  \ifhmode\@@par\fi
  \ifx\tp@has@capt@bottom\relax
    \expandafter\ifx\csname tp@\tp@captype @attr@sidecap\endcsname\relax
      \tp@make@full@caption{bottom}%
    \fi
  \fi
  \ifhmode\@@par\fi
}


%    \end{macrocode}
% shell for sub floats
%    \begin{macrocode}
\def\tpSubFloat{%
  \ifx\tp@is@subflt\relax
    \PackageError{transpect-floats.sty}{Nested tpSubFloats detected!}{You cannot nest a `tpSubFloat' environment into another `tpSubFloat' environment! Use the `tpSubFloatRow' and `tpSubFloatCol' environments to create more complex structures, instead.}%
  \else
    \let\tp@is@subflt\relax
    \global\advance\tpSubFloatCnt\@ne
    \ignorespaces
  \fi}

\def\tp@flt@create@natural{\tpUseComp{Content}}

\def\endtpSubFloat{%
  \setbox\tp@subfltbox\hbox{\tp@flt@create@natural}%\tpUseComp{Content}
  \expandafter\xdef\csname tp@\tp@namespace @width-\the\tpSubFloatCnt\endcsname{\the\wd\tp@subfltbox}%
  \expandafter\xdef\csname tp@\tp@namespace @height-\the\tpSubFloatCnt\endcsname{\the\ht\tp@subfltbox}%
  \expandafter\xdef\csname tp@\tp@namespace @depth-\the\tpSubFloatCnt\endcsname{\the\dp\tp@subfltbox}%
  \expandafter\xdef\csname tp@\tp@namespace @col-\the\tpSubFloatCnt\endcsname{\the\tp@subfloat@col}%
  \expandafter\xdef\csname tp@\tp@namespace @row-\the\tpSubFloatCnt\endcsname{\the\tp@subfloat@row}%
  \@tempdima=\dimexpr\the\ht\tp@subfltbox+\the\dp\tp@subfltbox\relax
  \@tempdimb=\dimexpr\the\wd\tp@subfltbox\relax
  \ifx\tp@subfloat@parent r\relax
    \expandafter\expandafter\expandafter\edef\expandafter\csname tp@flt@max@row@width@\the\tp@subfloat@row\expandafter\endcsname\expandafter
      {\dimexpr\csname tp@flt@max@row@width@\the\tp@subfloat@row\endcsname+\the\wd\tp@subfltbox\relax}%
    \expandafter\expandafter\expandafter\ifdim\expandafter\@tempdima>\csname tp@flt@max@row@height@\the\tp@subfloat@row\endcsname\relax
      \expandafter\edef\csname tp@flt@max@row@height@\the\tp@subfloat@row\endcsname{\the\@tempdima}%
    \fi
  \else
    \ifx\tp@subfloat@parent c\relax
      \expandafter\expandafter\expandafter\edef\expandafter\csname tp@flt@max@col@height@\the\tp@subfloat@col\expandafter\endcsname\expandafter
        {\dimexpr\csname tp@flt@max@col@height@\the\tp@subfloat@col\endcsname+\the\ht\tp@subfltbox+\the\dp\tp@subfltbox\relax}%
      \expandafter\expandafter\expandafter\ifdim\expandafter\@tempdimb>\csname tp@flt@max@col@width@\the\tp@subfloat@col\endcsname\relax
        \expandafter\edef\csname tp@flt@max@col@width@\the\tp@subfloat@col\endcsname{\the\@tempdimb}%
      \fi
    \else
      \ifx\tp@subfloat@parent f\relax
        \ifdim\@tempdima>\tp@subflt@maxheight\relax
          \global\tp@subflt@maxheight=\@tempdima\relax
        \fi
      \fi
    \fi
  \fi
  \ignorespaces
  \setbox\tp@subfltbox\box\voidb@x
  \let\tp@is@subflt\@undefined
}


\def\tpSubFloatRow{%
  \advance\tp@subfloat@row\@ne
  \let\tp@subfloat@prev@parent\tp@subfloat@parent
  \let\tp@subfloat@parent=r\relax
  \expandafter\def\csname tp@flt@max@row@height@\the\tp@subfloat@row\endcsname{\z@}%
  \expandafter\def\csname tp@flt@max@row@width@\the\tp@subfloat@row\endcsname{\z@}%
}
\def\endtpSubFloatRow{%
  \let\tp@subfloat@parent\tp@subfloat@prev@parent
}

\def\tpSubFloatCol{%
  \advance\tp@subfloat@col\@ne
  \let\tp@subfloat@prev@parent\tp@subfloat@parent
  \let\tp@subfloat@parent=c\relax
  \expandafter\let\csname tp@flt@max@col@width@\the\tp@subfloat@col\endcsname=\z@\relax
}
\def\endtpSubFloatCol{%
  \let\tp@subfloat@parent\tp@subfloat@prev@parent
}


%    \end{macrocode}
% \section{Handlers for figures}
%
%    \begin{macrocode}


\def\tpFigureHandler{\tpMakeFltComp{tpFig}{figure}{Content}}

\def\tpFigureFloat{%
  \ifx\tp@current@class\relax\else
    \let\includegraphics\tp@includesubgraphics
  \fi
  \tp@create@mp{\csname tp@\tp@namespace @figure-0\endcsname\nobreak}{t}{\the\tp@total@flt@width}%
}

\def\tpFigureSubFloat{%
  \ifx\tp@has@subcapt@top\relax
    \tp@iterate@mp{\tp@make@caption{\the\@tempcnta}{top}}{\tpUseProperty{caption-valign-top}}%
    \par\nobreak
  \fi%
  \tp@iterate@mp{\csname tp@\tp@namespace @figure-\the\@tempcnta\endcsname}{t}%
  \ifx\tp@has@subcapt@bottom\relax
    \par\nobreak
    \tp@iterate@mp{\tp@make@caption{\the\@tempcnta}{bottom}}{\tpUseProperty{caption-valign-bottom}}%%
  \fi
}

\def\tp@includesubgraphics{\@ifnextchar [\@tp@includesubgraphics{\@tp@includesubgraphics[]}}%]
\def\@tp@includesubgraphics[#1]#2{%
  \def\@igopts{width=\hsize}%
  \if!#1!\else
    \def\@igopts{#1,width=\hsize}%
  \fi
  \expandafter\ltx@includegraphics\expandafter[\@igopts]{#2}%
}


%    \end{macrocode}
%
%\section{Handlers for tables}
%
%
%    \begin{macrocode}

\def\tp@reserve@tabular{%
  %\@tp@reserve@tab{}% TODO: tabularx(und y) nutzen tabular, es kann also nicht (pauschal) überdefiniert werden…
  \@tp@reserve@tab{x}%
  \@tp@reserve@tab{y}%
}

\def\@tp@reserve@tab#1{%
  \expandafter\expandafter\expandafter\let\expandafter\csname orig@tabular#1\expandafter\endcsname\csname tabular#1\endcsname
  \expandafter\expandafter\expandafter\let\expandafter\csname orig@endtabular#1\expandafter\endcsname\csname endtabular#1\endcsname
  \expandafter\def\csname tabular#1\endcsname{\global\setbox\tp@floatbox\vbox\bgroup\csname orig@tabular#1\endcsname}%
  \expandafter\def\csname endtabular#1\endcsname{\csname orig@endtabular#1\endcsname\egroup}%
}

\def\tpTableHandler{%
  \tpMakeFltComp{tpContent}{content}{Content}%
  \tp@reserve@tabular
  \ifx\tp@uses@htmltabs\relax
    \global\setbox\htTableBox\box\voidb@x
    \let\htOutputTable\relax
  \fi}

\def\tpTableFloat{%
  \ifx\htTableBox\@undefined
    \tpContent{\unvbox\tp@floatbox}%
  \else
    \ifvoid\htTableBox
      \tpContent{\unvbox\tp@floatbox}%
    \else
      \tpContent{\box\htTableBox}%
    \fi
  \fi
  \tpUseComp{Content}%
}



%    \end{macrocode}
%
% \section{Handlers for generic floats}
%
%
%    \begin{macrocode}

\def\tpGenericFloat{\tpUseComp{Content}}

\def\tpGenericHandler{\tpMakeFltComp{tpContent}{content}{Content}}


%    \end{macrocode}
%
% \section{Default Settings}
%
% These declarations also provide the default values for the
% properties of the respective environments.
%    \begin{macrocode}
\tpAddToDefault{float}{%
  %% Deprecated:
  \tpSetProperty{caption-label-sep}{}
  \tpSetProperty{caption-label-font}{}
  \tpSetProperty{caption-source-sep}{}
  \tpSetProperty{caption-source-font}{}
  \tpSetProperty{caption-legend-sep}{}
  \tpSetProperty{caption-legend-font}{}
  \tpSetProperty{caption-font}{}
  % new and/or still used:
  \tpSetProperty{caption-valign-top}{t}%% vertical alignment of top sub-captions
  \tpSetProperty{caption-valign-bottom}{t}%% vertical alignment of bottom sub-captions
  \tpSetProperty{intext-skip-top}{\z@}%% non-float sep top
  \tpSetProperty{intext-skip-bottom}{\z@}%% non-float sep bottom
  \tpSetProperty{float-skip-top}{\z@}%% float sep top
  \tpSetProperty{float-skip-bottom}{\z@}%% float sep bottom
  \tpSetProperty{sub-float-sep}{\tp@subflt@sep}%% space between sub-floats
  \tpSetProperty{margin-left}{\z@}%% left margin
  \tpSetProperty{margin-right}{\z@}%% right margin
  \tpSetProperty{numbering}{auto}%% automatic numbering for missing Number component
  \tpSetProperty{label-sep}{\enskip}% Separator between label and caption
  \tpSetProperty{before-float}{\parindent\z@}%% executed before content is evaluated
  \tpSetProperty{content-handler}{\tpGenericHandler}% Alias for the caption type specific content handler
  \tpSetProperty{float-block}{\tpGenericFloat}% Alias for the caption type specific content printer
  \tpSetProperty{subfloat-block}{\tpGenericFloat}% Alias for the caption type specific content printer for sub-floats
  \tpSetProperty{subfloat-same-height}{}% if true, the subfloat must/can be adjusted to the same heights
  \tpSetProperty{caption-format}{}% style applied to top and bottom captions
  \tpSetProperty{caption-top}{%
    \tpIfComp{Number}{\tpUseComp{Number}\tpUseProperty{label-sep}}{}%
    \tpUseComp{Caption}%
  }%
  \tpSetProperty{caption-format-top}{}%% style applied to top captions
  \tpSetProperty{caption-sep-top}{\z@}%% vertical space between top caption and content
  \tpSetProperty{caption-bottom}{\tpUseComp{Legend}\\\tpUseComp{Source}}%
  \tpSetProperty{caption-format-bottom}{}%% style applied to bottom captions
  \tpSetProperty{caption-sep-bottom}{\z@}%% vertical space between content and bottom caption
  \tpSetProperty{sub-caption-top}{}%
  \tpSetProperty{sub-caption-bottom}{}%
}

\tpDeclareFloat{tpFigure}{figure}{lof}{%
  \tpSetProperty{subfloat-same-height}{true}% if true, the subfloat must/can be adjusted to the same heights
  \tpSetProperty{content-handler}{\tpFigureHandler}%
  \tpSetProperty{float-block}{\tpFigureFloat}
  \tpSetProperty{subfloat-block}{\tpFigureSubFloat}
}

\tpDeclareFloat{tpTable}{table}{lot}{%
  \tpSetProperty{caption-valign-top}{b}
  % new and/or still used
  \tpSetProperty{content-handler}{\tpTableHandler}
  \tpSetProperty{float-block}{\tpTableFloat}
  \tpSetProperty{subfloat-block}{\tpTableFloat}
}

 % %    \end{macrocode}
 % % Internal macros for generalized floating environments. They provide
 % % the macros used to compose floats to make sure they are used only
 % % within the \lstinline{tp@float}-derived environments.
 % %
 % % \#1: options, xml attribute syntax (\lstinline{attr="value"}),
 % % \begin{description}
 % % \item[float-pos] \LaTeX's float position, e.g. \lstinline{h}, \lstinline{t}, etc.\\
 % % \item[class] class\\
 % % \end{description}
 % %    \begin{macrocode}


 % \def\tp@float[#1]#2#3#4{%
 %   \savenotes
 %   \begingroup
 %     \tpNamespace{#4}%
 %     \tp@reset@subflts
 %     \tp@reset@components{0}%
 %     \def\tp@captype{#2}%
 %     \def\tp@caplisttype{#3}%
 %     \let\ht@cur@element\tp@captype
 %     \global\let\tp@current@class\relax
 %     \expandafter\tpCascadeProps\expandafter{#4}{float}%
 %     \if!#1!\else
 %       \tpParseAttributes{#2}{#1}%
 %       \expandafter\ifx\csname tp@#2@attr@class\endcsname\relax\else
 %         \expandafter\global\expandafter\let\expandafter\tp@current@class\csname tp@#2@attr@class\endcsname
 %         \message{^^Jtranspect-floats.sty: Class of float \tp@captype\space is: `\csname tp@#2@attr@class\endcsname'.}%
 %         \tpUseClass{default}{\tp@captype}%
 %         \expandafter\tpUseClass\expandafter{\csname tp@#2@attr@class\endcsname}{\tp@captype}%
 %       \fi
 %     \fi
 %     \expandafter\ifx\csname tp@#2@attr@float-pos\endcsname\relax
 %       \let\tp@fps\@empty
 %     \else
 %       \expandafter\let\expandafter\tp@fps\csname tp@#2@attr@float-pos\endcsname
 %     \fi
 %     \def\@tempa{h!}\ifx\tp@fps\@tempa\let\tp@fps\@empty\fi
 %     \def\tp@bcnthack{\bgroup\ifx\tp@is@subflt\relax\else\tp@subflts=\z@\relax\fi\expandafter\global}%
 %     \def\tp@ecnthack{\egroup}%
 %     \tpProvideComp{tpContent}{\tp@bcnthack}{\tp@ecnthack}{content-\the\tp@subflts}%
 %     \tpProvideComp{tpFig}{\tp@bcnthack}{\tp@ecnthack}{figure-\the\tp@subflts}%
 %     \tpProvideComp{tpCaption}{\tp@bcnthack}{\tp@ecnthack}{caption-\the\tp@subflts}%
 %     \tpProvideComp{tpLegend}{\tp@bcnthack}{\tp@ecnthack}{legend-\the\tp@subflts}%
 %     \tpProvideComp{tpSource}{\tp@bcnthack}{\tp@ecnthack}{source-\the\tp@subflts}%
 %     \tpProvideComp{tpNumber}{\tp@bcnthack}{\tp@ecnthack}{number-\the\tp@subflts}%
 %     \tpProvideComp{label}{\tp@bcnthack}{\tp@ecnthack}{label-\the\tp@subflts}%
 %     \parindent\z@
 %     \ifx\tp@do@dblfloat\relax\linewidth\dimexpr2\columnwidth+\columnsep\relax\fi
 %     \expandafter\ifx\csname tp@#2@attr@orientation\endcsname\tp@str@landscape
 %       \linewidth\textheight
 %       \def\tp@fps{p}%
 %     \else
 %       \ifx\tp@fps\@empty
 %         \expandafter\addvspace\expandafter{\tpUseProperty{intext-skip-top}}%
 %       \else
 %         \expandafter\addvspace\expandafter{\tpUseProperty{top-float-skip}}%
 %       \fi
 %     \fi
 %     \ifx\tp@captype\tp@str@table
 %       \ifx\tp@uses@htmltabs\relax
 %         \global\setbox\htTableBox\box\voidb@x
 %         \let\htOutputTable\relax
 %       \else
 %         \tp@reserve@tabular
 %       \fi
 %     \fi
 %   }

 % %    \end{macrocode}
 % % 1st iteration: only reading. This step happens when the contents of the float environment are read.
 % %    \begin{macrocode}
 % \RequirePackage{rotating}
 % \def\endtp@float{%
 %   \ifx\tp@fps\@empty\else
 %     \def\@tempa{h}\ifx\tp@fps\@tempa\def\tp@fps{ht!}\fi
 %     \let\tp@b@flt\tp@captype%
 %     \expandafter\ifx\csname tp@\tp@captype @attr@orientation\endcsname\tp@str@landscape
 %       \edef\tp@b@flt{sideways\tp@captype}%
 %     \fi
 %     \ifx\tp@do@dblfloat\relax
 %       \expandafter\def\expandafter\tp@b@flt\expandafter{\tp@b@flt*}%
 %     \fi
 %     \expandafter\expandafter\expandafter\begin\expandafter\expandafter\expandafter{\expandafter\tp@b@flt\expandafter}\expandafter[\tp@fps]%
 %   \fi
 %   \tp@flt@create@labels%
 %   \expandafter\ifx\csname tp@\tp@captype @float\endcsname\relax
 %     \tp@generic@float{0}%
 %   \else
 %     \csname tp@\tp@captype @float\endcsname
 %   \fi
 %   \par
 %   \ifx\tp@fps\@empty
 %     \expandafter\vskip\tpUseProperty{intext-skip-bottom}%
 %   \else
 %     \expandafter\addvspace\expandafter{\tpUseProperty{below-float-skip}}%
 %     \expandafter\end\expandafter{\tp@b@flt}%
 %   \fi
 %   \endgroup
 %   \global\let\tp@current@class\relax
 %   \spewnotes}





%    \end{macrocode}
% This mid-level command is used to override the content which is
% written into the \lstinline{listof*} list.
%    \begin{macrocode}
\def\tpListEntry{\tp@lo@cpt\space\tp@lo@src}
%    \end{macrocode}
% This macro adds the entry for the float to the corresponding list.
%    \begin{macrocode}
\def\tp@add@list#1{%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@cpt\expandafter\expandafter\expandafter{\csname tp@\tp@namespace @caption-#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@src\expandafter\expandafter\expandafter{\csname tp@\tp@namespace @source-#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@lbl\expandafter\expandafter\expandafter{\csname tp@\tp@namespace @number-#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@ref\expandafter\expandafter\expandafter{\csname tp@\tp@namespace @label-#1\endcsname}%
  \expandafter\ifx\tp@lo@src\relax\def\tp@lo@src{}\fi
  \expandafter\ifx\tp@lo@cpt\relax\else
    \expandafter\ifx\tp@lo@lbl\relax
      \addcontentsline{\tp@caplisttype}{\tp@captype}{\tpListEntry}%
    \else
      \tp@make@anchor%
      \addcontentsline{\tp@caplisttype}{\tp@captype}{\string\numberline{\tp@lo@lbl}\tpListEntry}%
    \fi
    %\tp@reset@components{#1}%
  \fi}
%    \end{macrocode}
% This is a rundimentary implementation of hyperref's anchor mechanism
% to make labels work:
%    \begin{macrocode}
\def\tp@make@anchor{%
  \expandafter\ifx\tp@lo@ref\relax\else
    \let\@currentlabel\tp@lo@lbl
    \expandafter\H@refstepcounter\expandafter{\tp@captype}%
    \expandafter\hyper@makecurrent\expandafter{\tp@captype}%
    \let\Hy@tempa\Hy@float@caption
    \expandafter\hyper@@anchor\expandafter{%
      \@currentHref
    }{\relax}%
    \let\@currentlabel\tp@lo@lbl
    \expandafter\ltx@label\expandafter{\tp@lo@ref}%
  \fi}

%    \end{macrocode}
% Resetting caption parameters
%    \begin{macrocode}

\def\tp@flt@create@labels{%
  \tpIfPropVal{numbering}{auto}{%
    \ifnum\tpSubFloatCnt=\z@\relax
       \tpIfComp{number-0}
         {}%
         {\expandafter\advance\csname c@\tp@captype\endcsname\@ne\relax
          \tp@set@label{0}}%
     \else
       \tp@iterate{\@tempcnta}{\@ne}{\tpSubFloatCnt}{%
         \tpIfComp{number-\the\@tempcnta}
           {}%
           {\expandafter\advance\csname c@\tp@captype\endcsname\@ne\relax
            \tp@set@label{\the\@tempcnta}}}
     \fi}{}}

\def\tp@set@label#1{%
  \expandafter\expandafter\expandafter\edef\expandafter\csname tp@\tp@namespace @number-#1\expandafter\endcsname\expandafter{\csname the\tp@captype\endcsname}%
}

%    \end{macrocode}
% LEGACY: Hooks to change the text font of a standard \LaTeX\ tabular
%    \begin{macrocode}
\def\tablefont{\small}
\def\arraystretch{1.3}
\def\@tabular{%
  \leavevmode
  \hbox \bgroup\tablefont $\col@sep\tabcolsep \let\d@llarbegin\begingroup%$
                                    \let\d@llarend\endgroup
  \ifx\ST@tableformat\@undefined\gdef\@tablefont{\tablefont}\fi
  \@tabarray}
\let\@classzold\@classz
\def\@classz{%
   \expandafter\ifx\d@llarbegin\begingroup
     \toks \count@ =
     \expandafter{\expandafter\@tablefont\the\toks\count@}%
   \fi
   \@classzold}
\def\endtabular{%
  \endarray
  $\egroup}%$
\expandafter\let\csname endtabular*\endcsname=\endtabular
