%    \end{macrocode}
% \chapter{transpect-floats.dtx}
% This module provides handlers for floating objects like tables and
% figires common to all Transpect projects
%
%    \begin{macrocode}
%%
%% module for le-tex transpect.cls that extends floating objects.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{transpect-floats}
    [2020/22/04 0.90 le-tex transpect floats module]
%    \end{macrocode}
% for automatic typesetting and float positioning, we use very high tolerances from standard \LaTeX:
%    \begin{macrocode}
\def\topfraction{0.9}
\def\textfraction{0.1}
\def\bottomfraction{0.8}
\def\totalnumber{8}
\def\topnumber{8}
\def\bottomnumber{8}
\def\floatpagefraction{.95}
%    \end{macrocode}
% some reserved registers
%    \begin{macrocode}
\newbox \tp@subfltbox
\newcount\tp@subflts          \tp@subflts=\z@\relax
\newdimen\tp@subflt@maxheight \tp@subflt@maxheight=\z@\relax
\newdimen\tp@subflt@sep       \tp@subflt@sep=\fboxsep\relax
\newdimen\tp@total@flt@width     \tp@total@flt@width=\textwidth\relax
%    \end{macrocode}
% Resetting the subfloats
%    \begin{macrocode}
\def\tp@reset@subflts{%
  \global\tp@subflts=\z@
  \global\tp@subflt@maxheight=\z@\relax
}

%    \end{macrocode}
% High level macro to (re-)declare a new tpFloat
% environment. \lstinline{#1}: inherit from, \lstinline{#2}:
% environment name, \lstinline{#3}: caption name, \lstinline{#4}:
% listof, \lstinline{#5} parameters.
%    \begin{macrocode}
\def\tpDeclareFloat{\@ifnextchar[{\@tpDeclareFloat}{\@tpDeclareFloat[]}}%]
\def\@tpDeclareFloat[#1]#2#3#4#5{%
  \def\tp@float@name{#2}%
  \expandafter\ifx\csname\tp@float@name\endcsname\relax
    \PackageInfo{transpect}{Declaring \tp@float@name\space environment}%
    \newenvironment{#2}[1][]{\tp@float[##1]{#3}{#4}{#2}}{\endtp@float}%
    \newenvironment{#2*}[1][]{\let\tp@do@dblfloat\relax\tp@float[##1]{#3}{#4}{#2}}{\endtp@dblfloat}%
  \else
    \PackageInfo{transpect}{Re-Declaring \tp@float@name\space environment}%
    \renewenvironment{#2}[1][]{\tp@float[##1]{#3}{#4}{#2}}{\endtp@float}%
    \renewenvironment{#2*}[1][]{\let\tp@do@dblfloat\relax\tp@float[##1]{#3}{#4}{#2}}{\endtp@dblfloat}%
  \fi
  \let\tp@namespace\tp@float@name
  \tp@cascade@props{#1}{#2}{float}
  \csname tp@#3@default\endcsname
  \if!#1!\else
    \expandafter\def\csname tp@#3@#2@parent\endcsname{#1}%
    \tp@inherit@props{#1}{#3}%
  \fi
  \expandafter\protect\expandafter\gdef\csname tp@float@#2@properties\endcsname{#5}%
  #5}
%    \end{macrocode}
% User macros. The optional argument corresponds to the placement
% parameter in standard \LaTeX\ environments.
%
% These declarations also provide the default values for the
% properties of the respective environments.
%    \begin{macrocode}
\tpAddToDefault{float}{%
  \tpSetProperty{caption-label-sep}{}
  \tpSetProperty{caption-label-font}{}
  \tpSetProperty{caption-source-sep}{}
  \tpSetProperty{caption-source-font}{}
  \tpSetProperty{caption-legend-sep}{}
  \tpSetProperty{caption-legend-font}{}
  \tpSetProperty{caption-format}{}
  \tpSetProperty{caption-format-below}{}
  \tpSetProperty{caption-format-above}{}
  \tpSetProperty{caption-font}{}
  \tpSetProperty{caption-above-sep}{\z@}
  \tpSetProperty{caption-below-sep}{\z@}
  \tpSetProperty{caption-order-above}{}
  \tpSetProperty{caption-order-below}{}
  \tpSetProperty{caption-valign-above}{t}
  \tpSetProperty{caption-valign-below}{t}
  \tpSetProperty{intext-skip-above}{\z@}
  \tpSetProperty{intext-skip-below}{\z@}
  \tpSetProperty{above-float-skip}{\z@}
  \tpSetProperty{below-float-skip}{\z@}
  \tpSetProperty{sub-float-sep}{\tp@subflt@sep}
  \tpSetProperty{left-skip}{\z@}
  \tpSetProperty{right-skip}{\z@}
}

\tpDeclareFloat{tpFigure}{figure}{lof}{%
  \tpSetProperty{caption-order-above}{}
  \tpSetProperty{caption-order-below}{label,caption,source,legend}
}
\tpDeclareFloat{tpTable}{table}{lot}{%
  \tpSetProperty{caption-order-above}{label,caption,source}
  \tpSetProperty{caption-order-below}{legend}
  \tpSetProperty{caption-valign-above}{b}
}
%    \end{macrocode}
% Internal macros for generalized floating environments. They provide
% the macros used to compose floats to make sure they are used only
% within the \lstinline{tp@float}-derived environments.
%
% \#1: options, xml attribute syntax (\lstinline{attr="value"}),
% \begin{description}
% \item[float-pos] \LaTeX's float position, e.g. \lstinline{h}, \lstinline{t}, etc.\\
% \item[class] class\\
% \end{description}
%    \begin{macrocode}
\let\ltx@label\label
\def\tp@str@landscape{landscape}
\def\tp@str@default{default}
\AtBeginDocument{\@ifpackageloaded{htmltabs}{\global\let\tp@uses@htmltabs\relax}{}}%

\def\tp@float[#1]#2#3#4{%
  \savenotes
  \begingroup
    \tpNamespace{#4}%
    \tp@reset@subflts
    \tp@reset@caption{0}%
    \def\tp@captype{#2}%
    \def\tp@caplisttype{#3}%
    \global\let\tp@current@class\relax
    \if!#1!\else
      \cssParseAttributes{#2}{#1}%
      \expandafter\ifx\csname css@#2@attr@class\endcsname\relax\else
        \expandafter\global\expandafter\let\expandafter\tp@current@class\csname css@#2@attr@class\endcsname
        \message{^^Jtranspect-floats.sty: Class of float \tp@captype\space is: `\csname css@#2@attr@class\endcsname'.}%
        \cssUseClass{default}%
        \expandafter\cssUseClass\expandafter{\csname css@#2@attr@class\endcsname}%
      \fi
    \fi
    \expandafter\ifx\csname css@#2@attr@float-pos\endcsname\relax
      \let\tp@fps\@empty
    \else
      \expandafter\let\expandafter\tp@fps\csname css@#2@attr@float-pos\endcsname
    \fi
    \def\@tempa{h!}\ifx\tp@fps\@tempa\let\tp@fps\@empty\fi
    \def\tp@bcnthack{\bgroup\ifx\tp@is@subflt\relax\else\tp@subflts=\z@\relax\fi}%
    \def\tp@ecnthack{\egroup}%
    \protected\def\tpFig##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@fig@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \protected\def\tpCaption##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@cpt@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \protected\def\tpLegend##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@lgd@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \protected\def\tpSource##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@src@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \protected\def\tpNumber##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@lbl@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \protected\def\label##1{\tp@bcnthack\ltx@LocalExpandAfter\protected\expandafter\gdef\csname tp@subflt@ref@\the\tp@subflts\endcsname{##1}\ignorespaces\tp@ecnthack}%
    \parindent\z@
    \ifx\tp@do@dblfloat\relax\linewidth\dimexpr2\columnwidth+\columnsep\relax\fi
    \expandafter\ifx\csname css@#2@attr@orientation\endcsname\tp@str@landscape
      \linewidth\textheight
      \def\tp@fps{p}%
    \else
      \ifx\tp@fps\@empty
        \expandafter\addvspace\expandafter{\tpUseProperty{intext-skip-above}}%
      \else
        \expandafter\addvspace\expandafter{\tpUseProperty{above-float-skip}}%
      \fi
    \fi
    \ifx\tp@uses@htmltabs\relax
      \global\setbox\htTableBox\box\voidb@x
      \let\htOutputTable\relax
    \fi
  }

%    \end{macrocode}
% 1st iteration: only reading. This step happens when the contents of the float environment are read.
%    \begin{macrocode}
\RequirePackage{rotating}
\def\endtp@float{%
  \ifx\tp@fps\@empty\else
    \def\@tempa{h}\ifx\tp@fps\@tempa\def\tp@fps{ht!}\fi
    \let\tp@b@flt\tp@captype%
    \expandafter\ifx\csname css@\tp@captype @attr@orientation\endcsname\tp@str@landscape
      \edef\tp@b@flt{sideways\tp@captype}%
    \fi
    \ifx\tp@do@dblfloat\relax
      \expandafter\def\expandafter\tp@b@flt\expandafter{\tp@b@flt*}%
    \fi
    \expandafter\expandafter\expandafter\begin\expandafter\expandafter\expandafter{\expandafter\tp@b@flt\expandafter}\expandafter[\tp@fps]%
  \fi
  \csname tp@\tp@captype @float\endcsname
  \par
  \ifx\tp@fps\@empty
    \expandafter\vskip\tpUseProperty{intext-skip-below}%
  \else
    \expandafter\addvspace\expandafter{\tpUseProperty{below-float-skip}}%
    \expandafter\end\expandafter{\tp@b@flt}%
  \fi
  \endgroup
  \global\let\tp@current@class\relax
  \spewnotes}
\def\endtp@dblfloat{\let\tp@do@dblfloat\relax\endtp@float}%
%    \end{macrocode}
% Sub-routine for tables
%    \begin{macrocode}
\def\tp@table@float{%
  \expandafter\ifx\csname tp@subflt@cpt@0\endcsname\relax
  \else
    \tp@make@caption{0}{above}%
  \fi
  \ifx\htTableBox\@undefined
  \else
    \ifvoid\htTableBox\else
      \box\htTableBox
    \fi
  \fi
  \expandafter\ifx\csname tp@subflt@cpt@0\endcsname\relax\else
    \tp@make@caption{0}{below}%
  \fi}

%    \end{macrocode}
% This mid-level command is used to override the content which is
% written into the \lstinline{listof*} list.
%    \begin{macrocode}
\def\tpListEntry{\tp@lo@cpt\space\tp@lo@src}
%    \end{macrocode}
% This macro adds the entry for the float to the corresponding list.
%    \begin{macrocode}
\def\tp@add@list#1{%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@cpt\expandafter\expandafter\expandafter{\csname tp@subflt@cpt@#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@src\expandafter\expandafter\expandafter{\csname tp@subflt@src@#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@lbl\expandafter\expandafter\expandafter{\csname tp@subflt@lbl@#1\endcsname}%
  \expandafter\expandafter\expandafter\def\expandafter\expandafter\expandafter\tp@lo@ref\expandafter\expandafter\expandafter{\csname tp@subflt@ref@#1\endcsname}%
  \expandafter\ifx\tp@lo@src\relax\def\tp@lo@src{}\fi
  \expandafter\ifx\tp@lo@cpt\relax\else
    \expandafter\ifx\tp@lo@lbl\relax
      \addcontentsline{\tp@caplisttype}{\tp@captype}{\tpListEntry}%
    \else
      \tp@make@anchor%
      \addcontentsline{\tp@caplisttype}{\tp@captype}{\string\numberline{\tp@lo@lbl}\tpListEntry}%
    \fi
    \tp@reset@caption{#1}%
  \fi}

%    \end{macrocode}
% This is a rundimentary implementation of hyperref's anchor mechanism
% to make labels work:
%    \begin{macrocode}
\def\tp@make@anchor{%
  \expandafter\ifx\tp@lo@ref\relax\else
    \let\@currentlabel\tp@lo@lbl
    \expandafter\H@refstepcounter\expandafter{\tp@captype}%
    \expandafter\hyper@makecurrent\expandafter{\tp@captype}%
    \let\Hy@tempa\Hy@float@caption
    \expandafter\hyper@@anchor\expandafter{%
      \@currentHref
    }{\relax}%
    \expandafter\ltx@label\expandafter{\tp@lo@ref}%
  \fi}


\let\ltx@includegraphics\includegraphics
\def\tp@includesubgraphics{\@ifnextchar [\@tp@includesubgraphics{\@tp@includesubgraphics[]}}%]
\def\@tp@includesubgraphics[#1]#2{%
  \def\@igopts{#1,width=\hsize}%
  \expandafter\ltx@includegraphics\expandafter[\@igopts]{#2}%
}

%    \end{macrocode}
% Sub-routine for figures
%    \begin{macrocode}
\def\tp@figure@float{%
  \tp@total@flt@width=\hsize\relax
  \expandafter\@tempdima\tpUseProperty{right-skip}\relax
  \ifdim\@tempdima>\z@\relax\advance\tp@total@flt@width-\@tempdima\relax\fi
  \expandafter\@tempdima\tpUseProperty{left-skip}\relax
  \ifdim\@tempdima>\z@\relax\advance\tp@total@flt@width-\@tempdima\relax\fi
  \hskip\@tempdima
  \vtop{%
    \hsize\tp@total@flt@width
    \expandafter\ifx\csname tp@subflt@cpt@0\endcsname\relax\else
      \tp@make@caption{0}{above}%
    \fi
    \bgroup
      \expandafter\tp@subflt@sep=\tpUseProperty{sub-float-sep}\relax%
      \@tempdima=\z@\relax
      \ifnum\tp@subflts=\z@\relax
        \ifx\tp@current@class\relax\else\let\includegraphics\tp@includesubgraphics\fi
        \tp@subflts\@ne
        \expandafter\def\csname tp@subflt@res@width@1\endcsname{\tp@total@flt@width}%
        \tp@create@mp{\csname tp@subflt@fig@0\endcsname\nobreak}{t}%
        \tp@subflts\z@
      \else
%    \end{macrocode}
% 2nd iteration: calculate the ratio between each subfigure's height and the height of the largest subfigure
%    \begin{macrocode}
        \sh@iterate{\@tempcnta}{\@ne}{\tp@subflts}{%
          \edef\@tempa{\CalcRatio{\tp@subflt@maxheight}{\csname tp@subflt@height@\the\@tempcnta\endcsname}}%
          \ifnum\@tempcnta>\@ne
            \advance\tp@total@flt@width-\tp@subflt@sep\relax%
          \fi
          \expandafter\@tempdimc\csname tp@subflt@width@\the\@tempcnta\endcsname\relax
          \@tempdimb=\@tempa\@tempdimc\relax
          \expandafter\edef\csname  tp@subflt@adj@width@\the\@tempcnta\endcsname{\the\@tempdimb}%
          \advance\@tempdima\@tempdimb
        }% /sh@iterate
        \@tempcnta\z@
%    \end{macrocode}
% 3rd iteration: Calculate width ratio of all adjusted subfigures against total width of all figures plus separators and print:
%    \begin{macrocode}
        \sh@iterate{\@tempcnta}{\@ne}{\tp@subflts}{%
          \edef\@tempa{\CalcRatio{\csname tp@subflt@adj@width@\the\@tempcnta\endcsname}{\@tempdima}}%
          \expandafter\edef\csname tp@subflt@res@width@\the\@tempcnta\endcsname{\dimexpr\@tempa\tp@total@flt@width\relax}%
          \expandafter\ifx\csname tp@subflt@cpt@\the\@tempcnta\endcsname\relax\else\let\tp@has@subcapt\relax\fi
        }%
        \ifx\tp@has@subcapt\relax\tp@create@mp{\tp@make@caption{\the\@tempcnta}{above}}{\tpUseProperty{caption-valign-above}}\par\fi%
        \tp@create@mp{\csname tp@subflt@fig@\the\@tempcnta\endcsname}{t}%
        \ifx\tp@has@subcapt\relax \par\tp@create@mp{\tp@make@caption{\the\@tempcnta}{below}}{\tpUseProperty{caption-valign-below}}\par\fi%
        \par
      \fi
    \egroup
    \expandafter\ifx\csname tp@subflt@cpt@0\endcsname\relax\else
      \tp@make@caption{0}{below}%
    \fi
  }% /vbox
}
%    \end{macrocode}
% creates a minipage of a fixed width for each part of a sub figure
%    \begin{macrocode}
\def\tp@create@mp#1#2{%
  \sh@iterate{\@tempcnta}{\@ne}{\tp@subflts}{%
    \ifnum\@tempcnta>\@ne\relax\hfill\fi
    \begin{minipage}[#2][][b]{\the\csname tp@subflt@res@width@\the\@tempcnta\endcsname}%
      \ifx\tp@current@class\relax\else\let\includegraphics\tp@includesubgraphics\fi
      #1
    \end{minipage}%
  }}

%    \end{macrocode}
% prints a sub figure without a minipage
%    \begin{macrocode}

%    \end{macrocode}
% Mechanism to determine the correct order of caption constituents
%    \begin{macrocode}
\def\tp@flt@use@label#1{%
  \expandafter\ifx\csname tp@subflt@lbl@#1\endcsname\relax\else
    \bgroup
      \expandonce{\tpUseProperty{caption-label-font}}%
      \csname tp@subflt@lbl@#1\endcsname%
    \egroup
    \tpUseProperty{caption-label-sep}%
  \fi
}
\def\tp@flt@use@legend#1{%
  \expandafter\ifx\csname tp@subflt@lgd@#1\endcsname\relax\else
    \tpUseProperty{caption-legend-sep}%
    \bgroup
      \expandonce{\tpUseProperty{caption-legend-font}}%
      \expandonce{\csname tp@subflt@lgd@#1\endcsname}%
    \egroup
  \fi
}
\def\tp@flt@use@source#1{%
  \expandafter\ifx\csname tp@subflt@src@#1\endcsname\relax\else
    \tpUseProperty{caption-source-sep}%
    \bgroup
      \expandonce{\tpUseProperty{caption-source-font}}%
      \expandonce{\csname tp@subflt@src@#1\endcsname}%
    \egroup
  \fi
}
\def\tp@flt@use@caption#1{%
  \bgroup
    \expandonce{\tpUseProperty{caption-font}}%
    \expandonce{\csname tp@subflt@cpt@#1\endcsname}%
  \egroup}

%    \end{macrocode}
% split comma separated list of constituents given by
% \lstinline{\tpCaptionOrderTop} and
% \lstinline{\tpCaptionOrderBottom}, respectively
%    \begin{macrocode}
\def\tp@traverse@cap@order #1,#2,\@nil#3{%
  \if!#1!\else
    \expandafter\ifx\csname tp@flt@use@#1\endcsname\relax\else%
      \csname tp@flt@use@#1\endcsname{#3}%
    \fi
    \if!#2!\else
      \tp@traverse@cap@order#2,\@nil{#3}%
    \fi
  \fi
}
\def\tp@caption@order#1#2{%
  \edef\@tp@cap@odr{\tpUseProperty{caption-order-#2}}%
  \expandafter\tp@traverse@cap@order\@tp@cap@odr,,\@nil{#1}%
}

%    \end{macrocode}
% prints the caption
%    \begin{macrocode}
\def\tp@make@caption#1#2{%
  \def\@argii{#2}\def\@tempa{below}%
  \ifx\@tempa\@argii
    \expandafter\vskip\tpUseProperty{caption-below-sep}%
  \fi
  \bgroup%
    \expandonce{\tpUseProperty{caption-format}}%
    \expandonce{\tpUseProperty{caption-format-#2}}%
    \strut\tp@caption@order{#1}{#2}\strut%
    \nobreak\par
  \egroup
  \ifx\@tempa\@argii
    \tp@add@list{#1}%
  \else
    \expandafter\vskip\tpUseProperty{caption-above-sep}%
  \fi
}
%    \end{macrocode}
% Resetting caption parameters
%    \begin{macrocode}
\def\tp@reset@caption#1{%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@fig@#1\endcsname\relax%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@cpt@#1\endcsname\relax%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@src@#1\endcsname\relax%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@lbl@#1\endcsname\relax%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@lgd@#1\endcsname\relax%
  \ltx@LocalExpandAfter\global\expandafter\let\csname tp@subflt@ref@#1\endcsname\relax%
  }
%    \end{macrocode}
% shell for sub floats
%    \begin{macrocode}
\def\tpSubFloat{%
  \let\tp@is@subflt\relax
  \global\advance\tp@subflts\@ne
  \ignorespaces}

\def\endtpSubFloat{%
  \setbox\tp@subfltbox\hbox{\csname tp@subflt@fig@\the\tp@subflts\endcsname}%
  \expandafter\xdef\csname tp@subflt@width@\the\tp@subflts\endcsname{\the\wd\tp@subfltbox}%
  \expandafter\xdef\csname tp@subflt@height@\the\tp@subflts\endcsname{\the\ht\tp@subfltbox}%
  \expandafter\xdef\csname tp@subflt@depth@\the\tp@subflts\endcsname{\the\dp\tp@subfltbox}%
  \expandafter\ifdim\csname tp@subflt@height@\the\tp@subflts\endcsname>\tp@subflt@maxheight\relax
    \expandafter\global\expandafter\tp@subflt@maxheight=\csname tp@subflt@height@\the\tp@subflts\endcsname\relax
  \fi\ignorespaces}

%    \end{macrocode}
% LEGACY: Hooks to change the text font of a standard \LaTeX\ tabular
%    \begin{macrocode}
\def\tablefont{\small}
\def\arraystretch{1.3}
\def\@tabular{%
  \leavevmode
  \hbox \bgroup\tablefont $\col@sep\tabcolsep \let\d@llarbegin\begingroup%$
                                    \let\d@llarend\endgroup
  \ifx\ST@tableformat\@undefined\gdef\@tablefont{\tablefont}\fi
  \@tabarray}
\let\@classzold\@classz
\def\@classz{%
   \expandafter\ifx\d@llarbegin\begingroup
     \toks \count@ =
     \expandafter{\expandafter\@tablefont\the\toks\count@}%
   \fi
   \@classzold}
\def\endtabular{%
  \endarray
  $\egroup}%$
\expandafter\let\csname endtabular*\endcsname=\endtabular
