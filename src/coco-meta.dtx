% \chapter{coco-meta.dtx}
% This file provides some macros that are used to process meta data,
% both for the whole document, as well as parts of a document.
%
%    \begin{macrocode}[gobble=1]
%<*meta>
%    \end{macrocode}
% File preamble
%    \begin{macrocode}
%%
%% module for CoCoTeX that provides handling of a document's meta data.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{coco-meta}
    [\filedate \fileversion CoCoTeX meta module]
\RequirePackage{coco-common}
%    \end{macrocode}
% \begin{tpContainer}{Meta} is the abstract Container for meta data,
%   both for whole documents as well as parts of documents.
%    \begin{macrocode}
\tpDeclareContainer{Meta}{%
  \tpDeclareType{Components}{%
    \tpDeclareRole[author]{Author}%
    \tp@declare@meta@comp
    \tp@declare@meta@affils
  }%
  \tpDeclareType{Properties}{%
    \tp@Meta@default
  }%
}
%    \end{macrocode}
% \end{tpContainer}
%
% \section{Counted Container Handlers}
%
% \subsection{Generic Blocks}
%
% \begin{macro}{\tp@meta@generic@comp} is used to define a generic
%   meta data block.It provides two Components for each instance, one
%   for the block's Heading and one for its Content.
%    \begin{macrocode}
\def\tp@meta@generic@comp{%
  \tpDeclareComp{GenericMetaBlock}{\expandafter\global}{}%
  \tpDeclareComponentGroup{tpGenericMeta}{%
    \tpDeclareCountedComp{Heading}%
    \tpDeclareCountedComp{Content}%
  }}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@generic@eval} evaluates the Components and
%   tells the Framework how the generic counted Sub-Containers should
%   be rendered.
%    \begin{macrocode}
\def\tp@meta@generic@eval{{%
  \def\tp@cur@cont{titlepage}%
  \tpComposeCollection{tpGenericMeta}{generic-meta-format}{GenericMetaBlock}
}}
%    \end{macrocode}
% \end{macro}
% \subsection{Contributor Roles}
%
% Contributors are counted sub-containers that represent the meta-data
% of people that share a role in contributing content to a document.
% Examples for such roles are an article{\slash}chapter{\slash}book's
% authors, or a collection{\slash}series' editors.
%
% \begin{macro}{\tpDeclareRole} is used to declare the Components that
%   belong to each member of a contributor role. \#2 is the name of
%   the role, optional \#1 is the internal name of the Role's
%   formatting Property. If omitted, it is the same as \#2.
%
%   The output of all members of a role is controlled by a Component
%   called ``\lstinline{<role>NameList}'' that is formatted according
%   to the \lstinline{<role>-format} Property. For reasons of naming
%   conventions, the role names for a Component and its respective
%   Property do not necessarily need to be identical.
%    \begin{macrocode}
\def\tpDeclareRole{\tp@opt@second\tp@declare@role}%
\def\tp@declare@role[#1]#2{%
  \tpDeclareComponentGroup{tp#2}{%
    \tpDeclareCountedComp{FullName}%
    \tpDeclareCountedComp{CiteName}%
    \tpDeclareCountedComp{ShortCiteName}%
    \tpDeclareCountedComp{Initial}%
    \tpDeclareCountedComp{LastName}%
    \tpDeclareCountedComp{FirstName}%
    \tpDeclareCountedComp{MidName}%
    \tpDeclareCountedComp{PersonPrefix}%
    \tpDeclareCountedComp{ORCID}%
    \tpDeclareCountedComp{Affil}%
    \tpDeclareCountedComp{Email}%
  }%
  \tpGroupHandler{tp#2}{%
    \tpIfComp{FullName}{}{\tpFullName{\tpUseProperty{name-format}}}%
    \tpIfComp{Initial}{}{\tpInitial{\tpUseProperty{initials-format}}}%
    \tpIfComp{CiteName}{}{\tpCiteName{\tpUseProperty{cite-name-format}}}%
    \tpIfComp{ShortCiteName}{}{\tpShortCiteName{\tpUseProperty{short-cite-name-format}}}%
  }%
  \tpDeclareRoleBlock{#2}{NameList}{#1-list-format}%
  \tpDeclareRoleBlock{#2}{CitationList}{#1-citation-format}%
  \tpDeclareRoleBlock{#2}{ShortCitationList}{#1-short-citation-format}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpAddToRole} appends another Component declaration block \#2 to a pre-defined Role \#1.
%    \begin{macrocode}
\def\tpAddToRole#1#2{\csgappto{tp#1}{#2}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpDeclareRoleBlock} is used to create a new output
%   container (named \lstinline{\tp#1#2}) for a given Role \#1. A Role
%   Block is a Component of the parent Container which contains
%   certain Components of all members of the Role within its parent
%   Container. Format and selection of the utilised Components are specified
%   via the Property given in \#3.
%    \begin{macrocode}
\def\tpDeclareRoleBlock#1#2#3{%
  \tpDeclareComp{#1#2}{\expandafter\global}{}%
  \csgdef{tp@meta@role@#1@#2}{#3}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tp@meta@role@eval} creates the name lists for the
%   role. \#1 is the name of the role.
%    \begin{macrocode}
\def\tp@meta@role@eval#1{{%
    \@tp@meta@role@eval{#1}{NameList}%
    \@tp@meta@role@eval{#1}{CitationList}%
    \@tp@meta@role@eval{#1}{ShortCitationList}%
  }}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@tp@meta@role@eval} \#1 is the name of the role and
%   \#2 is the name of the list. The access Component is
%   \lstinline{#1#2}, i.e., both argumets together.
%
%    \begin{macrocode}
\def\@tp@meta@role@eval#1#2{%
%    \end{macrocode}
% First, we check if the Component has already been set in the
% input. if so, nothing is done since this counts as global override
% before any automatic list creation.
%    \begin{macrocode}
  \tpIfComp{#1#2}{}{%
%    \end{macrocode}
% Second, we check if the counter for the Role is defined and greater
% than 0. If neither is the case, this means that the Group does not
% occur in the input, at all, so we don't need to do anything.
%    \begin{macrocode}
    \ifcsdef{tp#1Cnt}
      {\expandafter\ifnum\csname tp#1Cnt\endcsname>\z@
%    \end{macrocode}
% otherwise, we evaluate the attributes on the Group's Container
%    \begin{macrocode}
          \tp@eval@role@attrs{#1}%
%    \end{macrocode}
% and call the Property that is stored in
% \lstinline{\tp@meta@role@#1@#2} and store teh result in the
% Component \lstinline{#1#2}.
%    \begin{macrocode}
          \tpApplyCollection{tp#1}{\csname tp@meta@role@#1@#2\endcsname}{#1#2}%
        \fi
      }{}}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@eval@role@attrs} evaluates the attributes that are
%   provided by the user in the optional argument of a role's
%   environment. \#1 is the name of the role.
%    \begin{macrocode}
\def\tp@eval@role@attrs#1{%
    \tp@iterate{\@tempcnta}{\@ne}{\csname tp#1Cnt\endcsname}{%
      \ifcsdef{tp@meta@#1-\the\@tempcnta @attrs\endcsname}{%
        \tpParseAttributes{#1-\the\@tempcnta }{\csname tp@meta@#1-\the\@tempcnta @attrs\endcsname}%
      }{}}}
%    \end{macrocode}
% \end{macro}
%
%
% \section{Labeled Components}
%
% \begin{macro}{\tpDeclareLabeledComp} declares two Components: one
%   named \lstinline{\csname tp#2\endcsname} for the value and another
%   one named \lstinline{\csname tp#2Label\endcsname} for its
%   corresponding label. \#3 is used for property overrides. The
%   optional Argument \#1 allows to set a default value for the Label.
%    \begin{macrocode}
\def\tpDeclareLabeledComp{\tp@opt@empty\tp@declare@labeled@comp}
\def\tp@declare@labeled@comp[#1]#2#3{%
  \tpDeclareComp{#2}{\expandafter\global}{}%
  \tpDeclareComp{#2Label}{\expandafter\global}{}%
  \csxdef{labeled-meta-property-infix-\tp@cur@cont-#2}{#3}%
  \if!#1!\else\expandafter\long\expandafter\def\csname tp@\tp@cur@cont @#2Label\endcsname{#1}\fi
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpUseLabeledComp} declares two Components: one named
%   \lstinline{\csname tp#1\endcsname} for the value and another one
%   named \lstinline{\csname tp#1Label\endcsname} for its
%   corresponding label. An optional Argument allows to set a default
%   value for the Label.
%    \begin{macrocode}
\def\tpUseLabeledComp#1{%
  \tpIfComp{#1}{%
%    \end{macrocode}
%
% \begin{macro}{\tpCurInfix} stores the currently active property
%   infix for the Labeled Component
%    \begin{macrocode}
    \letcs\tpCurInfix{labeled-meta-property-infix-\tp@cur@cont-#1}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpCurComp} stores the currently active Component name
%    \begin{macrocode}
    \def\tpCurComp{#1}%
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
    \tpIfProp{labeled-meta-\tpCurInfix-format}
      {\tpUseProperty{labeled-meta-\tpCurInfix-format}}
      {\tpUseProperty{labeled-meta-format}}%
  }{}}
%    \end{macrocode}
% \end{macro}
%
% \section{common meta data}
%
%    \begin{macrocode}
\def\tp@declare@meta@comp{%
    \tpDeclareComp{Copyright}{\expandafter\global}{}% Copyright text
    \tpDeclareComp{DOI}{\expandafter\global}{}%         DOI
}%
%    \end{macrocode}
% \begin{macro}{\tp@extended@meta@macros}
%   provides some extended markup. Some headings use these Components
%   for compilations of contributions by different authors. They are
%   also loaded by article title pages.
%    \begin{macrocode}
\def\tp@extended@meta@macros{%
  \tpDeclareLabeledComp[Abstract]{Abstract}{abstract}%
  \tpDeclareLabeledComp[Keywords]{Keywords}{keyword}%
  \tpDeclareLabeledComp{DOI}{doi}%
  \tpDeclareLabeledComp{TitleEn}{title-en}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Affiliations}
%
% \begin{macro}{\tp@meta@affils} is a wrapper that creates the
%   user-level macros for the affiliations.
%    \begin{macrocode}
\def\tp@declare@meta@affils{%
  \tpDeclareComp{AffilBlock}{\expandafter\global}{}%
  \tpDeclareComponentGroup{tpAffil}{%
    \tpDeclareCountedComp{Affiliation}%
    \tpDeclareCountedComp{Address}%
    \tpDeclareCountedComp{Institute}%
    \tpDeclareCountedComp{Country}%
    \tpDeclareCountedComp{Department}%
    \tpDeclareCountedComp{AffilID}%
  }%
  \tpGroupHandler{tpAffil}{%
    \tpIfComp{AffilID}{}{\expandafter\tpAffilID\expandafter{\tpAffilCnt}}%
    \tpIfComp{Affiliation}{}{\tpAffiliation{\tpUseProperty{affiliation-format}}}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
%
% Defaut Property settings for the Meta Container.
%    \begin{macrocode}
\tpAddToDefault{Meta}{%
  \tpSetProperty{initials-format}{%
    \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\long@empty\else
      \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\relax\else
        \expandafter\expandafter\expandafter\@car\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\relax\@nil\tpUseProperty{initials-period}
      \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\long@empty\else
        \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\relax\else
          \tpUseProperty{initials-sep}%
          \expandafter\expandafter\expandafter\@car\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\relax\@nil\tpUseProperty{initials-period}%
        \fi\fi
    \fi\fi
  }
  \tpSetProperty{initials-sep}{~}
  \tpSetProperty{initials-period}{.}
  \tpSetProperty{name-format}{\tpUseComp{FirstName}\space\tpUseComp{LastName}}%
  \tpSetProperty{cite-name-format}{\tpUseComp{LastName}}%
  \tpSetProperty{short-cite-name-format}{\tpUseComp{LastName},~\tpUseComp{Initial}}%
  \tpSetProperty{name-list-format}{\tpUseComp{FullName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}%
  \tpSetProperty{name-citation-format}{\tpUseComp{CiteName}}%
  \tpSetProperty{name-short-citation-format}{\tpUseComp{ShortCiteName}}%
  % Aliasses
  \tpPropertyLet{author-format}{name-format}% Override for single author names
  \tpPropertyLet{author-list-format}            {name-list-format}% Override for single author names
  \tpPropertyLet{author-citation-format}        {name-citation-format}% Override for single author names
  \tpPropertyLet{author-short-citation-format}  {name-short-citation-format}% Override for single author names
  %
  \tpSetProperty{counted-name-sep}{,\space}%
  \tpSetProperty{name-and}{\space and\space}%
  \tpSetProperty{name-etal}{\space et~al.}%
  \tpSetProperty{name-sep}{,\space}%
  \tpSetProperty{corresp-mark}{*}%
  % Affiliation Properties
  \tpSetProperty{affiliation-format}{% Format of the  affiliation block
    \tpIfComp{Institute}{\tpUseComp{Institute}}{}%
    \tpIfComp{Department}{, \tpUseComp{Department}}{}%
    \tpIfComp{Address}{, \tpUseComp{Address}}{}%
    \tpUseProperty{affil-sep}%
  }%
  \tpSetProperty{affil-sep}{\par}
  \tpSetProperty{affil-block-format}{\textsuperscript{\tpUseComp{AffilID}}\tpUseComp{Affiliation}}
  \tpSetProperty{affil-block-face}{\small\normalfont}
  % Labeled Meta Properties
  \tpSetProperty{labeled-meta-format}{%
    \tpIfProp{labeled-meta-before-\tpCurInfix}
      {\tpUseProperty{labeled-meta-before-\tpCurInfix}}
      {\tpUseProperty{labeled-meta-before}}%
    \bgroup
      \tpIfProp{labeled-meta-\tpCurInfix-face}
        {\tpUseProperty{labeled-meta-\tpCurInfix-face}}
        {\tpUseProperty{labeled-meta-face}}%
      \tpIfProp{labeled-meta-\tpCurInfix-label-format}
        {\tpUseProperty{labeled-meta-\tpCurInfix-label-format}}
        {\tpUseProperty{labeled-meta-label-format}}%
      \tpUseComp{\tpCurComp}%
    \egroup
    \tpIfProp{labeled-meta-after-\tpCurInfix}
      {\tpUseProperty{labeled-meta-after-\tpCurInfix}}
      {\tpUseProperty{labeled-meta-after}}%
  }
  \tpSetProperty{labeled-meta-label-format}{%
    \tpIfComp{\tpCurComp Label}{%
      \bgroup
        \tpIfProp{labeled-meta-\tpCurInfix-label-face}
          {\tpUseProperty{labeled-meta-\tpCurInfix-label-face}}
          {\tpUseProperty{labeled-meta-label-face}}%
        \tpUseComp{\tpCurComp Label}%
        \tpIfProp{meta-labeled-\tpCurInfix-sep}
          {\tpUseProperty{labeled-meta-\tpCurInfix-label-sep}}
          {\tpUseProperty{labeled-meta-label-sep}}%
      \egroup
    }{}}
  \tpSetProperty{labeled-meta-label-face}{\bfseries}
  \tpSetProperty{labeled-meta-label-sep}{:\enskip}
  \tpSetProperty{labeled-meta-face}{}
  \tpSetProperty{labeled-meta-before}{}
  \tpSetProperty{labeled-meta-after}{\par}
}
%    \end{macrocode}
%    \begin{macrocode}[gobble=1]
%</meta>
%    \end{macrocode}
