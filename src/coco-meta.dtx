% \chapter{coco-meta.dtx}
% This file provides some macros that are used to process meta data,
% both for the whole document, as well as parts of a document.
%
%    \begin{macrocode}[gobble=1]
%<*meta>
%    \end{macrocode}
% File preamble
%    \begin{macrocode}
%%
%% module for CoCoTeX that provides handling of a document's meta data.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{coco-meta}
    [\filedate \fileversion CoCoTeX meta module]
\RequirePackage{coco-common}
%    \end{macrocode}
% \begin{ContainerDoc}{CommonMeta} is an abstract Container for
%   commonly used meta data, both for whole documents as well as parts
%   of documents.
%    \begin{macrocode}
\ccDeclareContainer{CommonMeta}{%
  \ccDeclareType{Components}{%
    \ccDeclareRole[author]{Author}%
    \ccm@declare@comp
    \ccm@extended@common@macros
    \ccm@declare@affils
  }%
  \ccDeclareType{Properties}{}%
}
%    \end{macrocode}
% \end{ContainerDoc}
%
% \section{Counted Container Handlers}
%
% \subsection{Generic Blocks}
%
% \begin{macro}{\ccm@generic@comp} is used to define a generic
%   meta data block.It provides two Components for each instance, one
%   for the block's Heading and one for its Content.
%    \begin{macrocode}
\def\ccm@generic@comp{%
  \ccDeclareComponent{GenericMetaBlock}{\expandafter\global}{}%
  \ccDeclareComponentGroup{GenericMeta}{%
    \ccDeclareCountedComponent{Heading}%
    \ccDeclareCountedComponent{Content}%
  }}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccm@generic@eval} evaluates the Components and
%   tells the Framework how the generic counted Sub-Containers should
%   be rendered.
%    \begin{macrocode}
\def\ccm@generic@eval{{%
  \def\cc@cur@cont{titlepage}%
  \ccComposeCollection{GenericMeta}{generic-meta-format}{GenericMetaBlock}
}}
%    \end{macrocode}
% \end{macro}
% \subsection{Contributor Roles}
%
% Contributors are counted sub-containers that represent the meta-data
% of people that share a role in contributing content to a document.
% Examples for such roles are an article{\slash}chapter{\slash}book's
% authors, or a collection{\slash}series' editors.
%
% \begin{macro}{\ccDeclareRole} is used to declare the Components that
%   belong to each member of a contributor role. \#2 is the name of
%   the role, optional \#1 is the internal name of the Role's
%   formatting Property. If omitted, it is the same as \#2.
%
%   The output of all members of a role is controlled by a Component
%   called ``\lstinline{<role>NameList}'' that is formatted according
%   to the \lstinline{<role>-format} Property. For reasons of naming
%   conventions, the role names for a Component and its respective
%   Property do not necessarily need to be identical.
%    \begin{macrocode}
\def\ccDeclareRole{\cc@opt@second\cc@declare@role}%
\def\cc@declare@role[#1]#2{%
  \ccDeclareComponentGroup{#2}{%
    \ccDeclareCountedComponent{FullName}%
    \ccDeclareCountedComponent{CiteName}%
    \ccDeclareCountedComponent{ShortCiteName}%
    \ccDeclareCountedComponent{PDFInfoName}%
    \ccDeclareCountedComponent{Initial}%
    \ccDeclareCountedComponent{LastName}%
    \ccDeclareCountedComponent{FirstName}%
    \ccDeclareCountedComponent{MidName}%
    \ccDeclareCountedComponent{Honorific}%
    \ccDeclareCountedComponent{Lineage}%
    \ccDeclareCountedComponent{ORCID}%
    \ccDeclareCountedComponent{AffilRef}% for references to the Affil Group
    \ccDeclareCountedComponent{Affiliation}% for affiliations  as direct Author meta data
    \ccDeclareCountedComponent{Email}%
    \ccDeclareCountedComponent{CorrespondenceAs}%
  }%
  \ccDeclareGroupHandler{#2}{%
    \ccIfComp{FullName}{}{\ccComponent{FullName}{\ccUseProperty{#1-full-name-format}}}%
    \ccIfComp{Initial}{}{\ccComponent{Initial}{\ccUseProperty{initials-format}}}%
    \ccIfComp{CiteName}{}{\ccComponent{CiteName}{\ccUseProperty{#1-cite-name-format}}}%
    \ccIfComp{ShortCiteName}{}{\ccComponent{ShortCiteName}{\ccUseProperty{#1-short-cite-name-format}}}%
    \ccIfComp{PDFInfoName}{}{\ccComponent{PDFInfoName}{\ccUseProperty{#1-pdfinfo-name-format}}}%
    \ccIfComp{CorrespondenceAs}{}{\ccComponent{CorrespondenceAs}{\ccUseProperty{#1-correspondence-as-format}}}%
    \ccIfComp{AffilRef}{\ccIfComp{Affiliation}{%
        \ccPackageError{Meta}{Ambiguity}
          {You cannot use both Containers AffilRef and Affiliation in the same `\ccPrefix#2' Sub-Container}
          {At least one `\ccPrefix#2' Sub-Container contains both AffilRef and Affiliation. This is not allowed. Please decide for one affiliation strategy: Either two lists with cross-references, or affiliations directly as an author's meta-data.}}{}}{}%
  }%
  \ccDeclareRoleBlock{#2}{NameList}{#1-list-print-format}%
  \ccDeclareRoleBlock{#2}{CitationList}{#1-list-cite-format}%
  \ccDeclareRoleBlock{#2}{ShortCitationList}{#1-list-short-cite-format}%
  \ccDeclareRoleBlock[apply]{#2}{PDFInfo}{#1-list-pdfinfo-format}%
  \ccDeclareRoleBlock{#2}{Correspondence}{#1-list-correspondence-format}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccAddToRole} appends another Component declaration block \#2 to a pre-defined Role \#1.
%    \begin{macrocode}
\def\ccAddToRole#1#2{%
  \csgappto{@#1@hook}{#2}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccDeclareRoleBlock} is used to create a new output
%   container (named \lstinline{\ccPrefix#2#3}) for a given Role \#2. A Role
%   Block is a Component of the parent Container which contains
%   certain Components of all members of the Role within its parent
%   Container. Format and selection of the utilised Components are
%   specified via the Property given in \#4. The optional argument \#1
%   tells the evaluator in the Container's \lstinline{end} macro how
%   the collector is to be composed. Valid values are
%   \lstinline{compose} (default) or \lstinline{apply}.
%    \begin{macrocode}
\def\ccDeclareRoleBlock{\@ifnextchar[\cc@declare@role@block{\cc@declare@role@block[compose]}}%]
\def\cc@declare@role@block[#1]#2#3#4{%
  \ifcsdef{ccm@role@#1}
    {\ccDeclareComponent{#2#3}{\expandafter\global}{}%
     \csgdef{ccm@role@\cc@cur@cont @#2@#3}{#4}%
     \csappto{@ccm@role@eval@\cc@cur@cont @#2}
        {\csname ccm@role@#1\endcsname{#2}{#3}}}
    {\ccPackageError{Meta}{Argument}
      {Invalid optional argument in \string\ccDeclareRoleBlock!}
      {Only `apply' or `compose' are allowed as values^^Jin the optional argument of \string\ccDeclareRoleBlock!}}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccm@role@eval} creates the name lists for the
%   role. \#1 is the name of the role.
%    \begin{macrocode}
\def\ccm@role@eval#1{\csname @ccm@role@eval@\cc@cur@cont @#1\endcsname}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@ccm@role@eval} \#1 is the name of the macro
%   used to compose the Collection (either
%   \lstinline{\ccComposeCollection}, or
%   \lstinline{\ccApplyCollection}), \#2 is the name of the role and
%   \#3 is the name of the list. The access Component is
%   \lstinline{#2#3}, i.e., both argumets together.
%    \begin{macrocode}
\def\@ccm@role@eval#1#2#3{%
%    \end{macrocode}
% First, we check if the Collection Component has already been set in
% the input. If so, we set an internal flag to indicate that the
% Collection Component has been filled manually.
%    \begin{macrocode}
  \ccIfComp{#2#3}{\cslet{cc@used@#2#3@override}\@empty}{%
%    \end{macrocode}
% Second, we check if the counter for the Role is defined and greater
% than 0. If neither is the case, this means that the Group does not
% occur in the input, at all, so we don't need to do anything.
%    \begin{macrocode}
    \ifcsdef{cc#2Cnt}
      {\expandafter\ifnum\csname cc#2Cnt\endcsname>\z@
%    \end{macrocode}
% otherwise, we call the Property that is stored in
% \lstinline{\ccm@role@\cc@cur@cont @#2@#3} and store the result in the
% Component \lstinline{#2#3}.
%    \begin{macrocode}
          #1{#2}{\csname ccm@role@\cc@cur@cont @#2@#3\endcsname}{#2#3}%
        \fi
      }{}}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccm@role@apply} \#1 is the name of the role and
%   \#2 is the name of the composition. This macro applies
%   (i.e. \textit{fully expands}) the \lstinline{\ccm@role@\cc@cur@cont @#1@#2}
%   Property and stores the result in the \lstinline{#1#2} Component.
%    \begin{macrocode}
\def\ccm@role@apply#1#2{\@ccm@role@eval\ccApplyCollection{#1}{#2}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccm@role@compose} \#1 is the name of the role and
%   \#2 is the name of the composition. This stores the
%   \textit{unexpaded} contents of the \lstinline{\ccm@role@\cc@cur@cont @#1@#2}
%   Property in the \lstinline{#1#2} Component.
%    \begin{macrocode}
\def\ccm@role@compose#1#2{\@ccm@role@eval\ccComposeCollection{#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
%
% \section{Labeled Components}
%
% \begin{macro}{\ccDeclareLabeledComp} declares two Components: one
%   named \lstinline{\ccPrefix #2} for the value and another
%   one named \lstinline{\ccPrefix #2Label} for its
%   corresponding label. \#3 is used for property overrides. The
%   optional Argument \#1 allows to set a default value for the Label.
%    \begin{macrocode}
\def\ccDeclareLabeledComp{\cc@opt@empty\cc@declare@labeled@comp}
\def\cc@declare@labeled@comp[#1]#2#3{%
  \ccDeclareComponent{#2}{\expandafter\global}{}%
  \ccDeclareComponent{#2Label}{\expandafter\global}{}%
  \csxdef{labeled-meta-property-infix-\cc@cur@cont-#2}{#3}%
  \if!#1!\else
    \long\csgdef{cc@\cc@cur@cont @#2Label}{#1}%
  \fi
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccUseLabeledComp} declares two Components: one named
%   \lstinline{\ccPrefix#1} for the value and another one
%   named \lstinline{\ccPrefix#1Label} for its
%   corresponding label. An optional Argument allows to set a default
%   value for the Label.
%    \begin{macrocode}
\def\ccUseLabeledComp#1{%
  \ccIfComp{#1}{%
%    \end{macrocode}
%
% \begin{macro}{\ccCurInfix} stores the currently active property
%   infix for the Labeled Component
%    \begin{macrocode}
    \letcs\ccCurInfix{labeled-meta-property-infix-\cc@cur@cont-#1}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccCurComp} stores the currently active Component name
%    \begin{macrocode}
    \def\ccCurComp{#1}%
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
    \ccIfProp{labeled-meta-\ccCurInfix-format}
      {\ccUseProperty{labeled-meta-\ccCurInfix-format}}
      {\ccUseProperty{labeled-meta-format}}%
  }{}}
%    \end{macrocode}
% \end{macro}
%
% \section{common meta data}
%
% \begin{macro}{\ccm@declare@comp} defines some commonly used meta Components
%    \begin{macrocode}
\def\ccm@declare@comp{%
    \ccDeclareComponent{Copyright}{\expandafter\global}{}% Copyright text
    \ccDeclareComponent{DOI}{\expandafter\global}{}%         DOI

}%
%    \end{macrocode}
% \end{macro}
% \begin{ContainerDoc}{article-meta}
%    \begin{macrocode}
  %% for single articles
\ccDeclareContainer{article-meta}{%
  \ccDeclareType{Components}{%
    \ccDeclareGlobalComponent{StartPage}                     % Start page of a single article
    \ccDeclareGlobalComponent{EndPage}                       % End page of a single article
    \ccDeclareLabeledComp[Cite as]{CiteAs}{cite-as}          % As what the article should be cited
    \ccDeclareLabeledComp[Submitted]{Submitted}{sumbitted}   % Date the article was submitted
    \ccDeclareLabeledComp[Received]{Received}{received}      % Date the article was recieved
    \ccDeclareLabeledComp[Revised]{Revised}{revised}         % Date the article was revised
    \ccDeclareLabeledComp[Reviewed]{Reviewed}{reviewed}      % Date the article was reviewed
    \ccDeclareLabeledComp[Accepted]{Accepted}{accepted}      % Date the article was accepted
    \ccDeclareLabeledComp[Published]{Published}{published}   % Date the article was published
    \ccDeclareLabeledComp[Conflict of Interest]{COIStatement}{coi-statement}% Conflict of Interest statement
  }%
}
%    \end{macrocode}
% \end{ContainerDoc}
% 
% \begin{macro}{\ccm@extended@common@macros}
%   provides some extended markup. Some headings use these Components
%   for compilations of contributions by different authors. They are
%   also loaded by article title pages.
%    \begin{macrocode}
\def\ccm@extended@common@macros{%
  \ccDeclareLabeledComp[Abstract]{Abstract}{abstract}%
  \ccDeclareLabeledComp[Keywords]{Keywords}{keyword}%
  \ccDeclareLabeledComp{DOI}{doi}%
  \ccDeclareLabeledComp{TitleEn}{title-en}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Affiliations}
%
% \begin{macro}{\ccm@declare@affils} is a wrapper that creates the
%   user-level macros for the affiliations.
%    \begin{macrocode}
\def\ccm@declare@affils{%
  \ccDeclareComponent{AffilBlock}{\expandafter\global}{}%
  \ccDeclareComponentGroup{Affil}{%
    \ccDeclareCountedComponent{Affiliation}%
    \ccDeclareCountedComponent{Address}%
    \ccDeclareCountedComponent{Institute}%
    \ccDeclareCountedComponent{Country}%
    \ccDeclareCountedComponent{Department}%
    \ccDeclareCountedComponent{AffilID}%
  }%
  \ccDeclareGroupHandler{Affil}{%
    \ccIfComp{AffilID}{}{\ccComponentEA{AffilID}{\ccAffilCnt}}%
    \ccIfComp{Affiliation}{}{\ccComponent{Affiliation}{\ccUseProperty{affiliation-format}}}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
%
% Defaut Property settings for the Meta Container.
%    \begin{macrocode}
\ccAddToProperties{CommonMeta}{%
  \ccSetProperty{initials-format}{%
    \expandafter\ifx\csname cc@\cc@cur@cont @\cc@cnt@grp-FirstName-\the\ccCurCount\endcsname\cc@long@empty\else
      \expandafter\ifx\csname cc@\cc@cur@cont @\cc@cnt@grp-FirstName-\the\ccCurCount\endcsname\relax\else
        \expandafter\expandafter\expandafter\@car\csname cc@\cc@cur@cont @\cc@cnt@grp-FirstName-\the\ccCurCount\endcsname\relax\@nil\ccUseProperty{initials-period}%
      \expandafter\ifx\csname cc@\cc@cur@cont @\cc@cnt@grp-MidName-\the\ccCurCount\endcsname\cc@long@empty\else
        \expandafter\ifx\csname cc@\cc@cur@cont @\cc@cnt@grp-MidName-\the\ccCurCount\endcsname\relax\else
          \ccUseProperty{initials-sep}%
          \expandafter\expandafter\expandafter\@car\csname cc@\cc@cur@cont @\cc@cnt@grp-MidName-\the\ccCurCount\endcsname\relax\@nil\ccUseProperty{initials-period}%
        \fi\fi
    \fi\fi
  }
  \ccSetProperty{initials-sep}{~}
  \ccSetProperty{initials-period}{.}
  %
  %% Properties that control how the composed compoents WITHIN each item in a Role are formatted:
  %
  \ccSetProperty{role-full-name-format}{%
    \if\ccUseComp{Honorific}\relax
    \else
      \ccUseComp{Honorific}\space
    \fi
    \ccUseComp{FirstName}\space
    \if\ccUseComp{MidName}\relax
    \else
      \ccUseComp{MidName}\space
    \fi
    \ccUseComp{LastName}%
    \if\ccUseComp{Lineage}\relax
    \else
      \space\ccUseComp{Lineage}%
    \fi%
  }% How FullName for each name is built
  \ccSetProperty{role-cite-name-format}{\ccIfComp{LastName}{\ccUseComp{LastName},~\ccUseComp{Initial}}{\ccUseComp{FullName}}}% How CiteName for each name is built
  \ccSetProperty{role-short-cite-name-format}{\ccUseComp{LastName}}% how ShortCiteName for each name is built
  \ccPropertyLet{role-pdfinfo-name-format}{role-cite-name-format}% How PDFInfoName for each item is built
  \ccSetProperty{role-correspondence-as-format}{\ccUseComp{Email}}% How PDFInfoName for each item is built
  %% Properties that control how the single items in a compoent list are formatted:
  \ccSetProperty{role-block-print-format}{\ccUseComp{FullName}\ifnum\ccCurCount<\ccTotalCount\ccUseProperty{counted-name-sep}\fi}% How <Role>NameList for each name is build
  \ccSetProperty{role-block-cite-format}{\ccUseComp{CiteName}\ifnum\ccCurCount<\ccTotalCount\ccUseProperty{counted-name-sep}\fi}% How each item in Component <Role>CitationList is formatted
  \ccSetProperty{role-block-short-cite-format}{\ccUseComp{ShortCiteName}\ifnum\ccCurCount<\ccTotalCount\ccUseProperty{counted-name-sep}\fi}%  How each item in the Component <Role>ShortCitationList is formatted
  \ccSetProperty{role-block-pdfinfo-format}{\ccUseComp{PDFInfoName}\ifnum\ccCurCount<\ccTotalCount\ccUseProperty{counted-name-sep}\fi}% How each item in the Component <Role>PDFInfo is formatted
  \ccSetProperty{role-block-correspondence-format}{%
    \ccIfAttrIsSet{\cc@cnt@grp\the\ccCurCount}{corresp}
      {\ifx\is@first@corresp\relax
         \ccUseProperty{corresp-sep}%
       \else
         \global\let\is@first@corresp\relax
       \fi
       \ccUseComp{CorrespondenceAs}%
     }{}}% How each item in the Component <Role>Correspondence is formatted
  % Aliasses
  % for Role "Author":
  \ccPropertyLet{author-cite-name-format}            {role-cite-name-format}%
  \ccPropertyLet{author-short-cite-name-format}      {role-short-cite-name-format}%
  \ccPropertyLet{author-full-name-format}            {role-full-name-format}%
  \ccPropertyLet{author-pdfinfo-name-format}         {role-pdfinfo-name-format}%
  \ccPropertyLet{author-correspondence-as-format}    {role-correspondence-as-format}%
  %
  \ccPropertyLet{author-list-print-format}           {role-block-print-format}%
  \ccPropertyLet{author-list-cite-format}            {role-block-cite-format}%
  \ccPropertyLet{author-list-short-cite-format}      {role-block-short-cite-format}%
  \ccPropertyLet{author-list-pdfinfo-format}         {role-block-pdfinfo-format}%
  \ccPropertyLet{author-list-correspondence-format}  {role-block-correspondence-format}%
  %
  \ccSetProperty{counted-name-sep}{,\space}%
  \ccSetProperty{name-and}{\space and\space}%
  \ccSetProperty{name-etal}{\space et~al.}%
  \ccSetProperty{name-sep}{,\space}%
  \ccSetProperty{corresp-mark}{*}%
  \ccSetProperty{corresp-sep}{,\space}%
  %
  % Affiliation Properties
  %
  \ccSetProperty{affiliation-format}{% Format of the  affiliation block
    \ccIfComp{Institute}{\ccUseComp{Institute}}{}%
    \ccIfComp{Department}{, \ccUseComp{Department}}{}%
    \ccIfComp{Address}{, \ccUseComp{Address}}{}%
  }%
  \ccSetProperty{affil-sep}{\par}
  \ccSetProperty{affil-block-item-face}{}% Font of a single item in the affiliation list
  \ccSetProperty{affil-block-item-format}{% Format of a single item in the affiliation list
    \textsuperscript{\ccUseComp{AffilID}}%
    \bgroup
      \ccUseProperty{affil-block-item-face}%
      \ccUseComp{Affiliation}
    \egroup%
    \ifnum\ccCurCount<\ccTotalCount\relax\ccUseProperty{affil-sep}\fi%
  }
  \ccSetProperty{affil-block-face}{\small\normalfont}%
  \ccSetProperty{affil-block-format}{%
    \ccIfComp{AffilBlock}
      {\bgroup
         \ccUseProperty{affil-block-face}%
         \ccUseComp{AffilBlock}%
       \egroup
       \par
     }{}}
  %
  % Labeled Meta Properties
  %
  \ccSetProperty{labeled-meta-format}{%
    \ccIfProp{labeled-meta-before-\ccCurInfix}
      {\ccUseProperty{labeled-meta-before-\ccCurInfix}}
      {\ccUseProperty{labeled-meta-before}}%
    \bgroup
      \ccIfProp{labeled-meta-\ccCurInfix-face}
        {\ccUseProperty{labeled-meta-\ccCurInfix-face}}
        {\ccUseProperty{labeled-meta-face}}%
      \ccIfProp{labeled-meta-\ccCurInfix-label-format}
        {\ccUseProperty{labeled-meta-\ccCurInfix-label-format}}
        {\ccUseProperty{labeled-meta-label-format}}%
      \ccUseComp{\ccCurComp}%
    \egroup
    \ccIfProp{labeled-meta-after-\ccCurInfix}
      {\ccUseProperty{labeled-meta-after-\ccCurInfix}}
      {\ccUseProperty{labeled-meta-after}}%
  }
  \ccSetProperty{labeled-meta-label-format}{%
    \ccIfComp{\ccCurComp Label}{%
      \bgroup
        \ccUseProperty{labeled-meta-before-\ccCurInfix-label}%
        \ccIfProp{labeled-meta-\ccCurInfix-label-face}
          {\ccUseProperty{labeled-meta-\ccCurInfix-label-face}}
          {\ccUseProperty{labeled-meta-label-face}}%
        \ccUseComp{\ccCurComp Label}%
        \ccIfProp{labeled-meta-\ccCurInfix-label-sep}
          {\ccUseProperty{labeled-meta-\ccCurInfix-label-sep}}
          {\ccUseProperty{labeled-meta-label-sep}}%
      \egroup
    }{}}
  \ccSetProperty{labeled-meta-label-face}{\bfseries}
  \ccSetProperty{labeled-meta-label-sep}{:\enskip}
  \ccSetProperty{labeled-meta-face}{}
  \ccSetProperty{labeled-meta-before}{}
  \ccSetProperty{labeled-meta-after}{\par}
}
%    \end{macrocode}
%    \begin{macrocode}[gobble=1]
%</meta>
%    \end{macrocode}
