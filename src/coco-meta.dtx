% \chapter{coco-meta.dtx}
% This file provides some macros that are used to process meta data,
% both for the whole document, as well as parts of a document.
%
%    \begin{macrocode}[gobble=1]
%<*meta>
%    \end{macrocode}
% File preamble
%    \begin{macrocode}
%%
%% module for CoCoTeX that provides handling of a document's meta data.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{coco-meta}
    [\filedate \fileversion CoCoTeX meta module]
\RequirePackage{coco-common}
%    \end{macrocode}
% \begin{tpContainer}{CommonMeta} is an abstract Container for
%   commonly used meta data, both for whole documents as well as parts
%   of documents.
%    \begin{macrocode}
\DeclareContainer{CommonMeta}{%
  \tpDeclareType{Components}{%
    \tpDeclareRole[author]{Author}%
    \tp@declare@common@meta@comp
    \tp@extended@common@meta@macros
    \tp@declare@meta@affils
  }%
  \tpDeclareType{Properties}{}%
}
%    \end{macrocode}
% \end{tpContainer}
%
% \section{Counted Container Handlers}
%
% \subsection{Generic Blocks}
%
% \begin{macro}{\tp@meta@generic@comp} is used to define a generic
%   meta data block.It provides two Components for each instance, one
%   for the block's Heading and one for its Content.
%    \begin{macrocode}
\def\tp@meta@generic@comp{%
  \tpDeclareComp{GenericMetaBlock}{\expandafter\global}{}%
  \tpDeclareComponentGroup{tpGenericMeta}{%
    \tpDeclareCountedComp{Heading}%
    \tpDeclareCountedComp{Content}%
  }}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@generic@eval} evaluates the Components and
%   tells the Framework how the generic counted Sub-Containers should
%   be rendered.
%    \begin{macrocode}
\def\tp@meta@generic@eval{{%
  \def\tp@cur@cont{titlepage}%
  \tpComposeCollection{tpGenericMeta}{generic-meta-format}{GenericMetaBlock}
}}
%    \end{macrocode}
% \end{macro}
% \subsection{Contributor Roles}
%
% Contributors are counted sub-containers that represent the meta-data
% of people that share a role in contributing content to a document.
% Examples for such roles are an article{\slash}chapter{\slash}book's
% authors, or a collection{\slash}series' editors.
%
% \begin{macro}{\tpDeclareRole} is used to declare the Components that
%   belong to each member of a contributor role. \#2 is the name of
%   the role, optional \#1 is the internal name of the Role's
%   formatting Property. If omitted, it is the same as \#2.
%
%   The output of all members of a role is controlled by a Component
%   called ``\lstinline{<role>NameList}'' that is formatted according
%   to the \lstinline{<role>-format} Property. For reasons of naming
%   conventions, the role names for a Component and its respective
%   Property do not necessarily need to be identical.
%    \begin{macrocode}
\def\tpDeclareRole{\cc@opt@second\tp@declare@role}%
\def\tp@declare@role[#1]#2{%
  \tpDeclareComponentGroup{tp#2}{%
    \tpDeclareCountedComp{FullName}%
    \tpDeclareCountedComp{CiteName}%
    \tpDeclareCountedComp{ShortCiteName}%
    \tpDeclareCountedComp{PDFInfoName}%
    \tpDeclareCountedComp{Initial}%
    \tpDeclareCountedComp{LastName}%
    \tpDeclareCountedComp{FirstName}%
    \tpDeclareCountedComp{MidName}%
    \tpDeclareCountedComp{Honorific}%
    \tpDeclareCountedComp{Lineage}%
    \tpDeclareCountedComp{ORCID}%
    \tpDeclareCountedComp{AffilRef}% for references to the tpAffil Group
    \tpDeclareCountedComp{Affiliation}% for affiliations  as direct tpAuthor meta data
    \tpDeclareCountedComp{Email}%
    \tpDeclareCountedComp{CorrespondenceAs}%
  }%
  \tpGroupHandler{tp#2}{%
    \tpIfComp{FullName}{}{\tpFullName{\tpUseProperty{#1-full-name-format}}}%
    \tpIfComp{Initial}{}{\tpInitial{\tpUseProperty{initials-format}}}%
    \tpIfComp{CiteName}{}{\tpCiteName{\tpUseProperty{#1-cite-name-format}}}%
    \tpIfComp{ShortCiteName}{}{\tpShortCiteName{\tpUseProperty{#1-short-cite-name-format}}}%
    \tpIfComp{PDFInfoName}{}{\tpPDFInfoName{\tpUseProperty{#1-pdfinfo-name-format}}}%
    \tpIfComp{CorrespondenceAs}{}{\tpCorrespondenceAs{\tpUseProperty{#1-correspondence-as-format}}}%
    \tpIfComp{AffilRef}{\tpIfComp{Affiliation}{%
        \ccPackageError{Meta}{Ambiguity}
          {You cannot use both Containers \string\tpAffilRef\space and \string\tpAffiliation\space in the same `tp#2' Sub-Container}
          {At least one `tp#2' Sub-Container contains both \string\tpAffilRef\space and \string\tpAffiliation. This is not allowed. Please decide for one affiliation strategy: Either two lists with cross-references, or affiliations directly as an author's meta-data.}}{}}{}%
  }%
  \tpDeclareRoleBlock{#2}{NameList}{#1-list-print-format}%
  \tpDeclareRoleBlock{#2}{CitationList}{#1-list-cite-format}%
  \tpDeclareRoleBlock{#2}{ShortCitationList}{#1-list-short-cite-format}%
  \tpDeclareRoleBlock[apply]{#2}{PDFInfo}{#1-list-pdfinfo-format}%
  \tpDeclareRoleBlock{#2}{Correspondence}{#1-list-correspondence-format}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpAddToRole} appends another Component declaration block \#2 to a pre-defined Role \#1.
%    \begin{macrocode}
\def\tpAddToRole#1#2{%
  \csgappto{@tp#1@hook}{#2}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpDeclareRoleBlock} is used to create a new output
%   container (named \lstinline{\tp#2#3}) for a given Role \#2. A Role
%   Block is a Component of the parent Container which contains
%   certain Components of all members of the Role within its parent
%   Container. Format and selection of the utilised Components are
%   specified via the Property given in \#4. The optional argument \#1
%   tells the evaluator in the Container's \lstinline{end} macro how
%   the collector is to be composed. Valid values are
%   \lstinline{compose} (default) or \lstinline{apply}.
%    \begin{macrocode}
\def\tpDeclareRoleBlock{\@ifnextchar[\tp@declare@role@block{\tp@declare@role@block[compose]}}%]
\def\tp@declare@role@block[#1]#2#3#4{%
  \ifcsdef{tp@meta@role@#1}
    {\tpDeclareComp{#2#3}{\expandafter\global}{}%
     \csgdef{tp@meta@role@\tp@cur@cont @#2@#3}{#4}%
     \csappto{@tp@meta@role@eval@\tp@cur@cont @#2}
        {\csname tp@meta@role@#1\endcsname{#2}{#3}}}
    {\ccPackageError{Meta}{Argument}
      {Invalid optional argument in \string\tpDeclareRoleBlock!}
      {Only `apply' or `compose' are allowed as values^^Jin the optional argument of \string\tpDeclareRoleBlock!}}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@role@eval} creates the name lists for the
%   role. \#1 is the name of the role.
%    \begin{macrocode}
\def\tp@meta@role@eval#1{\csname @tp@meta@role@eval@\tp@cur@cont @#1\endcsname}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@tp@meta@role@eval} \#1 is the name of the macro
%   used to compose the Collection (either
%   \lstinline{\tpComposeCollection}, or
%   \lstinline{\tpApplyCollection}), \#2 is the name of the role and
%   \#3 is the name of the list. The access Component is
%   \lstinline{#2#3}, i.e., both argumets together.
%    \begin{macrocode}
\def\@tp@meta@role@eval#1#2#3{%
%    \end{macrocode}
% First, we check if the Collection Component has already been set in
% the input. If so, we set an internal flag to indicate that the
% Collection Component has been filled manually.
%    \begin{macrocode}
  \tpIfComp{#2#3}{\cslet{tp@used@#2#3@override}\@empty}{%
%    \end{macrocode}
% Second, we check if the counter for the Role is defined and greater
% than 0. If neither is the case, this means that the Group does not
% occur in the input, at all, so we don't need to do anything.
%    \begin{macrocode}
    \ifcsdef{tp#2Cnt}
      {\expandafter\ifnum\csname tp#2Cnt\endcsname>\z@
%    \end{macrocode}
% otherwise, we call the Property that is stored in
% \lstinline{\tp@meta@role@\tp@cur@cont @#2@#3} and store the result in the
% Component \lstinline{#2#3}.
%    \begin{macrocode}
          #1{tp#2}{\csname tp@meta@role@\tp@cur@cont @#2@#3\endcsname}{#2#3}%
        \fi
      }{}}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@role@apply} \#1 is the name of the role and
%   \#2 is the name of the composition. This macro applies
%   (i.e. \textit{fully expands}) the \lstinline{\tp@meta@role@\tp@cur@cont @#1@#2}
%   Property and stores the result in the \lstinline{#1#2} Component.
%    \begin{macrocode}
\def\tp@meta@role@apply#1#2{\@tp@meta@role@eval\tpApplyCollection{#1}{#2}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@meta@role@compose} \#1 is the name of the role and
%   \#2 is the name of the composition. This stores the
%   \textit{unexpaded} contents of the \lstinline{\tp@meta@role@\tp@cur@cont @#1@#2}
%   Property in the \lstinline{#1#2} Component.
%    \begin{macrocode}
\def\tp@meta@role@compose#1#2{\@tp@meta@role@eval\tpComposeCollection{#1}{#2}}
%    \end{macrocode}
% \end{macro}
%
%
% \section{Labeled Components}
%
% \begin{macro}{\tpDeclareLabeledComp} declares two Components: one
%   named \lstinline{\csname tp#2\endcsname} for the value and another
%   one named \lstinline{\csname tp#2Label\endcsname} for its
%   corresponding label. \#3 is used for property overrides. The
%   optional Argument \#1 allows to set a default value for the Label.
%    \begin{macrocode}
\def\tpDeclareLabeledComp{\cc@opt@empty\tp@declare@labeled@comp}
\def\tp@declare@labeled@comp[#1]#2#3{%
  \tpDeclareComp{#2}{\expandafter\global}{}%
  \tpDeclareComp{#2Label}{\expandafter\global}{}%
  \csxdef{labeled-meta-property-infix-\tp@cur@cont-#2}{#3}%
  \if!#1!\else
    \long\csgdef{tp@\tp@cur@cont @#2Label}{#1}%
  \fi
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpUseLabeledComp} declares two Components: one named
%   \lstinline{\csname tp#1\endcsname} for the value and another one
%   named \lstinline{\csname tp#1Label\endcsname} for its
%   corresponding label. An optional Argument allows to set a default
%   value for the Label.
%    \begin{macrocode}
\def\tpUseLabeledComp#1{%
  \tpIfComp{#1}{%
%    \end{macrocode}
%
% \begin{macro}{\tpCurInfix} stores the currently active property
%   infix for the Labeled Component
%    \begin{macrocode}
    \letcs\tpCurInfix{labeled-meta-property-infix-\tp@cur@cont-#1}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tpCurComp} stores the currently active Component name
%    \begin{macrocode}
    \def\tpCurComp{#1}%
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
    \tpIfProp{labeled-meta-\tpCurInfix-format}
      {\tpUseProperty{labeled-meta-\tpCurInfix-format}}
      {\tpUseProperty{labeled-meta-format}}%
  }{}}
%    \end{macrocode}
% \end{macro}
%
% \section{common meta data}
%
% \begin{macro}{\tp@declare@common@meta@comp} defines some commonly used meta Components
%    \begin{macrocode}
\def\tp@declare@common@meta@comp{%
    \tpDeclareComp{Copyright}{\expandafter\global}{}% Copyright text
    \tpDeclareComp{DOI}{\expandafter\global}{}%         DOI

}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\tp@extended@common@meta@macros}
%   provides some extended markup. Some headings use these Components
%   for compilations of contributions by different authors. They are
%   also loaded by article title pages.
%    \begin{macrocode}
\def\tp@extended@common@meta@macros{%
  \tpDeclareLabeledComp[Abstract]{Abstract}{abstract}%
  \tpDeclareLabeledComp[Keywords]{Keywords}{keyword}%
  \tpDeclareLabeledComp{DOI}{doi}%
  \tpDeclareLabeledComp{TitleEn}{title-en}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Affiliations}
%
% \begin{macro}{\tp@meta@affils} is a wrapper that creates the
%   user-level macros for the affiliations.
%    \begin{macrocode}
\def\tp@declare@meta@affils{%
  \tpDeclareComp{AffilBlock}{\expandafter\global}{}%
  \tpDeclareComponentGroup{tpAffil}{%
    \tpDeclareCountedComp{Affiliation}%
    \tpDeclareCountedComp{Address}%
    \tpDeclareCountedComp{Institute}%
    \tpDeclareCountedComp{Country}%
    \tpDeclareCountedComp{Department}%
    \tpDeclareCountedComp{AffilID}%
  }%
  \tpGroupHandler{tpAffil}{%
    \tpIfComp{AffilID}{}{\expandafter\tpAffilID\expandafter{\tpAffilCnt}}%
    \tpIfComp{Affiliation}{}{\tpAffiliation{\tpUseProperty{affiliation-format}}}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
%
% Defaut Property settings for the Meta Container.
%    \begin{macrocode}
\tpAddToDefault{CommonMeta}{%
  \tpSetProperty{initials-format}{%
    \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\cc@long@empty\else
      \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\relax\else
        \expandafter\expandafter\expandafter\@car\csname tp@\tp@cur@cont @\tp@cnt@grp-FirstName-\the\tpCurCount\endcsname\relax\@nil\tpUseProperty{initials-period}%
      \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\cc@long@empty\else
        \expandafter\ifx\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\relax\else
          \tpUseProperty{initials-sep}%
          \expandafter\expandafter\expandafter\@car\csname tp@\tp@cur@cont @\tp@cnt@grp-MidName-\the\tpCurCount\endcsname\relax\@nil\tpUseProperty{initials-period}%
        \fi\fi
    \fi\fi
  }
  \tpSetProperty{initials-sep}{~}
  \tpSetProperty{initials-period}{.}
  %
  %% Properties that control how the composed compoents WITHIN each item in a Role are formatted:
  %
  \tpSetProperty{role-full-name-format}{%
    \if\tpUseComp{Honorific}\relax
    \else
      \tpUseComp{Honorific}\space
    \fi
    \tpUseComp{FirstName}\space
    \if\tpUseComp{MidName}\relax
    \else
      \tpUseComp{MidName}\space
    \fi
    \tpUseComp{LastName}%
    \if\tpUseComp{Lineage}\relax
    \else
      \space\tpUseComp{Lineage}%
    \fi%
  }% How FullName for each name is built
  \tpSetProperty{role-cite-name-format}{\tpIfComp{LastName}{\tpUseComp{LastName},~\tpUseComp{Initial}}{\tpUseComp{FullName}}}% How CiteName for each name is built
  \tpSetProperty{role-short-cite-name-format}{\tpUseComp{LastName}}% how ShortCiteName for each name is built
  \tpPropertyLet{role-pdfinfo-name-format}{role-cite-name-format}% How PDFInfoName for each item is built
  \tpSetProperty{role-correspondence-as-format}{\tpUseComp{Email}}% How PDFInfoName for each item is built
  %% Properties that control how the single items in a compoent list are formatted:
  \tpSetProperty{role-block-print-format}{\tpUseComp{FullName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}% How <Role>NameList for each name is build
  \tpSetProperty{role-block-cite-format}{\tpUseComp{CiteName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}% How each item in Component <Role>CitationList is formatted
  \tpSetProperty{role-block-short-cite-format}{\tpUseComp{ShortCiteName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}%  How each item in the Component <Role>ShortCitationList is formatted
  \tpSetProperty{role-block-pdfinfo-format}{\tpUseComp{PDFInfoName}\ifnum\tpCurCount<\tpTotalCount\tpUseProperty{counted-name-sep}\fi}% How each item in the Component <Role>PDFInfo is formatted
  \tpSetProperty{role-block-correspondence-format}{%
    \tpIfAttrIsset{\tp@cnt@grp-\the\tpCurCount}{corresp}
      {\ifx\is@first@corresp\relax
         \tpUseProperty{corresp-sep}%
       \else
         \global\let\is@first@corresp\relax
       \fi
       \tpUseComp{CorrespondenceAs}%
     }{}}% How each item in the Component <Role>Correspondence is formatted
  % Aliasses
  % for Role "Author":
  \tpPropertyLet{author-cite-name-format}            {role-cite-name-format}%
  \tpPropertyLet{author-short-cite-name-format}      {role-short-cite-name-format}%
  \tpPropertyLet{author-full-name-format}            {role-full-name-format}%
  \tpPropertyLet{author-pdfinfo-name-format}         {role-pdfinfo-name-format}%
  \tpPropertyLet{author-correspondence-as-format}    {role-correspondence-as-format}%
  %
  \tpPropertyLet{author-list-print-format}           {role-block-print-format}%
  \tpPropertyLet{author-list-cite-format}            {role-block-cite-format}%
  \tpPropertyLet{author-list-short-cite-format}      {role-block-short-cite-format}%
  \tpPropertyLet{author-list-pdfinfo-format}         {role-block-pdfinfo-format}%
  \tpPropertyLet{author-list-correspondence-format}  {role-block-correspondence-format}%
  %
  \tpSetProperty{counted-name-sep}{,\space}%
  \tpSetProperty{name-and}{\space and\space}%
  \tpSetProperty{name-etal}{\space et~al.}%
  \tpSetProperty{name-sep}{,\space}%
  \tpSetProperty{corresp-mark}{*}%
  \tpSetProperty{corresp-sep}{,\space}%
  %
  % Affiliation Properties
  %
  \tpSetProperty{affiliation-format}{% Format of the  affiliation block
    \tpIfComp{Institute}{\tpUseComp{Institute}}{}%
    \tpIfComp{Department}{, \tpUseComp{Department}}{}%
    \tpIfComp{Address}{, \tpUseComp{Address}}{}%
  }%
  \tpSetProperty{affil-sep}{\par}
  \tpSetProperty{affil-block-item-face}{}% Font of a single item in the affiliation list
  \tpSetProperty{affil-block-item-format}{% Format of a single item in the affiliation list
    \textsuperscript{\tpUseComp{AffilID}}%
    \bgroup
      \tpUseProperty{affil-block-item-face}%
      \tpUseComp{Affiliation}
    \egroup%
    \ifnum\tpCurCount<\tpTotalCount\relax\tpUseProperty{affil-sep}\fi%
  }
  \tpSetProperty{affil-block-face}{\small\normalfont}%
  \tpSetProperty{affil-block-format}{%
    \tpIfComp{AffilBlock}
      {\bgroup
         \tpUseProperty{affil-block-face}%
         \tpUseComp{AffilBlock}%
       \egroup
       \par
     }{}}
  %
  % Labeled Meta Properties
  %
  \tpSetProperty{labeled-meta-format}{%
    \tpIfProp{labeled-meta-before-\tpCurInfix}
      {\tpUseProperty{labeled-meta-before-\tpCurInfix}}
      {\tpUseProperty{labeled-meta-before}}%
    \bgroup
      \tpIfProp{labeled-meta-\tpCurInfix-face}
        {\tpUseProperty{labeled-meta-\tpCurInfix-face}}
        {\tpUseProperty{labeled-meta-face}}%
      \tpIfProp{labeled-meta-\tpCurInfix-label-format}
        {\tpUseProperty{labeled-meta-\tpCurInfix-label-format}}
        {\tpUseProperty{labeled-meta-label-format}}%
      \tpUseComp{\tpCurComp}%
    \egroup
    \tpIfProp{labeled-meta-after-\tpCurInfix}
      {\tpUseProperty{labeled-meta-after-\tpCurInfix}}
      {\tpUseProperty{labeled-meta-after}}%
  }
  \tpSetProperty{labeled-meta-label-format}{%
    \tpIfComp{\tpCurComp Label}{%
      \bgroup
        \tpUseProperty{labeled-meta-before-\tpCurInfix-label}%
        \tpIfProp{labeled-meta-\tpCurInfix-label-face}
          {\tpUseProperty{labeled-meta-\tpCurInfix-label-face}}
          {\tpUseProperty{labeled-meta-label-face}}%
        \tpUseComp{\tpCurComp Label}%
        \tpIfProp{labeled-meta-\tpCurInfix-label-sep}
          {\tpUseProperty{labeled-meta-\tpCurInfix-label-sep}}
          {\tpUseProperty{labeled-meta-label-sep}}%
      \egroup
    }{}}
  \tpSetProperty{labeled-meta-label-face}{\bfseries}
  \tpSetProperty{labeled-meta-label-sep}{:\enskip}
  \tpSetProperty{labeled-meta-face}{}
  \tpSetProperty{labeled-meta-before}{}
  \tpSetProperty{labeled-meta-after}{\par}
}
%    \end{macrocode}
%    \begin{macrocode}[gobble=1]
%</meta>
%    \end{macrocode}
