% \chapter{coco-title.dtx}\label{chap:coco-title}\DescriptionDomain{titlepage}
%    \begin{macrocode}[numbers=none,gobble=1]
%<*title>
%    \end{macrocode}
%
% This file provides macros and facilities for title pages.
%
%    \begin{macrocode}
%%
%% module for CoCoTeX for maketitle.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2020/06/01]
\ProvidesPackage{coco-title}
    [\filedate \fileversion CoCoTeX title module]
\RequirePackage{coco-meta}
\DeclareOptionX{lang-id}{\gdef\cct@lang@id{#1}}
\ProcessOptionsX
%    \end{macrocode}
% \section{Top-Level Interface}
%
% \DescribeContainer{titlepage} is the main Container for the whole
% document's meta data.
%    \begin{macrocode}
\ccDeclareContainer{titlepage}{%
  \ccInherit {Components,Properties}{CommonMeta}%
  \ifarticle\ccInherit{Components}{article-meta}\fi
  \ccDeclareType{Components}{%
    \cct@simple@comps
    \cct@fundings@comp
    \cct@role@handlers{author}{Author}%
    \cct@declare@role{editor}{Editor}%
    \cct@declare@role{series-editor}{SeriesEditor}%
  }%
  \ccDeclareType{Properties}{}%
  \ccDeclareEnv[Meta]{\cctmeta}{\endcctmeta}%
}
%    \end{macrocode}
% \begin{macro}{\cct@declare@role} declares the roles for editors and
%   series editors and initializes the biography meta block for both.
%    \begin{macrocode}
\def\cct@declare@role#1#2{%
  \ccDeclareRole[#1]{#2}%
  \cct@role@handlers{#1}{#2}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@role@handlers} adds title page specific
%   Components and Handlers to the Author, Editor and Series-Editor
%   Roles.
%    \begin{macrocode}
\def\cct@role@handlers#1#2{%
  \ccAddToRole{#2}{%
    \ccDeclareCountedComponent{Bio}%
    \ccDeclareCountedComponent{Biography}}%
  \ccDeclareGroupHandler{#2}{%
    \ccIfComp{Biography}{}{\ccIfComp{Bio}{\ccComponent{Biography}{\ccUseProperty{#1-biography-format}}}{}}%
  }%
  \ccDeclareRoleBlock[apply]{#2}{BioBlock}{#1-bio-block-format}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccDeclareTitlepage} is the default titlepage
%   declarator with the next token being added the titlepage's Property list.
%    \begin{macrocode}
\def\ccDeclareTitlepage{\ccAddToType{Properties}{titlepage}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cctmeta} is the code executed at the beginning of the \lstinline{\ccPrefix Meta} Container
%    \begin{macrocode}
\def\cctmeta{\cc@opt@empty\cct@meta}
\def\cct@meta[#1]{%
  \UseHook{env/meta/begin}%
  \ccEvalAttributes[titlepage]{#1}%
  \ccEvalType{Components}%
  \let\and\relax
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccAddTitleRole} is a user-level macro to add both a
%   new Role with the name \InlineArg{2} and a controlling Property \InlineArg{1} to the
%   \lstinline{titlepage} container.
%    \begin{macrocode}
\def\ccAddTitleRole#1#2{%
  \ccAddToType{Components}{titlepage}{\cct@declare@role{#1}{#2}}%
  \ccAddTitleEval{\cct@eds@eval{#2}}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccAddTitleEval} is a User-level macro to add
%   additional Material titlepage evaluators (the next token).
%    \begin{macrocode}
\def\ccAddTitleEval{\csgappto{cct@add@eval}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@add@eval} is a hook for additional titlepage
%   evaluators
%    \begin{macrocode}
\def\cct@add@eval{}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\endcctmeta} is the code executed at the end of the \lstinline{Meta} Container
%    \begin{macrocode}
\def\endcctmeta{%
  \ccSetContainer{titlepage}%
  \ccEvalType{Properties}%
  \cct@maketitle
  \ccm@role@eval{Author}%
  \ccApplyCollection{Affil}{affil-block-item-format}{AffilBlock}%
  \cct@eds@eval{Editor}%
  \cct@eds@eval{SeriesEditor}%
  \ccm@generic@eval
  \cct@fundings@eval
  \cct@add@eval
  \cc@if@preamble\cct@set@pdfmeta\relax
%    \end{macrocode}
% Now, we expand the \UsageHook{cct/document/meta}.
%    \begin{macrocode}
  \UseHook{cct/document/meta}%
  \let\cc@cur@cont\@empty
}
%    \end{macrocode}
% \end{macro}
%
% \section{Procesing of PDF Meta Data}\label{sect:coco-title:pdf-meta-data}
%
% The next few macros handle the content that is written directly
% into the pdf as meta data.
%
% \begin{macro}{\cct@set@pdfmeta} is the wrapper for the whole meta data handling.
%    \begin{macrocode}
\def\cct@set@pdfmeta{%
%    \end{macrocode}
% \begin{macro}{\cct@write@pdf@meta@string} handles meta data that are
%   stored as plain \textit{strings} in the XMP file.
%   \begin{ArgList}
%     \item[1] is the hyperref name for the meta datum
%     \item[2] is the ltpdfa name for the meta datum
%     \item[3] is the fallback value.
%   \end{ArgList}
%   The fallback value is only chosen if either no XMP file exists, or
%   if the XMP file does not contain the required data field.
%
%   In any case, the string is sanitized through
%   \UsageMacro{\ccSanitizeStr}.
%    \begin{macrocode}
  \def\cct@write@pdf@meta@string##1##2##3{%
    \let\cct@cur@data\@empty
    \ccIfAlly
      {\ccSanitizeStr\cct@cur@data{\directlua{tex.print(cocotex.ally.meta.##2)}}%
       \ifx\cct@cur@data\@empty
         \ccSanitizeStr\cct@cur@data{##3}%
       \fi
       \ifx\cct@cur@data\@empty
         \ccDebugMsg[pdfmeta]{##2 is empty (3: ##3); doing nothing}%
       \else
         \ccDebugMsg[pdfmeta]{Writing \string\setDocinfo[utf-8]{##2}{\expandafter\strip@prefix\meaning\cct@cur@data}}%
         \edef\x{\noexpand\ccaSetDocinfo[utf-8]{##2}}\expandafter\x\expandafter{\cct@cur@data}%
       \fi}
     {\cct@write@hr@infodict{##1}{##3}}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@write@pdf@meta@list} handles meta data that are
%   represented as \textit{lists} in the XMP file.
%   \begin{ArgList}
%     \item[1] is the hyperref name for the meta datum
%     \item[2] is the ltpdfa name for the meta datum
%     \item[3] is the fallback value.
%     \item[4] is the handler for the list. This is a macro that takes
%       one argument. Each item of the list will be passed to that
%       macro as argument.
%     \item[5] is the separator between the items
%   \end{ArgList}
%    \begin{macrocode}
  \def\cct@write@pdf@meta@list##1##2##3##4##5{%
    \let\cct@cur@data\@empty
    \ccIfAlly
      {\protected@edef\cct@cur@data{\directlua{tex.print(cocotex.ally.meta.##2)}}%
       \ifx\cct@cur@data\@empty
         \protected@edef\cct@cur@data{##3}%
         \ifx\cct@cur@data\@empty\else
           \edef\x{\noexpand\cct@split@pdf@meta{\noexpand##4}{##5}}\x%
         \fi
       \else
         \cct@split@pdf@meta{##4}{\and}%
       \fi}
     {\cct@write@hr@infodict{##1}{##3}}}%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@split@pdf@meta} is a helper function to split the
%   list-form meta datum stored \lstinline{\cct@cur@data} in into its
%   items.
%   \begin{ArgList}
%   \item[1] is a CS token that takes one argument. Each item of the
%     list is recursively passed to that CS token
%   \item[2] is the separator between the items
%   \end{ArgList}
%    \begin{macrocode}
  \def\cct@split@pdf@meta##1##2{%
    \def\@cct@split@pdf@meta####1##2####2\@nil####3{%
      \if\relax\detokenize{####1}\relax\else
        ####3{####1}%
        \if!####2!\else
          \edef\@argi{##2}%
          \edef\@argii{####2}%
          \ifx\@argi\@argii\else
            \@cct@split@pdf@meta####2\@nil{####3}%
          \fi
        \fi
      \fi
    }%
    \expandafter\@cct@split@pdf@meta\cct@cur@data##2\@nil{##1}%
  }%
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@write@hr@infodict} writes the PDF info dictionary
%   entry via \lstinline{hyperref} with the key \InlineArg{1} and the
%   value \InlineArg{2}.
%    \begin{macrocode}
  \def\cct@write@hr@infodict##1##2{%
    \protected@edef\x{\noexpand\hypersetup{##1={\expandonce{##2}}}}\x
  }%
%    \end{macrocode}
% \end{macro}
% After we decided how we want to process the PDF meta data, we now
% start to collect the necessary data points:
%    \begin{macrocode}
  \cct@title@insert@xmp
  \cct@title@process@bkc
  \cct@title@process@bkt
  \cct@title@process@bkk
  \cct@title@process@bka
  \cct@title@process@bkl
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Processing of the Document's Main Language}
%
% \begin{macro}{\cct@title@process@bkl} writes the document's main
%   language into the Info dictionary if no accessibility features are
%   active. If it \textit{is} active, the document language is handled
%   by ltpdfa.
%    \begin{macrocode}
\def\cct@title@process@bkl{%
  \ifx\cct@lang@id\@undefined\else
    \ccUnlessAlly{\cct@write@hr@infodict{pdflang}{\cct@lang@id}}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Processing of the Document's Title}
%
% \begin{macro}{\cct@title@process@bkt} processes the document's main title
%    \begin{macrocode}
\def\cct@title@process@bkt{%
  \cslet{\ccPrefix Break}\space
  \protected@xdef\@title{\ccUseProperty{doc-book-title}}%
  \cct@write@pdf@meta@string{pdftitle}{Title}{\@title}%
  \ccpgdefFromProperty{RunBookTitle}{run-book-title}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Processing of the Document's Author}
%
% \begin{macro}{\cct@title@process@bka} processes the document's main
%   author or, if that doesn't exist, the main editor, or throws a
%   warning if neither exist.
%    \begin{macrocode}
\def\cct@title@process@bka{%
  \@tempswatrue
  \begingroup
    \ccGobble
    \renewcommand\foreignlanguage[2]{{##2}}%
    \ccIfComp{AuthorPDFInfo}
      {\ccpgdefFromComp{RunBookName}{AuthorPDFInfo}}
      {\ccIfComp{EditorPDFInfo}
         {\ccpgdefFromComp{RunBookName}{EditorPDFInfo}}
         {\ccIfComp{AuthorNameList}
           {\ccpgdefFromComp{RunBookName}{AuthorNameList}}
           {\ccIfComp{EditorNameList}
             {\ccpgdefFromComp{RunBookName}{EditorNameList}}
             {\ifnum\ccAuthorCnt>\z@
                \@setpar{\@@par}%
                \ccpxdefFromCountedComp{RunBookName}{Author}{author-list-pdfinfo-format}%
              \else
                \ifnum\ccEditorCnt>\z@
                  \ccpxdefFromCountedComp{RunBookName}{Editor}{editor-list-pdfinfo-format}%
                \else
                  \ccPackageWarning{transcript-title}{Meta Data}{No author or editor given!}%
                  \@tempswafalse
                \fi
              \fi
            }}}}%
    \if@tempswa
      \ccSanitizeStr\@author{\csname\ccPrefix RunBookName\endcsname}%
      \cct@write@pdf@meta@list{pdfauthor}{Author}{\csname\ccPrefix RunBookName\endcsname}{\ccaAddAuthor}{\and}%
    \fi
  \endgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Processing of  the PDF's Creator, Producer, and Keywords Meta Data}
%
% \begin{macro}{\cct@title@process@bkc} processes the metadata for the pdf
%   creator and producer.
%    \begin{macrocode}
\def\cct@title@process@bkc{%
  \cct@write@pdf@meta@string{pdfcreator}{Creator}{\ccWhenComp{PDFCreator}{\ccUseComp{PDFCreator}}}%
  \cct@write@pdf@meta@string{pdfproducer}{Producer}{\ccWhenComp{PDFProducer}{\ccUseComp{PDFProducer}}}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@title@process@bkk} processed the metadata for the
%   keywords.
%    \begin{macrocode}
\def\cct@title@process@bkk{%
  \cct@write@pdf@meta@list{pdfkeywords}{Keywords}{\ccWhenComp{Keywords}{\ccUseComp{Keywords}}}{\ccaAddKeyword}{\ccUseProperty{keywords-sep}}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Including the XMP Meta Data}\label{sec:title:xmp}
%
% \begin{macro}{\cct@title@insert@xmp}\label{} inserts the contents of the XMP
%   meta data file into the pdf, if it exists. There are two versions,
%   depending on whether coco-accessibility is active or not.
%    \begin{macrocode}
\def\cct@title@insert@xmp{\ccIfAlly{\cct@title@insert@xmp@ltpdfa}{\cct@title@insert@xmp@direct}}
%    \end{macrocode}
% \begin{macro}{\cct@title@insert@xmp@direct} is the default version
%   which writes the xmp meta data directly into the PDF.
%    \begin{macrocode}
\def\cct@title@insert@xmp@direct{%
  \edef\include@xmp{\noexpand\@include@xmp{\ccUseComp{XmpFile}.xmp}}%
  \def\@include@xmp##1{\IfFileExists{##1}{\@@include@xmp{##1}}{}}%
  \def\@@include@xmp##1{%
    \begingroup
      \immediate\pdfobj stream attr {/Type /Metadata /Subtype /XML}
      file{##1}
      \pdfcatalog{/Metadata \the\pdflastobj\space 0 R}
    \endgroup}%
  \include@xmp
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@title@insert@xmp@ltpdfa} is the version that uses
%   ltpdfa's mechanism to write XMP meta data into the PDF.
%
%   First we check if the specified xmp file exists. If it exists, the
%   \lstinline{DocumentInfo} is extracted from the XMP
%   file. Otherwise, we set the \lstinline{DocumentInfo} from the
%   contents of the \lstinline{titlepage} Container and let
%   \lstinline{ltpdfa} generate the \lstinline{xmp} file.
%    \begin{macrocode}
\def\cct@title@insert@xmp@ltpdfa{%
  \edef\cca@xmp@file@name{\ccUseComponentFrom{titlepage}{XmpFile}.xmp}%
  \IfFileExists{\cca@xmp@file@name}
    {\ccaAddToConfig{metadata}{xmpfile=\cca@xmp@file@name}%
     \directlua{ally.meta:extract()}}
    {\ccPackageWarning{A11y}{File}{%
\cca@xmp@file@name\space not found.^^J
Note that the ltpdfa package will create one^^J
from the Components given in the Meta Container.}}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%
% \section{Intermediate Level Interfaces}
%
% \DescribeHook{cct/maketitle/before} is expanded right before the
%   titlepage is printed.
%    \begin{macrocode}
\NewHook{cct/maketitle/before}
%    \end{macrocode}
% \DescribeHook{cct/maketitle/after} is expanded at the end of the
% titlepage.
%    \begin{macrocode}
\NewHook{cct/maketitle/after}
%    \end{macrocode}
% \DescribeHook{cct/document/meta} is expanded at the very end of
%   the \texttt{Meta} Container.
%    \begin{macrocode}
\NewHook{cct/document/meta}
%    \end{macrocode}
% \DescribeHook{env/meta/begin} is used to add code to be executed at
% the very beginning of the Meta Container's main environment, before
% the Attribtues are evaluated.
%    \begin{macrocode}
\NewHook{env/meta/begin}
%    \end{macrocode}
% \begin{macro}{\cct@article@titlepage} is the prototype for article
%   title pages.
%    \begin{macrocode}
\def\cct@article@titlepage{%
  \ccUseProperty{article-title}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@journal@titlepage} is the prototype for journal
%   title pages.
%    \begin{macrocode}
\def\cct@journal@titlepage{%
  \ccUseProperty{before-titlepage}%
  \ccWhenComp{Cover}{\ccUseProperty{coverpage}}%Cover ist kein Bild, wird von uns gebaut
  \ccUseProperty{before-titlepage-roman}%
  \ccUseProperty{titlepage-roman}%
  \ccUseProperty{after-titlepage}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@book@titlepage} is the prototype for book
%   (monographs and collections) title pages.
%    \begin{macrocode}
\def\cct@book@titlepage{%
  \ccUseProperty{before-titlepage}%
  \ccWhenComp{Cover}{\ccUseProperty{coverpage}}%
  \ccUseProperty{before-titlepage-roman}%
  \ccUseProperty{titlepage-roman}%
  \ccUseProperty{after-titlepage}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@maketitle} assigns one of the above definitions
%   to the \lstinline{\ccPrefix Maketitle} macro.
%    \begin{macrocode}
\def\cct@maketitle{%
  \expandafter\gdef\csname\ccPrefix Maketitle\endcsname{%
    \let\cc@cnt@grp\@empty
%    \end{macrocode}
% Here, we expand the \UsageHook{cct/maketitle/before}.
%    \begin{macrocode}
    \UseHook{cct/maketitle/before}%
    \bgroup
      \ccSetContainer{titlepage}%
      \ccEvalType{Properties}%
      \ifarticle
        \cct@article@titlepage
      \else
        \ifjournal
          \cct@journal@titlepage
        \else
          \cct@book@titlepage
        \fi
      \fi
    \egroup
    \UseHook{cct/maketitle/after}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Funds, Grants, and Supporters}
%
% This is a Subcontainer within \lstinline{\ccPrefix Meta} which allows to set
% up multiple funding, grant, or supporter callouts.
% \begin{macro}{\cct@fundings@comp} wrapper to set up the Subcontainer
%    \begin{macrocode}
\def\cct@fundings@comp{%
  \ccDeclareComponent{FundingBlock}{\expandafter\global}{}%
  \ccDeclareComponentGroup{Funding}{%
    \ccDeclareCountedComponent{FundName}%
    \ccDeclareCountedComponent{FundLogo}%
    \ccDeclareCountedComponent{FundID}%
  }{}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\cct@fundings@eval} Evaluator for the funding
%    \begin{macrocode}
\def\cct@fundings@eval{{%
    \def\cc@cur@cont{titlepage}%
    \ccComposeCollection{Funding}{fund-format}{FundingBlock}%
    \UseHook{cc/titlepage/funding}%
}}
\NewHook{cc/titlepage/funding}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@eds@eval} evaluator for the editors
%    \begin{macrocode}
\def\cct@eds@eval#1{%
  \ccm@role@eval{#1}%
  \cct@create@editor@string{#1}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@create@editor@string} evaluates the editor string
%   and adds a suffix.
%    \begin{macrocode}
\def\cct@create@editor@string#1{%
  \expandafter\ifx\csname cc@\cc@cur@cont @#1NameList\endcsname\relax\else
    \csgappto{cc@\cc@cur@cont @#1NameList}{{\letcs\ccTotalCount{cc#1Cnt}\ccUseProperty{editor-suffix}}}%
  \fi
}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Simple Component Declarations}
%
% \begin{macro}{\cct@simple@comps} wrapper for the Titlepage's simple Components.
%    \begin{macrocode}
\def\cct@simple@comps{%
%    \end{macrocode}
%
%
% \subsubsection{General Information}
%
% \begin{Component}{Cover} holds the path(!) to the cover image
%   (without \lstinline{\includegraphics}!)
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Cover}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Dedication} is a dedication.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Dedication}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Acknowledgements} self explanatory.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Acknowledgements}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Statement} additional publication statement
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Statement}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Editorial} generic statement by the editors of a
%   periodical or collection.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Editorial}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Titles and Names}
%
% \begin{Component}{Title} is the document's (printed) main title.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Title}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[OR]{ShortTitle} is a shortened version of the document
%   title. If set, this is the title that is written into the PDF meta
%   data (unless DocTitle is also set) and stored as running title
%   (unless RunTitle is also set). If the Component is not used, the
%   Title component is used, instead.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{ShortTitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[OR]{DocTitle} is an override for the title that is
%   written into the PDF meta data (unless an XMP file is used). This
%   Component's value should only contain alphanumeric characters,
%   ideally from the ASCII code block, but must not contain any
%   {\LaTeX} markup.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{DocTitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[OR]{RunTitle} is an override for the title that is
%   used as running title for page headers. It should contain only
%   robust {\LaTeX} markup.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{RunTitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{AltTitle} is an alternative title for bastard
%   title pages, etc. It is not used by {\CoCoTeX}, but some publisher
%   styles may need it.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AltTitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Subtitle} is the document's subtitle.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Subtitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{TitleNote} additional printed information tied to
%   the document's title.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{TitleNote}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[OR]{RunNames} is an override for the document
%   author's names, which is intended to be used in running page
%   headers. If not set, the (calculated)
%   \UsageComponent{AuthorNameList} or \UsageComponent{EditorNameList}
%   is used, instead.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{RunNames}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{AltNames} is an alternative data field for
%   additional names.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AltNames}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Series}
%
% \begin{Component}{Series} is the series title.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Series}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{SubSeries} is the subtitle for the series.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{SubSeries}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{SeriesNote} are additional notes concerning the
%   series.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{SeriesNote}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Volume} is the volume of the document within a
%   series.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Volume}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Number} is the number of the document within the
%   series.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Number}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[CC]{EditorNameList} is the Collection Component
%   for the Editor's names.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EditorNameList}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}[CC]{SeriesEditorNameList} is the Colection
%   Component for the Series-Editor's names.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{SeriesEditorNameList}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Publisher Information}
%
% \begin{Component}{Publisher} is the publisher name
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Publisher}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubDivision} is the publisher division.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubDivision}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubDivInfo} holds additional information about the
%   publisher division.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubDivInfo}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubPlace} holds the place of publication or the
%   publisher's address.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubPlace}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubLogo} holds the publisher logo. Depending on
%   the publisher style, this may be just a path, or a complete
%   \lstinline{\includegraphics} expression.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubLogo}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubNote} additional generic notes about the
%   publisher.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubNote}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubWeb} holds the url or email contact address of
%   a publisher.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubWeb}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Publication Meta}
%
% \begin{Component}{XmpFile} is the basename of the XMP meta data file
%   without the .xmp file ending (which is added automatically). The
%   default value is \lstinline{\jobname}.
%    \begin{macrocode}
  \ccDeclareGlobalComponent[\jobname]{XmpFile}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PDFCreator} is the tool with which the original
%   document was created (for \textit{xerif}, this is usually M\$
%   Word).
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PDFCreator}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PDFProducer} is the tool with which the PDF was
%   created.  Defaults to ``le-tex xerif with CoCoTeX v({\CoCoTeX}
%   version)''
%    \begin{macrocode}
  \ccDeclareGlobalComponent[le-tex xerif with CoCoTeX v.\fileversion]{PDFProducer}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Year} the year of the publication
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Year}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Date} the date of writing/finishing. Defaults to
%   \lstinline{\today}.
%    \begin{macrocode}
  \ccDeclareGlobalComponent[\today]{Date}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Edition} the edition of the publication.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Edition}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EditionNote} additional notes about the particular edition.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EditionNote}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{ISBNPreText} text added before the ISBN block
%    \begin{macrocode}
  \ccDeclareGlobalComponent{ISBNPreText}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{ISBN} the publication's international standard
%   book number.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{ISBN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{ISSN} the publication's international standard
%   serial number for periodicals.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{ISSN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EISSN} additional ISSN for electronic publications
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EISSN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EpubPreText} additional text between ISBN and eISBN
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EpubPreText}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EISBN} ISBN for electronic publications.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EISBN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EpubISBN} ISBN for EPUBs.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EpubISBN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{ElibPDF} additional serial number for electronic
%   libraries.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{ElibPDF}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{BiblISSN} additional ISSN for special libraries.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{BiblISSN}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{BibleISSN} additional electronic ISSN for special
%   libraries.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{BibleISSN}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Funding}
%
% \begin{Component}{FundingPreText}additional text before the funding
%   list.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{FundingPreText}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{FundingPostText} additional text after the funding
%   list.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{FundingPostText}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Imprint Meta Data}
%
% \begin{Component}{Biblio} bibliographic information block.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Biblio}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{BiblioTitle} the title of the bibliographic
%   information block
%    \begin{macrocode}
  \ccDeclareGlobalComponent{BiblioTitle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Print} the name and address of the printing
%   company.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Print}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PrintNote} additional information about the
%   printing process.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PrintNote}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Lectorate} name and address of the lectorate
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Lectorate}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Translator} name of the document's translator
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Translator}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{CoverConcept} concept creator of the front page cover
%    \begin{macrocode}
  \ccDeclareGlobalComponent{CoverConcept}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{CoverDesign} designer of the front page cover.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{CoverDesign}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Component} creator of the front page cover image
%    \begin{macrocode}
  \ccDeclareGlobalComponent{CoverImage}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Typesetter} name and address of the typesetter
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Typesetter}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{QA} name of the person(s) responible for quality
%   assurance.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{QA}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{UsedFont} information about the fonts used
%   throughout the document
%    \begin{macrocode}
  \ccDeclareGlobalComponent{UsedFont}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Conversion} name of the person(s) responsible for
%   data conversion
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Conversion}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{EnvDisclaimer} environmantal disclaimer, used paper, etc.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{EnvDisclaimer}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Advertise} advertisements.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Advertise}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Licencing}
%
% \begin{Component}{LicenceText} License Description
%    \begin{macrocode}
  \ccDeclareGlobalComponent{LicenceText}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{LicenseLogo} the path(!) to the licence logo. \lstinline{\includegraphics} is added automatically.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{LicenceLogo}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{LicenceLink} URL to the license.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{LicenceLink}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{LicenceName} the plain name of the license.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{LicenceName}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{CopyrightDisclaimer} self explanatory...
%    \begin{macrocode}
  \ccDeclareGlobalComponent{CopyrightDisclaimer}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Journal-specific Meta Data}
%
% \begin{Component}{JournalName} Full name of the journal.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{JournalName}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{JournalAbbrev} short name of the journal.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{JournalAbbrev}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Issue} of the journal.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Issue}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{PubCycle} Publication cycle
%    \begin{macrocode}
  \ccDeclareGlobalComponent{PubCycle}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Prices} of the journal issues or subscription models
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Prices}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{MemberList} in case of publishing organizations,
%   this Component may hold a list of members.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{MemberList}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{Startpage} is the start page of the Journal
%    \begin{macrocode}
  \ccDeclareGlobalComponent{Startpage}%
%    \end{macrocode}
% \end{Component}
%
%
% \subsubsection{Generic additional information}
%
% \begin{Component}{AddNoteI} additional information for the first
%   title page.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AddNoteI}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{AddNoteII} additional information for the second
%   title page.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AddNoteII}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{AddNoteIII} additional information for the third
%   title page.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AddNoteIII}%
%    \end{macrocode}
% \end{Component}
% \begin{Component}{AddNoteIV} additional information for the fourth
%   title page.
%    \begin{macrocode}
  \ccDeclareGlobalComponent{AddNoteIV}%
%    \end{macrocode}
% \end{Component}
%    \begin{macrocode}
}
%    \end{macrocode}
% \end{macro}
%
% \section{Default Settings}
%
%    \begin{macrocode}
\ccAddToProperties{titlepage}{%
%    \end{macrocode}
% 
% \begin{Property}{article-title}{<any>} is the title of a single
%   article. It defaults to what standard {\LaTeX} does with
%   \lstinline{\maketitle} in the \lstinline{article} class without
%   the \lstinline{titlepage} class option and uses the
%   \UsageComponent{Title}, \UsageComponent{AuthorNameList}, and
%   \UsageComponent{Date} Components.
%    \begin{macrocode}
  \ccSetProperty{article-title}{%
    \newpage
    \null
    \vskip 2em
    \begin{center}%
      \ccaStructStart{Titlepage}%
      \let \footnote \thanks
      {\LARGE\ccaStructStart{Title}\ccaReplaceStruct{\cca@id@document@dummy}\ccUseComp{Title}\ccaStructEnd{Title}\par}%
      \vskip 1.5em%
      {\large
        \lineskip .5em%
        \ccaStructStart{Authors}\ccUseComp{AuthorNameList}\ccaStructEnd{Authors}\par
      }%
      \vskip 1em%
      {\large \ccaStructStart{P}\ccUseComp{Date}\ccaStructEnd{P}}%       % Set date in \large size.
      \end{center}%
      \ccaStructEnd{Titlepage}%
      \par
      \vskip 1.5em
  }%
%    \end{macrocode}
% \end{Property}
%    \begin{macrocode}
  % Title page hooks
  % Before \ccPrefix Maketitle and outside the group
  \ccSetProperty{before-titlepage}{%
    \pagestyle{empty}%
    \parindent\z@
    \parskip\z@
  }%
  \ccSetProperty{after-titlepage}{\pagestyle{headings}}%
  % Pages of title
  %% Cover page
  \ccSetProperty{coverpage}{%
    \bgroup
      \def\thepage{\@alph\c@page}%
      \smash{\rlap{%
          \raise\dimexpr\headheight+\headsep+\topmargin+\topskip-\paperheight\relax
          \vtop{%
            \hskip-\oddsidemargin
            \includegraphics[width=\paperwidth,height=\paperheight]{\ccUseComp{Cover}}%
          }}}%
      \ccUseProperty{after-coverpage}%
    \egroup
  }%
  \ccSetProperty{after-coverpage}{\cleardoublepage}%
  \ccSetProperty{titlepage-roman}{%
    \ccUsePropertyEnv{titlepage-i}%
    \clearpage
    \ccUsePropertyEnv{titlepage-ii}%
    \clearpage
    \ccUsePropertyEnv{titlepage-iii}%
    \clearpage
    \ccUsePropertyEnv{titlepage-iv}%
    \clearpage
  }%
  %% Generic meta blocks
  \ccSetProperty{generic-meta-heading-face}{\large}% format of the heading of a generic meta block
  \ccSetProperty{generic-meta-format}{% Format of a single generic meta-block
    \ccIfComp{Heading}{{\ccUseProperty{generic-meta-heading-face}\ccUseComp{Heading}\par}\vskip\baselineskip}{}%
    \ccUseComp{Content}%
    \par%
  }%
  %% Funding
  \ccSetProperty{funding-columns}{2}
  \ccSetProperty{funding-format}{}%
%    \end{macrocode}
% Fallback for the width in case someone sets up a fixed value for a fund's width.
%    \begin{macrocode}
  \ccSetProperty{fund-width}{.5\textwidth}
  \ccSetProperty{fund-vertical-sep}{\baselineskip}%
  \ccSetProperty{fund-sep}{%
    \expandafter\@tempcnta\CalcModulo{\ccCurCount}{\ccUseProperty{funding-columns}}%
    \ifnum\@tempcnta=\z@
      \par
      \ifnum\ccCurCount<\ccTotalCount\relax
        \vskip\ccUseProperty{fund-vertical-sep}%
      \fi
    \else
      \hfill
    \fi}
  \ccSetProperty{fund-format}{% Format of a single fund/grant/sponsor
    \strut\vtop{%
      \hsize\ccUseProperty{fund-width}%
      \ccWhenComp{FundName}{\ccaStructStart{P}\ccUseComp{FundName}\ccaStructEnd{P}\\[1ex]}%
      \ccaStructStart{Figure}%
      \ccaAddPlacement{Block}%
      \ccdefFromComp\cca@Gin@alt{FundName}%
      \ccSanitizeStr\@cca@Gin@alt{\cca@Gin@alt}%
      \ccaAddAltText{\@cca@Gin@alt}%
      \includegraphics[width=\ccUseProperty{fund-width}]{\ccUseComp{FundLogo}}%
      \ccaStructEnd{Figure}%
    }%
    \ccUseProperty{fund-sep}%
  }%
  \ccSetProperty{funding-sep}{4mm}%
  \ccSetProperty{funding-block}{%
    \bgroup
%    \end{macrocode}
% We set \lstinline{fund-width} here so that the value is calculated
% only once and only the result is stored in the
% \lstinline{fund-width} Property.
%    \begin{macrocode}
      \ccSetPropertyX{fund-width}{\dimexpr(\textwidth/\ccUseProperty{funding-columns})-(\ccUseProperty{funding-sep}/\ccUseProperty{funding-columns})\relax}
      \ccUseProperty{funding-format}%
      \ccGetComp{FundingPreText}%
      \ccGetComp*{FundingBlock}%
      \ccGetComp{FundingPostText}%
      \par
    \egroup
  }
  %% before the roman part of the title pages but after cover page
  \ccSetProperty{before-titlepage-roman}{%
    \setcounter{page}{1}%
    \def\thepage{\roman{page}}%
  }%
  \ccSetProperty{titlepage-i}{%
    \ccaStructStart{Titlepage}%
    \ifmonograph
      \ccaStructStart{Authors}\ccUseComp{AuthorNameList}\ccaStructEnd{Authors}%
    \else
      \ccaStructStart{Editors}\ccUseProperty{EditorNameList}\ccaStructEnd{Editors}%
    \fi%
    \vskip\baselineskip
    \bgroup
      \ccUseProperty{title-face}\ccaStructStart{Title}\ccaReplaceStruct{\cca@id@document@dummy}\ccUseComp{Title}\ccaStructEnd{Title}%
    \egroup
    \ccaStructEnd{Titlepage}%
  }%
  \ccSetProperty{titlepage-ii}{%
    \ccaStructStart{Titlepage}%
    \ccGetComp{Editorial}%
    \ccGetComp{SeriesNote}%
    \ccGetComp{GenericMetaBlock}%
    \vfill
    \ccUseProperty{bio-output}%
    \ccaStructEnd{Titlepage}%
  }%
  \ccSetProperty{titlepage-iii}{%
    \ccaStructStart{Titlepage}%
    \ifmonograph
      \ccaStructStart{Authors}\ccUseComp{AuthorNameList}\ccaStructEnd{Authors}%
    \else
      \ccaStructStart{Editors}\ccUseProperty{EditorNameList}\ccaStructEnd{Editors}%
    \fi%
    \par
    \ccUseProperty{title-format}
    \ccGetComp{Edition}%
    \ccGetComp{EditionNote}%
    \ccaStructEnd{Titlepage}%
    \vfill
    \clearpage
  }%
  \ccSetProperty{titlepage-iv}{%
    \ccaStructStart{Titlepage}%
    \ccGetComp{Dedication}%   Dedication
    \ccGetComp{Acknowledgements}%   Dedication
    \ccUseProperty{funding-block}%
    \vfill
    \bgroup
      \ccUseProperty{imprint-face}%
      \ccaStructStart{MetaDatumBlock}%
      \ccWhenComp{Biblio}{%
        \ccaStructStart{MetaDatum}%
          {\bfseries
           \ccaStructStart{MetaDatumLabel}%
           \ccGetComp*{BiblioTitle}%
           \ccaStructEnd{MetaDatumLabel}%
          }%
        \ccaStructStart{MetaDatumValue}%
        \ccGetComp*{Biblio}%
        \ccaStructEnd{MetaDatumValue}%
        \ccaStructEnd{MetaDatum}%
      }%
      \ccUseProperty{imprint-sep}%
      \ccUseProperty{imprint}%
      \ccaStructEnd{MetaDatumBlock}%
    \egroup
    \ccaStructEnd{Titlepage}
    \clearpage
  }%
  %% predefined face and format Properties
  \ccSetProperty{title-face}{\Huge\sffamily\bfseries}%
%    \end{macrocode}
% The document's main title is tagged with the \DescribeTag{Title}
% tag, which in PDF/UA-1 should be mapped to \DescribeTag{H1}.
%    \begin{macrocode}
  \ccSetProperty{title-format}{%
    \bgroup
      \ccaVstructStart{Title}% PDF 2.0
      \ccUseProperty{title-face}%
      \ccUseComp{Title}\par
      \ccaVstructEnd{Title}% PDF 2.0
    \egroup
    \ccWhenComp{Subtitle}{\ccUseProperty{subtitle-format}}%
    \ccWhenComp{TitleNote}{\ccUseProperty{title-note-format}}%
    \ccGetComp{Statement}%
    \vskip\baselineskip
  }%
  \ccSetProperty{title-note-face}{\large\sffamily}%
  \ccSetProperty{title-note-format}{%
    \bgroup
      \ccUseProperty{title-note-face}%
      \ccUseComp{TitleNote}%
    \egroup
    \par
  }%
  \ccSetProperty{subtitle-face}{\Large\sffamily\bfseries}%
  \ccSetProperty{subtitle-format}{%
    \bgroup
      \ccUseProperty{subtitle-face}%
      \ccUseComp{Subtitle}%
    \egroup
    \par
  }%
  %% Imprint
  \ccSetProperty{imprint-face}{\footnotesize}%
  \ccSetProperty{imprint-sep}{\ifhmode\par\fi\addvspace{\baselineskip}}%
  \ccSetProperty{imprint}{%
    \ccUseProperty{publisher}%
    \ccGetComp{Qualification}%%
    \ccGetComp{Conversion}%%
    \ccGetComp{CoverDesign}%%
    \ccGetComp{CoverImage}%%
    \ccGetComp{Lectorate}%%
    \ccGetComp{QA}%%
    \ccGetComp{Translator}%%
    \ccGetComp{Appraiser}%%
    \ccGetComp{Discussion}%%
    \ccGetComp{Typesetter}%%
    \ccGetComp{Print}%%
    \ccGetComp{UsedFont}%%
    \ccGetComp{DOI}%%
    \ccGetComp{Keywords}%%
    \ccUseProperty{imprint-sep}%
    \ccGetComp{ISBNPreText}%
    \ccGetComp{ISBN}%
    \ccGetComp{EpubPreText}%
    \ccGetComp{EISBN}%
    \ccGetComp{EpubISBN}%
    \ccUseProperty{imprint-sep}%
    \ccGetComp{EnvDisclaimer}%
  }%
  \ccSetProperty{journal-meta}{%
    \ccUseLabeledComp{Submitted}%
    \ccUseLabeledComp{Received}%
    \ccUseLabeledComp{Revised}%
    \ccUseLabeledComp{Accepted}%
    \ccUseLabeledComp{Published}%
    \ccUseLabeledComp{Copyright}%
    \ccUseLabeledComp{COIStatement}%
    \ccUseLabeledComp{Keywords}%
  }%
  \ccSetProperty{licence}{%
    \ccIfComp{LicenceLogo}{\includegraphics{\ccUseComp{LicenceLogo}}\par}{}%
    \ccGetComp{LicenceText}%
  }%
  \ccSetProperty{copyright}{%
    \ccaStructStart{MetaDatumBlock}%
    \ccaStructStart{P}%
    \ccIfComp{Copyright}
      {\ccUseComp{Copyright}\par}
      {\textcopyright\space\ccUseComp{Year}\space\ccUseComp{Publisher},\space\ccUseComp{PubPlace}\par}%
    \ccaStructEnd{P}%
    \ccaStructEnd{MetaDatumBlock}%
  }%
  \ccSetProperty{publisher}{%
    \ccGetComp{PubDivInfo}%
    \ccUseProperty{copyright}%
    \ccGetComp{PubNote}%
    \ccGetComp{PubWeb}%
  }%
  % Name Formats
  \ccSetProperty{counted-meta-sep}{\ifnum\ccCurCount<\ccTotalCount\relax\vskip\baselineskip\fi}% separator between multiple instances of the same meta datum
  \ccSetProperty{counted-name-sep}{% Separator between multiple names; titlepage-specific override of the same Property in coco-meta!
    \ifnum\ccTotalCount>1\relax
      \ifnum\ccCurCount<\ccTotalCount\relax
        \ifnum\ccCurCount<\numexpr\ccTotalCount-1\relax
          \ccUseProperty{name-sep}%
        \else
          \ccUseProperty{name-and}%
        \fi
      \fi
    \fi
  }%
  % Aliasses for different Roles, see coco-meta.sty for the actual Property values:
  %% editors:
  \ccPropertyLet{editor-cite-name-format}                   {role-cite-name-format}%
  \ccPropertyLet{editor-short-cite-name-format}             {role-short-cite-name-format}%
  \ccPropertyLet{editor-full-name-format}                   {role-full-name-format}%
  \ccPropertyLet{editor-pdfinfo-name-format}                {role-pdfinfo-name-format}%
  \ccPropertyLet{editor-correspondence-as-format}           {role-correspondence-string-format}%
  %
  \ccPropertyLet{editor-list-print-format}                  {role-block-print-format}%
  \ccPropertyLet{editor-list-cite-format}                   {role-block-cite-format}%
  \ccPropertyLet{editor-list-short-cite-format}             {role-block-short-cite-format}%
  \ccPropertyLet{editor-list-pdfinfo-format}                {role-block-pdfinfo-format}%
  \ccPropertyLet{editor-list-correspondence-format}         {role-block-correspondence-format}%
  %% series-editors:
  \ccPropertyLet{series-editor-cite-name-format}            {role-cite-name-format}%
  \ccPropertyLet{series-editor-short-cite-name-format}      {role-short-cite-name-format}%
  \ccPropertyLet{series-editor-full-name-format}            {role-full-name-format}%
  \ccPropertyLet{series-editor-pdfinfo-name-format}         {role-pdfinfo-name-format}%
  \ccPropertyLet{series-editor-correspondence-as-format}    {role-correspondence-as-format}%
  %
  \ccPropertyLet{series-editor-list-print-format}           {role-block-print-format}%
  \ccPropertyLet{series-editor-list-cite-format}            {role-block-cite-format}%
  \ccPropertyLet{series-editor-list-short-cite-format}      {role-block-short-cite-format}%
  \ccPropertyLet{series-editor-list-pdfinfo-format}         {role-block-pdfinfo-format}%
  \ccPropertyLet{series-editor-list-correspondence-format}  {role-block-correspondence-format}%
  %% name Separators
  \ccSetProperty{editor-suffix-sgl}{(Ed.)}%
  \ccSetProperty{editor-suffix-pl}{(Eds.)}%
  \ccSetProperty{editor-suffix}{%
    \space
    \ifnum\ccTotalCount=\@ne\relax
      \ccUseProperty{editor-suffix-sgl}%
    \else
      \ccUseProperty{editor-suffix-pl}%
    \fi
  }%
  % Biography
  % those Properties control how (Role specific) Biography Blocks are formatted, i.e. the list of all Biographies of a specific Role:
  \ccSetProperty{role-bio-block-face}{}% face for the entire, role-specific, Biography Block
  \ccSetProperty{role-bio-block-format}{{\ccUseProperty{role-bio-block-face}\ccUseComp{Biography}}\par}% Format of the whole, Role specific, Biography Block
  \ccPropertyLet{author-bio-block-format}        {role-bio-block-format}% Override for single author meta info
  \ccPropertyLet{editor-bio-block-format}        {role-bio-block-format}% Override for single editor meta info
  \ccPropertyLet{series-editor-bio-block-format} {role-bio-block-format}% Override for single series editor meta info
  % those Properties control how a (Role specific) Biography is formatted:
  \ccSetProperty{role-biography-format}{{\bfseries\ccUseComp{FullName}:}\space\ccUseComp{Bio}\par}% Format of a single entry in the Role specific Biography
  \ccPropertyLet{author-biography-format}        {role-biography-format}% Override for single author meta info
  \ccPropertyLet{editor-biography-format}        {role-biography-format}% Override for single editor meta info
  \ccPropertyLet{series-editor-biography-format} {role-biography-format}% Override for single series editor meta info
  \ccSetProperty{bio-output-format}{%
    \ccGetComp{AuthorBioBlock}%
    \ccGetComp{EditorBioBlock}%
    \ccGetComp{SeriesEditorBioBlock}%
  }%
  % Running headers
  \ccSetProperty{run-book-title}{%
    \ccIfComp{RunTitle}
      {\ccUseComp{RunTitle}}
      {\ccIfComp{ShortTitle}
        {\ccUseComp{ShortTitle}}
        {\ccIfComp{Title}{\ccUseComp{Title}}{No title given!}}}%
  }%
  \ccSetProperty{run-book-name}{%
    \ccIfComp{RunNames}
      {\ccUseComp{RunNames}}
      {\ifmonograph
         \ccIfComp{AuthorNameList}
           {\ccUseComp{AuthorNameList}}
           {no author defined!}%
       \else
         \ccIfComp{EditorNameList}
           {\ccUseComp{EditorNameList}}
           {no editor defined!}%
       \fi}%
  }%
  \ccSetProperty{doc-book-title}{%
    \ccIfComp{DocTitle}
      {\ccUseComp{DocTitle}}
      {\ccIfComp{ShortTitle}
        {\ccUseComp{ShortTitle}}
        {\ccUseComp{Title}}}%
  }%
}
%    \end{macrocode}
%
%
% \section{Accessibility Features}
%
% \subsection{Output Intent and ICC Profiles}
%
%    \begin{macrocode}
\ifx\cc@color@enc\relax\else
\ccWhenAlly{%
%    \end{macrocode}
% First, we declare some Components that represent the three necessary
% parameters for the output intent:
%    \begin{macrocode}
  \ccAddToType{Components}{titlepage}{%
%    \end{macrocode}
% \DescribeComponent{IccProfileFile} holds the path
%   (relative to the main tex file) and name of the .icc file.
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccProfileFile}
%    \end{macrocode}
% \DescribeComponent{IccComponents} holds the number of
%   components in the color profile
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccComponents}
%    \end{macrocode}
% \DescribeComponent{IccIdentifier} holds the identifier
%   of the color profile
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccIdentifier}}
%    \end{macrocode}
% The Components are composed via a new Property
% \lstinline{output-intent} which we add to \lstinline{coco-title}'s
% Properties list (\lstinline{\cc@color@enc} is set via the
% \lstinline{coco-common} module):
%    \begin{macrocode}
  \ifx\cc@color@enc\cc@str@cmyk
    \def\cca@default@icc@comp{4}%
    \def\cca@default@icc@iden{Coated FOGRA39}%
  \else\ifx\cc@color@enc\cc@str@rgb
      \def\cca@default@icc@comp{3}%
      \def\cca@default@icc@iden{IEC 61966-2.1 Default RGB colour space - sRGB}%
    \else
      \def\cca@default@icc@comp{1}%
      \def\cca@default@icc@iden{ISO Coated v2 - GREY 1c - (basICColor)}%
    \fi
  \fi
  \ccAddToType{Properties}{titlepage}{%
%    \end{macrocode}
% \begin{Property}{output-intent}{<see below>} sends the output intent
%   information to the \texttt{ltpdfa} package. It must contain of
%   three data fields:
%   \begin{description}
%   \item[profile] with the name of the to-be-embedded
%     \lstinline{.icc} file,
%   \item[componetns] with an integer telling the pdfwriter how many
%     values are coded by each color (e.g., \lstinline{4} for cmyk,
%     \lstinline{3} for rgb)
%   \item[identifier] with the identifying name of the profile (e.g.,
%     \lstinline{Coated FOGRA39} for the included cmyk
%     profile, etc.)
% \end{description}
%    \begin{macrocode}
    \ccSetProperty{output-intent}{%
      profile=\ccIfComp{IccProfileFile}{\ccUseComp{IccProfileFile}}{suppl/\cc@color@enc.icc};%
      components=\ccIfComp{IccComponents}{\ccUseComp{IccComponents}}{\cca@default@icc@comp};%
      identifier=\ccIfComp{IccIdentifier}{\ccUseComp{IccIdentifier}}{\cca@default@icc@iden}%
  }}
%    \end{macrocode}
% \end{Property}
% The Component Handler which links the new Components to that
% Property is added to titlepage's \lstinline{cct/document/meta}:
%    \begin{macrocode}
  \AddToHook{cct/document/meta}{\edef\x{\noexpand\ccaAddToConfig{intent}{\ccUseProperty{output-intent}}}\x}
%    \end{macrocode}
%
% \subsection{Encoding of the PDF-A Conformance}
% As before, the parameters for the PDF conformity level are encoded
% via specific Components in the titlepage Container:
%    \begin{macrocode}
  \ccAddToType{Components}{titlepage}{%
%    \end{macrocode}
%
% \DescribeComponent{PDFAID} defines the PDF/A ID (Default: 2,
%   meaning: PDF/A-2)
%    \begin{macrocode}
  \ccDeclareGlobalComponent[2]{PDFAID}%
%    \end{macrocode}
% \DescribeComponent{PDFALevel} defines the PDF/A Level (Default: A,
%   meaning PDF/A-2A)
%    \begin{macrocode}
  \ccDeclareGlobalComponent[A]{PDFALevel}%
%    \end{macrocode}
% \DescribeComponent{PDFUAID} defines the PDF standard (Default: 1,
%   meaning: PDF/UA-1). Use \lstinline|\ccPrefix PDFUAID{}| (i.e. set it to
%   nothing) to make the document conform to the PDF/A standard, but
%   \textbf{not} to the PDF/UA standard.
%    \begin{macrocode}
  \ccDeclareGlobalComponent[\if@cc@pdf@two2\else1\fi]{PDFUAID}}%
%    \end{macrocode}
% The checking if the values are valid, and the separation of the
% various parts of the standard is done via a lua script in the
% \lstinline{cct/document/meta}. The \lstinline{conformance}
% DocumentInfo nodes are only written, if \textit{neither}
% \lstinline{PDFAID}, \textit{nor} \lstinline{PDFALevel} is empty.
%    \begin{macrocode}
  \AddToHook{cct/document/meta}{%
    \ccIfCompEmpty{PDFAID}{}{\ccIfCompEmpty{PDFALevel}{}{%
        \edef\x{\noexpand\ccaSetDocinfo{conformance}{%
            pdfaid=\ccUseComp{PDFAID};%
            level=\ccUseComp{PDFALevel}%
            \ccIfCompEmpty{PDFUAID}{}{;pdfuaid=\ccUseComp{PDFUAID}}}}%
        \x}}}
%    \end{macrocode}
%
%
% \subsection{Titlepage Specific Role Maps}
%
% According to the “Tagged PDF Best Practice Guide” page by the PDF
% Association, the main title of the document should be mapped to
% \DescribeTag{P} until the more appropriate \DescribeTag{Title} tag
% becomes widely accepted with the PDF 2.0 Standard.
%    \begin{macrocode}
  \if@cc@pdf@two\else\ccaAddRolemap{Title}{H1}\fi
  \ccaAddRolemap{Titlepage}{Div}
%    \end{macrocode}
% 
%    \begin{macrocode}
}%ccWhenAlly
\fi
%    \end{macrocode}
%
%
%    \begin{macrocode}[numbers=none,gobble=1]
%</title>
%    \end{macrocode}
