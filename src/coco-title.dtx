% \chapter{coco-title.dtx}\label{chap:coco-title}
% This file provides macros and facilities for title pages.
%
%    \begin{macrocode}[gobble=1]
%<*title>
%    \end{macrocode}
%    \begin{macrocode}
%%
%% module for CoCoTeX for maketitle.
%%
%% Maintainer: p.schulz@le-tex.de
%%
%% lualatex  -  texlive > 2019
%%
\NeedsTeXFormat{LaTeX2e}[2018/12/01]
\ProvidesPackage{coco-title}
    [\filedate \fileversion CoCoTeX title module]
\RequirePackage{coco-meta}
%    \end{macrocode}
% \section{Top-Level Interface}
%
% \begin{ContainerDoc}{titlepage} is the main Container for the
%   document's locally defined meta data.
%    \begin{macrocode}
\ccDeclareContainer{titlepage}{%
  \ccInherit {Components,Properties}{CommonMeta}%
  \ifarticle\ccInherit{Components}{article-meta}\fi
  \ccDeclareType{Components}{%
    \cct@simple@comps
    \ccm@generic@comp
%    \end{macrocode}
% The following macro provides some meta data Components defined in
% the \lstinline{coco-meta} module. They are:
% \begin{itemize}
% \item \lstinline{Abstract} and \lstinline{AbstractTitle},
% \item \lstinline{Keywords} and \lstinline{KeywordsTitle},
% \item \lstinline{DOI} and \lstinline{DOITitle}, and
% \item \lstinline{TitleEn} and \lstinline{TitleEnTitle}, intended for
%   foreign language publications where the title is translated into
%   English.
% \end{itemize}
%    \begin{macrocode}
    \cct@fundings@comp
    \cct@role@handlers{author}{Author}%
    \cct@declare@role{editor}{Editor}%
    \cct@declare@role{series-editor}{SeriesEditor}%
  }%
  \ccDeclareType{Properties}{}%
  \ccDeclareEnv[Meta]{\cct@meta}{\endcct@meta}%
}
%    \end{macrocode}
% \end{ContainerDoc}
% \begin{macro}{\cct@declare@role} declares the roles for editors and
%   series editors and initializes the biography meta block for both.
%    \begin{macrocode}
\def\cct@declare@role#1#2{%
  \ccDeclareRole[#1]{#2}%
  \cct@role@handlers{#1}{#2}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@role@handlers} adds title page specific
%   Components and Handlers to the Author, Editor and Series-Editor
%   Roles.
%    \begin{macrocode}
\def\cct@role@handlers#1#2{%
  \ccAddToRole{#2}{%
    \ccDeclareCountedComponent{Bio}%
    \ccDeclareCountedComponent{Biography}}%
  \ccDeclareGroupHandler{#2}{%
    \ccIfComp{Biography}{}{\ccIfComp{Bio}{\ccComponent{Biography}{\ccUseProperty{#1-biography-format}}}{}}%
  }%
  \ccDeclareRoleBlock[apply]{#2}{BioBlock}{#1-bio-block-format}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccDeclareTitlepage} is the default titlepage
%   declarator with the next token being added the titlepage's Property list.
%    \begin{macrocode}
\def\ccDeclareTitlepage{\ccAddToType{Properties}{titlepage}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@meta} is the code executed at the beginning of the \lstinline{\ccPrefix Meta} Container
%    \begin{macrocode}
\def\cct@meta{%
  \ccEvalType{Components}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccAddTitleRole} is a user-level macro to add both a
%   new Role with the name \#2 and a controlling Property \#1 to the
%   \lstinline{titlepage} container.
%    \begin{macrocode}
\def\ccAddTitleRole#1#2{%
  \ccAddToType{Components}{titlepage}{\cct@declare@role{#1}{#2}}%
  \ccAddTitleEval{\cct@eds@eval{#2}}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\ccAddTitleEval} is a User-level macro to add
%   additional Material titlepage evaluators (the next token).
%    \begin{macrocode}
\def\ccAddTitleEval{\csgappto{cct@add@eval}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@add@eval} is a hook for additional titlepage
%   evaluators
%    \begin{macrocode}
\def\cct@add@eval{}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\endcct@meta} is the code executed at the end of the \lstinline{Meta} Container
%    \begin{macrocode}
\def\endcct@meta{%
  \ccSetContainer{titlepage}%
  \ccEvalType{Properties}%
  \cct@maketitle
  \ccm@role@eval{Author}%
  \ccApplyCollection{Affil}{affil-block-item-format}{AffilBlock}%
  \cct@eds@eval{Editor}%
  \cct@eds@eval{SeriesEditor}%
  \ccm@generic@eval
  \cct@fundings@eval
  \cct@add@eval
  \cc@if@preamble\cct@set@pdfmeta\relax
  \ccUseHook{document-meta-hook}%
  \let\cc@cur@cont\@empty
}
%    \end{macrocode}
% \end{macro}
%
% \section{Procesing of PDF Meta Data}\label{sect:coco-title:pdf-meta-data}
%
% The next few macros handle the content that is written directly
% into the pdf as meta data.
%
% \begin{macro}{\cct@set@pdfmeta} is the wrapper for the whole meta data handling.
%    \begin{macrocode}
\def\cct@set@pdfmeta{%
%    \end{macrocode}
% \begin{macro}{\cct@write@pdf@meta} is used to transfer the
%   DocumentInfo meta date to the pdf writer.
%    \begin{macrocode}
  \def\cct@write@pdf@meta##1##2##3{%
    \let\cct@cur@data\@empty
%    \end{macrocode}
% First, we check, whether \lstinline{coco-accessibility.sty} is
% used. If so, we check if the User has provided an \lstinline{xmp}
% file by reading the required meta data field given in \#\#2 from
% that xmp file. If there is an xmp file and the data field is
% non-empty, we do nothing, because in this case, the PDF DocInfo is
% auto-generated from the data in the xmp file by the
% \lstinline{ltpdfa} package.
%    \begin{macrocode}
    \ccIfAlly{\edef\cct@cur@data{\expandonce{\directlua{tex.print(cocotex.ally.meta.##2)}}}}{}%
    \ifx\cct@cur@data\@empty
%    \end{macrocode}
% If the temporary storage \lstinline{\cct@cur@data} is still empty,
% we take the value given in \lstinline{\#\#3} and store its plain
% text in \lstinline{\cct@cur@data}. Data conversion is done with
% \lstinline{hyperref}'s \lstinline{\pdfstringdef} macro.
%    \begin{macrocode}
      \pdfstringdef\cct@cur@data{##3}%
%    \end{macrocode}
% If the storage is still empty (i.e. the field is also missing in the
% \lstinline{Meta} environment), we do nothing.
%    \begin{macrocode}
      \ifx\cct@cur@data\@empty\else
%    \end{macrocode}
% If the user has provided the data Component in the \lstinline{Meta}
% environment, we pass it either to \lstinline{hyperref}'s
% \lstinline{hypersetup} variable given in \lstinline{\#\#1} (when
% \lstinline{coco-accessibility.sty} is \textit{not} used), or we pass
% it to \lstinline{ltpdfa.setDocInfo} using the data field given in
% \lstinline{\#\#2}. In this case, the ltpdfa automatically creates a
% \lstinline{\jobname.xmp} from which the DocInfo will be generated during
% subsequent {\LaTeX} run(s).
%    \begin{macrocode}
        \ccIfAlly
%    \end{macrocode}
% If we use coco-accessibility, we invoke
% \lstinline|\ccaSetDocinfo{\#\#2}{\#\#3}|,
%    \begin{macrocode}
          {\edef\x{\noexpand\ccaSetDocinfo{##2}}%
           \expandafter\x\expandafter{\cct@cur@data}}%
%    \end{macrocode}
% or \lstinline{hyperref}'s \lstinline|\hypersetup{\#\#1=\#\#3}|, if
% not. Note that we need to feed \lstinline{\#\#3} directly into
% \lstinline{hypersetup} since it passes the values of pdf meta data
% keys through \lstinline{pdfstringdef}. If we were to pass
% \lstinline{\cct@cur@data}, which already went through
% \lstinline{pdfstringdef}, the octal byte sequences from the first
% run are interpreted a second time, which leeds to weird glyphs in
% the final PDF'S DocInfo. Therefore, we stick with the original
% input.
%    \begin{macrocode}
          {\protected@edef\x{\noexpand\hypersetup{##1={\expandonce{##3}}}}\x}%
      \fi
    \fi
  }%
%    \end{macrocode}
% \end{macro}
% After we decided how we want to process the PDF meta data, we now
% start to collect the necessary data points:
%    \begin{macrocode}
  \cct@title@insert@xmp
  \cct@title@process@bkc
  \cct@title@process@bkt
  \cct@title@process@bka
}
%    \end{macrocode}
% \end{macro}
% \subsection{Processing of the Document's Title}
% \begin{macro}{\cct@title@process@bkt} processes the document's main title
%    \begin{macrocode}
\def\cct@title@process@bkt{%
  \cslet{\ccPrefix Break}\space
  \pdfstringdef\@title{\ccUseComp{Title}}%
  \cct@write@pdf@meta{pdftitle}{Title}{\ccUseComp{Title}}%
  \ccpgdefFromProperty{RunBookTitle}{run-book-title}%
}
%    \end{macrocode}
% \end{macro}
% \subsection{Processing of the Document's Author}
% \begin{macro}{\cct@title@process@bka} processes the document's main
%   author or, if that doesn't exist, the main editor, or throws a
%   warning if neither exist.
%    \begin{macrocode}
\def\cct@title@process@bka{%
  \@tempswatrue
  \begingroup
    \ccGobble
    \renewcommand\foreignlanguage[2]{{##2}}%
    \ccIfComp{AuthorPDFInfo}
      {\ccpgdefFromProperty{RunBookName}{AuthorPDFInfo}}
      {\ccIfComp{EditorPDFInfo}
         {\ccpgdefFromProperty{RunBookName}{EditorPDFInfo}}
         {\ifnum\ccAuthorCnt>\z@
            \@setpar{\@@par}%
            \ccggdefFromCountedComp{RunBookName}{Author}{author-list-pdfinfo-format}%
          \else
            \ifnum\ccEditorCnt>\z@
              \ccpgdefFromCountedComp{RunBookName}{Editor}{editor-list-pdfinfo-format}%
            \else
              \ccPackageWarning{transcript-title}{Meta Data}{No author or editor given!}%
              \@tempswafalse
            \fi
          \fi}}%
    \if@tempswa
      \pdfstringdef\@author{\csname\ccPrefix RunBookName\endcsname}%
      \cct@write@pdf@meta{pdfauthor}{Author}{\csname\ccPrefix RunBookName\endcsname}%
    \fi
  \endgroup
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Processing of  the PDF's Creator, Producer, and Keywords Meta Data}
%
% \begin{macro}{\cct@title@process@bkc} processes the metadata for the pdf
%   creator
%    \begin{macrocode}
\def\cct@title@process@bkc{%
  \cct@write@pdf@meta{pdfcreator}{Creator}{\ccIfComp{PDFCreator}{\ccUseComp{PDFCreator}}{\ccUseComp{Publisher}\ccIfComp{PubPlace}{, \ccUseComp{PubPlace}}{}}}%
  \cct@write@pdf@meta{pdfproducer}{Producer}{\ccUseComp{PDFProducer}}%
  \cct@write@pdf@meta{pdfkeywords}{Keywords}{\ccUseComp{Keywords}}%
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsection{Including the XMP Meta Data}\label{sec:title:xmp}
%
% \begin{macro}{\cct@title@insert@xmp}\label{} inserts the contents of the XMP
%   meta data file into the pdf, if it exists. There are two versions,
%   depending on whether coco-accessibility is active or not.
%    \begin{macrocode}
\def\cct@title@insert@xmp{\ccIfAlly{\cct@title@insert@xmp@ltpdfa}{\cct@title@insert@xmp@direct}}
%    \end{macrocode}
% \begin{macro}{\cct@title@insert@xmp@direct} is the default version
%   which writes the xmp meta data directly into the PDF.
%    \begin{macrocode}
\def\cct@title@insert@xmp@direct{%
  \edef\include@xmp{\noexpand\@include@xmp{\ccUseComp{XmpFile}.xmp}}%
  \def\@include@xmp##1{\IfFileExists{##1}{\@@include@xmp{##1}}{}}%
  \def\@@include@xmp##1{%
    \begingroup
      \immediate\pdfobj stream attr {/Type /Metadata /Subtype /XML}
      file{##1}
      \pdfcatalog{/Metadata \the\pdflastobj\space 0 R}
    \endgroup}%
  \include@xmp
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@title@insert@xmp@ltpdfa} is the version that uses
%   ltpdfa's mechanism to write XMP meta data into the PDF.
%
%   First we check if the specified xmp file exists. If it exists, the
%   \lstinline{DocumentInfo} is extracted from the XMP
%   file. Otherwise, we set the \lstinline{DocumentInfo} from the
%   contents of the \lstinline{titlepage} Container and let
%   \lstinline{ltpdfa} generate the \lstinline{xmp} file.
%    \begin{macrocode}
\def\cct@title@insert@xmp@ltpdfa{%
  \edef\cca@xmp@file@name{\ccUseComponentFrom{titlepage}{XmpFile}.xmp}%
  \IfFileExists{\cca@xmp@file@name}
    {\ccaAddToConfig{metadata}{xmpfile=\cca@xmp@file@name}%
     \directlua{ally.meta.extract()}}
    {\ccPackageWarning{A11y}{File}{%
\cca@xmp@file@name\space not found.^^J
Note that the ltpdfa package will create one^^J
from the Components given in the Meta Container.}}}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \section{Intermediate Level Interfaces}
%
% \begin{macro}{before-maketitle-hook}
%   Hook that is expanded right before the titlepage is printed.
%    \begin{macrocode}
\ccDeclareHook[titlepage]{before-maketitle-hook}
\ccDeclareHook[titlepage]{document-meta-hook}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@article@titlepage} is the prototype for article
%   title pages.
%    \begin{macrocode}
\def\cct@article@titlepage{%
  \ccUseProperty{article-title}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@journal@titlepage} is the prototype for journal
%   title pages.
%    \begin{macrocode}
\def\cct@journal@titlepage{%
  \ccUseProperty{before-titlepage}%
  \ccUseProperty{coverpage}%Cover ist kein Bild, wird von uns gebaut
  \ccUseProperty{before-titlepage-roman}%
  \ccUseProperty{titlepage-roman}%
  \ccUseProperty{after-titlepage}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@book@titlepage} is the prototype for book
%   (monographs and collections) title pages.
%    \begin{macrocode}
\def\cct@book@titlepage{%
  \ccUseProperty{before-titlepage}%
  \ccWhenComp{Cover}{\ccUseProperty{coverpage}}%
  \ccUseProperty{before-titlepage-roman}%
  \ccUseProperty{titlepage-roman}%
  \ccUseProperty{after-titlepage}%
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@maketitle} assigns one of the above definitions
%   to the \lstinline{\ccPrefix Maketitle} macro.
%    \begin{macrocode}
\def\cct@maketitle{%
  \expandafter\gdef\csname\ccPrefix Maketitle\endcsname{%
    \let\cc@cnt@grp\@empty
    \ccUseHook[titlepage]{before-maketitle-hook}%
    \bgroup
      \ccSetContainer{titlepage}%
      \ccEvalType{Properties}%
      \ifarticle
        \cct@article@titlepage
      \else
        \ifjournal
          \cct@journal@titlepage
        \else
          \cct@book@titlepage
        \fi
      \fi
    \egroup
    \ccUseHook[titlepage]{after-maketitle-hook}%
  }%
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Funds, Grants, and Supporters}
%
% This is a Subcontainer within \lstinline{\ccPrefix Meta} which allows to set
% up multiple funding, grant, or supporter callouts.
% \begin{macro}{\cct@fundings@comp} wrapper to set up the Subcontainer
%    \begin{macrocode}
\def\cct@fundings@comp{%
  \ccDeclareComponent{FundingBlock}{\expandafter\global}{}%
  \ccDeclareComponentGroup{Funding}{%
    \ccDeclareCountedComponent{FundName}%
    \ccDeclareCountedComponent{FundLogo}%
    \ccDeclareCountedComponent{FundID}%
  }{}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\cct@fundings@eval} Evaluator for the funding
%    \begin{macrocode}
\def\cct@fundings@eval{{%
    \def\cc@cur@cont{titlepage}%
    \ccComposeCollection{Funding}{fund-format}{FundingBlock}%
}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@eds@eval} evaluator for the editors
%    \begin{macrocode}
\def\cct@eds@eval#1{%
  \ccm@role@eval{#1}%
  \cct@create@editor@string{#1}}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\cct@create@editor@string} evaluates the editor string
%   and adds a suffix.
%    \begin{macrocode}
\def\cct@create@editor@string#1{%
  \expandafter\ifx\csname cc@\cc@cur@cont @#1NameList\endcsname\relax\else
    \csgappto{cc@\cc@cur@cont @#1NameList}{{\letcs\ccTotalCount{cc#1Cnt}\ccUseProperty{editor-suffix}}}%
  \fi
}%
%    \end{macrocode}
% \end{macro}
%
% \subsection{Simple Component Declarations}
%
% \begin{macro}{\cct@simple@comps} wrapper for the Titlepage's simple Components.
%    \begin{macrocode}
\def\cct@simple@comps{%
  \ccDeclareGlobalComponent[\jobname]{XmpFile}             % File basename of the XMP file ('.xmp' is added automatically)
  %% Cover
  \ccDeclareGlobalComponent{Cover}                         % Path to Cover Image(!)
  %% Titles
  \ccDeclareGlobalComponent{Title}                         % Main Title
  \ccDeclareGlobalComponent{ShortTitle}                    % Shortened main title
  \ccDeclareGlobalComponent{RunTitle}                      % Shortened main title override for headers
  \ccDeclareGlobalComponent{AltTitle}                      % Alternative main title (e.g. for bastard title page)
  \ccDeclareGlobalComponent{Subtitle}                      % Sub Title
  \ccDeclareGlobalComponent{TitleNote}                     % Additional Title Information (contributor list)
  \ccDeclareGlobalComponent{RunNames}                      % Shortened list of names (authors and/or publishers)
  \ccDeclareGlobalComponent{AltNames}                      % Alternative list of names (e.g. for bastard title page)
  %% Series
  \ccDeclareGlobalComponent{Series}                        % Series Title
  \ccDeclareGlobalComponent{SubSeries}                     % Series Subtitle
  \ccDeclareGlobalComponent{SeriesNote}                    % Series Notes
  \ccDeclareGlobalComponent{Volume}                        % Series Volume
  \ccDeclareGlobalComponent{Number}                        % Series Number
  \ccDeclareGlobalComponent{EditorNameList}                % Editor Text Line
  \ccDeclareGlobalComponent{SeriesEditorNameList}          % Series Editor Text Line
  %% Publisher
  \ccDeclareGlobalComponent{Publisher}                     % Publisher Name
  \ccDeclareGlobalComponent{PubDivision}                   % Publishing Division
  \ccDeclareGlobalComponent{PubDivInfo}                    % Publishing Division Info
  \ccDeclareGlobalComponent{PubPlace}                      % Publisher Location
  \ccDeclareGlobalComponent{PubLogo}                       % Publisher Logo
  \ccDeclareGlobalComponent{PubNote}                       % Additional publisher notes
  \ccDeclareGlobalComponent{PubWeb}                        % Publisher URL
  %% Pubication Meta
  \ccDeclareGlobalComponent{PDFCreator}                    % Creator for pdf metadata
  \ccDeclareGlobalComponent[le-tex xerif with CoCoTeX v.\fileversion]{PDFProducer}     % PDF producer for pdf metadata
  \ccDeclareGlobalComponent{Dedication}                    % Dedication
  \ccDeclareGlobalComponent{Acknowledgements}              % Acknowledgements
  \ccDeclareGlobalComponent{Statement}                     % Acknowledgements
  \ccDeclareGlobalComponent{EditionNote}                   % Edition Note
  \ccDeclareGlobalComponent{Editorial}                     % Editorial
  \ccDeclareGlobalComponent{Edition}                       % Edition
  \ccDeclareGlobalComponent{Year}                          % Publication Year
  \ccDeclareGlobalComponent{ISBNPreText}                   % Text before ISBN block
  \ccDeclareGlobalComponent{ISBN}                          % ISBN
  \ccDeclareGlobalComponent{ISSN}                          % ISSN
  \ccDeclareGlobalComponent{EISSN}                         % Ebook-ISSN
  \ccDeclareGlobalComponent{EpubPreText}                   % Text between ISBN and eISBN
  \ccDeclareGlobalComponent{EISBN}                         % Ebook-ISBN
  \ccDeclareGlobalComponent{EpubISBN}                      % Epub-ISBN
  \ccDeclareGlobalComponent{ElibPDF}                       % ???
  \ccDeclareGlobalComponent{BiblISSN}                      % Bibl-ISBN
  \ccDeclareGlobalComponent{BibleISSN}                     % Bible-ISBN
  %% Funding
  \ccDeclareGlobalComponent{FundingPreText}                % Text before the Funding list
  \ccDeclareGlobalComponent{FundingPostText}               % Text after the Funding list
  %% Imprint Meta
  \ccDeclareGlobalComponent{Biblio}                        % Bibliographical Information
  \ccDeclareGlobalComponent{BiblioTitle}                   % Heading Bibliographical Information
  \ccDeclareGlobalComponent{Print}                         % Printer
  \ccDeclareGlobalComponent{PrintNote}                     % Print Note
  \ccDeclareGlobalComponent{Lectorate}                     % Lector
  \ccDeclareGlobalComponent{Translator}                    % Translator
  \ccDeclareGlobalComponent{CoverConcept}                  % Cover Concept
  \ccDeclareGlobalComponent{CoverDesign}                   % Cover Designer
  \ccDeclareGlobalComponent{CoverImage}                    % Cover Image Creator
  \ccDeclareGlobalComponent{Typesetter}                    % Typesetting company
  \ccDeclareGlobalComponent{QA}                            % Quality Assurance
  \ccDeclareGlobalComponent{UsedFont}                      % Used Font(s)
  \ccDeclareGlobalComponent{Conversion}                    % Data Converison
  \ccDeclareGlobalComponent{EnvDisclaimer}                 % Environmental Disclaimer
  \ccDeclareGlobalComponent{Advertise}                     % Advertisements
  %% Licencing
  \ccDeclareGlobalComponent{LicenceText}                   % License Description
  \ccDeclareGlobalComponent{LicenceLogo}                   % License Logo
  \ccDeclareGlobalComponent{LicenceLink}                   % License Link
  \ccDeclareGlobalComponent{LicenceName}                   % License Name
  \ccDeclareGlobalComponent{CopyrightDisclaimer}           % Copyright Disclaimer
  %% for journals
  \ccDeclareGlobalComponent{JournalName}                   % Full name of the journal
  \ccDeclareGlobalComponent{JournalAbbrev}                 % Short name of the journal
  \ccDeclareGlobalComponent{Issue}                         % Issue of the journal
  \ccDeclareGlobalComponent{PubCycle}                      % Publication cycle
  \ccDeclareGlobalComponent{Prices}                        % Prices of the journal issues or subscription models
  \ccDeclareGlobalComponent{MemberList}                    % In case of publishing organizations, this macro may hold a list of members.
  %% Generic additional information
  \ccDeclareGlobalComponent{AddNoteI}                      % Additional information, title page I
  \ccDeclareGlobalComponent{AddNoteII}                     % Additional information, title page II
  \ccDeclareGlobalComponent{AddNoteIII}                    % Additional information, title page III
  \ccDeclareGlobalComponent{AddNoteIV}                     % Additional information, title page IV
}
%    \end{macrocode}
% \end{macro}
%
% \section{Default Settings}
%
%    \begin{macrocode}
\ccAddToProperties{titlepage}{%
  \ccSetProperty{article-title}{}%
  % Title page hooks
  % Before \ccPrefix Maketitle and outside the group
  \ccSetProperty{before-titlepage}{%
    \pagestyle{empty}%
    \parindent\z@
    \parskip\z@
  }%
  \ccSetProperty{after-titlepage}{\pagestyle{headings}}%
  % Pages of title
  %% Cover page
  \ccSetProperty{coverpage}{%
    \bgroup
      \def\thepage{\@alph\c@page}%
      \smash{\rlap{%
          \raise\dimexpr\headheight+\headsep+\topmargin+\topskip-\paperheight\relax
          \vtop{%
            \hskip-\oddsidemargin
            \includegraphics[width=\paperwidth,height=\paperheight]{\ccUseComp{Cover}}%
          }}}%
      \ccUseProperty{after-coverpage}%
    \egroup
  }%
  \ccSetProperty{after-coverpage}{\cleardoublepage}%
  \ccSetProperty{titlepage-roman}{%
    \ccUsePropertyEnv{titlepage-i}%
    \clearpage
    \ccUsePropertyEnv{titlepage-ii}%
    \clearpage
    \ccUsePropertyEnv{titlepage-iii}%
    \clearpage
    \ccUsePropertyEnv{titlepage-iv}%
    \clearpage
  }%
  %% Generic meta blocks
  \ccSetProperty{generic-meta-heading-face}{\large}% format of the heading of a generic meta block
  \ccSetProperty{generic-meta-format}{% Format of a single generic meta-block
    \ccIfComp{Heading}{{\ccUseProperty{generic-meta-heading-face}\ccUseComp{Heading}\par}\vskip\baselineskip}{}%
    \ccUseComp{Content}%
    \par%
  }%
  %% Funding
  \ccSetProperty{funding-columns}{2}
  \ccSetProperty{funding-format}{}%
%    \end{macrocode}
% Fallback for the width in case someone sets up a fixed value for a fund's width.
%    \begin{macrocode}
  \ccSetProperty{fund-width}{.5\textwidth}
  \ccSetProperty{fund-vertical-sep}{\baselineskip}%
  \ccSetProperty{fund-sep}{%
    \expandafter\@tempcnta\CalcModulo{\ccCurCount}{\ccUseProperty{funding-columns}}%
    \ifnum\@tempcnta=\z@
      \par
      \ifnum\ccCurCount<\ccTotalCount\relax
        \vskip\ccUseProperty{fund-vertical-sep}%
      \fi
    \else
      \hfill
    \fi}
  \ccSetProperty{fund-format}{% Format of a single fund/grant/sponsor
    \strut\vtop{%
      \hsize\ccUseProperty{fund-width}%
      \ccIfComp{FundName}{\ccUseComp{FundName}\\[1ex]}{}%
      \includegraphics[width=\ccUseProperty{fund-width}]{\ccUseComp{FundLogo}}}%
    \ccUseProperty{fund-sep}%
  }%
  \ccSetProperty{funding-sep}{4mm}%
  \ccSetProperty{funding-block}{%
    \bgroup
%    \end{macrocode}
% We set \lstinline{fund-width} here so that the value is calculated only once and only the result is stored in the \lstinline{fund-width} Property.
%    \begin{macrocode}
      \ccSetPropertyX{fund-width}{\dimexpr(\textwidth/\ccUseProperty{funding-columns})-(\ccUseProperty{funding-sep}/\ccUseProperty{funding-columns})\relax}
      \ccUseProperty{funding-format}%
      \ccGetComp{FundingPreText}%
      \ccGetComp{FundingBlock}%
      \ccGetComp{FundingPostText}%
      \par
    \egroup
  }
  %% before the roman part of the title pages but after cover page
  \ccSetProperty{before-titlepage-roman}{%
    \setcounter{page}{1}%
    \def\thepage{\roman{page}}%
  }%
  \ccSetProperty{titlepage-i}{%
    \ifmonograph
      \ccUseComp{AuthorNameList}%
    \else
      \ccUseProperty{EditorNameList}%
    \fi%
    \vskip\baselineskip
    \bgroup
      \ccUseProperty{title-face}\ccUseComp{Title}%
    \egroup
  }%
  \ccSetProperty{titlepage-ii}{%
    \ccGetComp{Editorial}%
    \ccGetComp{SeriesNote}%
    \ccGetComp{GenericMetaBlock}%
    \vfill
    \ccUseProperty{bio-output}%
  }%
  \ccSetProperty{titlepage-iii}{%
    \ifmonograph
      \ccUseComp{AuthorNameList}%
    \else
      \ccUseProperty{EditorNameList}%
    \fi%
    \par
    \ccUseProperty{title-format}
    \ccGetComp{Edition}%
    \ccGetComp{EditionNote}%
    \vfill
    \clearpage
  }%
  \ccSetProperty{titlepage-iv}{%
    \ccGetComp{Dedication}%   Dedication
    \ccGetComp{Acknowledgements}%   Dedication
    \ccUseProperty{imprint-format}%
    \ccUseProperty{funding-block}%
    \vfill
    \bgroup
      \ccUseProperty{imprint-face}%
      \ccIfComp{Biblio}{{\bfseries\ccGetComp{BiblioTitle}}\ccGetComp{Biblio}}{}%
      \ccUseProperty{imprint-sep}%
      \ccUseProperty{imprint}%
    \egroup
    \clearpage
  }%
  %% predefined face and format Properties
  \ccSetProperty{title-face}{\Huge\sffamily\bfseries}%
  \ccSetProperty{title-format}{%
    \bgroup
      \ccVstructStart{Title}% PDF 2.0
      \ccUseProperty{title-face}%
      \ccUseComp{Title}\par
      \ccVstructEnd{Title}% PDF 2.0
    \egroup
    \ccWhenComp{Subtitle}{\ccUseProperty{subtitle-format}}%
    \ccWhenComp{TitleNote}{\ccUseProperty{title-note-format}}%
    \ccGetComp{Statement}%
    \vskip\baselineskip
  }%
  \ccSetProperty{title-note-face}{\large\sffamily}%
  \ccSetProperty{title-note-format}{%
    \bgroup
      \ccUseProperty{title-note-face}%
      \ccUseComp{TitleNote}%
    \egroup
    \par
  }%
  \ccSetProperty{subtitle-face}{\Large\sffamily\bfseries}%
  \ccSetProperty{subtitle-format}{%
    \bgroup
      \ccUseProperty{subtitle-face}%
      \ccUseComp{Subtitle}%
    \egroup
    \par
  }%
  %% Imprint
  \ccSetProperty{imprint-face}{\footnotesize}%
  \ccSetProperty{imprint-sep}{\ifhmode\par\fi\addvspace{\baselineskip}}%
  \ccSetProperty{imprint}{%
    \ccUseProperty{publisher}%
    \ccGetComp{Qualification}%%
    \ccGetComp{Conversion}%%
    \ccGetComp{CoverDesign}%%
    \ccGetComp{CoverImage}%%
    \ccGetComp{Lectorate}%%
    \ccGetComp{QA}%%
    \ccGetComp{Translator}%%
    \ccGetComp{Appraiser}%%
    \ccGetComp{Discussion}%%
    \ccGetComp{Typesetter}%%
    \ccGetComp{Print}%%
    \ccGetComp{UsedFont}%%
    \ccGetComp{DOI}%%
    \ccGetComp{Keywords}%%
    \ccUseProperty{imprint-sep}%
    \ccGetComp{ISBNPreText}%
    \ccGetComp{ISBN}%
    \ccGetComp{EpubPreText}%
    \ccGetComp{EISBN}%
    \ccGetComp{EpubISBN}%
    \ccUseProperty{imprint-sep}%
    \ccGetComp{EnvDisclaimer}%
  }%
  \ccSetProperty{journal-meta}{%
    \ccUseLabeledComp{Submitted}%
    \ccUseLabeledComp{Received}%
    \ccUseLabeledComp{Revised}%
    \ccUseLabeledComp{Accepted}%
    \ccUseLabeledComp{Published}%
    \ccUseLabeledComp{Copyright}%
    \ccUseLabeledComp{COIStatement}%
    \ccUseLabeledComp{Keywords}
  }%
  \ccSetProperty{licence}{%
    \ccIfComp{LicenceLogo}{\includegraphics{\ccUseComp{LicenceLogo}}\par}{}%
    \ccGetComp{LicenceText}%
  }%
  \ccSetProperty{copyright}{%
    \ccIfComp{Copyright}
      {\ccUseComp{Copyright}\par}
      {\textcopyright\space\ccUseComp{Year}\space\ccUseComp{Publisher},\space\ccUseComp{PubPlace}\par}%
    }%
  \ccSetProperty{publisher}{%
    \ccGetComp{PubDivInfo}%
    \ccUseProperty{copyright}%
    \ccGetComp{PubNote}%
    \ccGetComp{PubWeb}%
  }%
  % Name Formats
  \ccSetProperty{counted-meta-sep}{\ifnum\ccCurCount<\ccTotalCount\relax\vskip\baselineskip\fi}% separator between multiple instances of the same meta datum
  \ccSetProperty{counted-name-sep}{% Separator between multiple names; titlepage-specific override of the same Property in coco-meta!
    \ifnum\ccTotalCount>1\relax
      \ifnum\ccCurCount<\ccTotalCount\relax
        \ifnum\ccCurCount<\numexpr\ccTotalCount-1\relax
          \ccUseProperty{name-sep}%
        \else
          \ccUseProperty{name-and}%
        \fi
      \fi
    \fi
  }%
  % Aliasses for different Roles, see coco-meta.sty for the actual Property values:
  %% editors:
  \ccPropertyLet{editor-cite-name-format}                   {role-cite-name-format}%
  \ccPropertyLet{editor-short-cite-name-format}             {role-short-cite-name-format}%
  \ccPropertyLet{editor-full-name-format}                   {role-full-name-format}%
  \ccPropertyLet{editor-pdfinfo-name-format}                {role-pdfinfo-name-format}%
  \ccPropertyLet{editor-correspondence-as-format}           {role-correspondence-string-format}%
  %
  \ccPropertyLet{editor-list-print-format}                  {role-block-print-format}%
  \ccPropertyLet{editor-list-cite-format}                   {role-block-cite-format}%
  \ccPropertyLet{editor-list-short-cite-format}             {role-block-short-cite-format}%
  \ccPropertyLet{editor-list-pdfinfo-format}                {role-block-pdfinfo-format}%
  \ccPropertyLet{editor-list-correspondence-format}         {role-block-correspondence-format}%
  %% series-editors:
  \ccPropertyLet{series-editor-cite-name-format}            {role-cite-name-format}%
  \ccPropertyLet{series-editor-short-cite-name-format}      {role-short-cite-name-format}%
  \ccPropertyLet{series-editor-full-name-format}            {role-full-name-format}%
  \ccPropertyLet{series-editor-pdfinfo-name-format}         {role-pdfinfo-name-format}%
  \ccPropertyLet{series-editor-correspondence-as-format}    {role-correspondence-as-format}%
  %
  \ccPropertyLet{series-editor-list-print-format}           {role-block-print-format}%
  \ccPropertyLet{series-editor-list-cite-format}            {role-block-cite-format}%
  \ccPropertyLet{series-editor-list-short-cite-format}      {role-block-short-cite-format}%
  \ccPropertyLet{series-editor-list-pdfinfo-format}         {role-block-pdfinfo-format}%
  \ccPropertyLet{series-editor-list-correspondence-format}  {role-block-correspondence-format}%
  %% name Separators
  \ccSetProperty{editor-suffix-sgl}{(Ed.)}%
  \ccSetProperty{editor-suffix-pl}{(Eds.)}%
  \ccSetProperty{editor-suffix}{%
    \space
    \ifnum\ccTotalCount=\@ne\relax
      \ccUseProperty{editor-suffix-sgl}%
    \else
      \ccUseProperty{editor-suffix-pl}%
    \fi
  }%
  % Biography
  % those Properties control how (Role specific) Biography Blocks are formatted, i.e. the list of all Biographies of a specific Role:
  \ccSetProperty{role-bio-block-face}{}% face for the entire, role-specific, Biography Block
  \ccSetProperty{role-bio-block-format}{{\ccUseProperty{role-bio-block-face}\ccUseComp{Biography}}\par}% Format of the whole, Role specific, Biography Block
  \ccPropertyLet{author-bio-block-format}        {role-bio-block-format}% Override for single author meta info
  \ccPropertyLet{editor-bio-block-format}        {role-bio-block-format}% Override for single editor meta info
  \ccPropertyLet{series-editor-bio-block-format} {role-bio-block-format}% Override for single series editor meta info
  % those Properties control how a (Role specific) Biography is formatted:
  \ccSetProperty{role-biography-format}{{\bfseries\ccUseComp{FullName}:}\space\ccUseComp{Bio}\par}% Format of a single entry in the Role specific Biography
  \ccPropertyLet{author-biography-format}        {role-biography-format}% Override for single author meta info
  \ccPropertyLet{editor-biography-format}        {role-biography-format}% Override for single editor meta info
  \ccPropertyLet{series-editor-biography-format} {role-biography-format}% Override for single series editor meta info
  \ccSetProperty{bio-output-format}{%
    \ccGetComp{AuthorBioBlock}%
    \ccGetComp{EditorBioBlock}%
    \ccGetComp{SeriesEditorBioBlock}%
  }%
  % Running headers
  \ccSetProperty{run-book-title}{%
    \ccIfComp{RunTitle}
      {\ccUseComp{RunTitle}}
      {\ccIfComp{ShortTitle}
        {\ccUseComp{ShortTitle}}
        {\ccIfComp{Title}{\ccUseComp{Title}}{No title given!}}}%
  }%
  \ccSetProperty{run-book-name}{%
    \ccIfComp{RunNames}
      {\ccUseComp{RunNames}}
      {\ifmonograph
         \ccIfComp{AuthorNameList}
           {\ccUseComp{AuthorNameList}}
           {no author defined!}%
       \else
         \ccIfComp{EditorNameList}
           {\ccUseComp{EditorNameList}}
           {no editor defined!}%
       \fi}%
  }%
}
%    \end{macrocode}
%
%
% \section{Accessibility Features}
%
% \subsection{Output Intent and ICC Profiles}
%
%    \begin{macrocode}
\ccWhenAlly{%
%    \end{macrocode}
% First, we declare some Components that represent the three necessary
% parameters for the output intent:
%    \begin{macrocode}
  \ccAddToType{Components}{titlepage}{%
%    \end{macrocode}
% \begin{ComponentDoc}{titlepage}{IccProfileFile} holds the path
%   (relative to the main tex file) and name of the .icc file.
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccProfileFile}
%    \end{macrocode}
% \end{ComponentDoc}
% \begin{ComponentDoc}{titlepage}{IccComponents} holds the number of
%   components in the color profile
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccComponents}
%    \end{macrocode}
% \end{ComponentDoc}
% \begin{ComponentDoc}{titlepage}{IccIdentifier} holds the identifier
%   of the color profile
%    \begin{macrocode}
    \ccDeclareGlobalComponent{IccIdentifier}}
%    \end{macrocode}
% \end{ComponentDoc}
% The Components are composed via a new Property
% \lstinline{output-intent} which we add to \lstinline{coco-title}'s
% Properties list (\lstinline{\cc@color@enc} is set via the
% \lstinline{coco-common} module):
%    \begin{macrocode}
  \ifdefstring\cc@color@enc{cmyk}
    {\def\cca@default@icc@comp{4}}
    {\def\cca@default@icc@comp{3}}
  \ifdefstring\cc@color@enc{cmyk}
    {\def\cca@default@icc@iden{Coated FOGRA39}}
    {\def\cca@default@icc@iden{sRGB IEC61966-2.1}}
  \ccAddToType{Properties}{titlepage}{%
%    \end{macrocode}
% \begin{PropertyDoc}{titlepage}{output-intent} sends the output
%   intent information to the ltpdfa package. It must contain of three
%   data fields:
%   \begin{description}
%   \item[profile] with the name of the to-be-embedded
%     \lstinline{.icc} file,
%   \item[componetns] with an integer telling the pdfwriter how many
%     values are coded by each color (e.g., \lstinline{4} for cmyk,
%     \lstinline{3} for rgb)
%   \item[identifier] with the identifying name of the profile (e.g.,
%     \lstinline{Coated FOGRA39} for the included cmyk
%     profile, etc.)
% \end{description}
%    \begin{macrocode}
    \ccSetProperty{output-intent}{%
      profile=\ccIfComp{IccProfileFile}{\ccUseComp{IccProfileFile}}{suppl/\cc@color@enc.icc};%
      components=\ccIfComp{IccComponents}{\ccUseComp{IccComponents}}{\cca@default@icc@comp};%
      identifier=\ccIfComp{IccIdentifier}{\ccUseComp{IccIdentifier}}{\cca@default@icc@iden}%
    }}
%    \end{macrocode}
% \end{PropertyDoc}
% The Component Handler which links the new Components to that
% Property is added to titlepage's \lstinline{document-meta-hook}:
%    \begin{macrocode}
  \ccAddToHook[titlepage]{document-meta-hook}{\edef\x{\noexpand\ccaAddToConfig{intent}{\ccUseProperty{output-intent}}}\x}
%    \end{macrocode}
%
% \subsection{Encoding of the PDF-A Conformance}
% As before, the parameters for the PDF conformity level are encoded
% via specific Components in the titlepage Container:
%    \begin{macrocode}
\ccAddToType{Components}{titlepage}{%
%    \end{macrocode}
%
% \begin{ComponentDoc}{titlepage}{PDFAID} defines the PDF/A ID (Default: 2,
%   meaning: PDF/A-2)
%    \begin{macrocode}
  \ccDeclareGlobalComponent[2]{PDFAID}%
%    \end{macrocode}
% \end{ComponentDoc}
% \begin{ComponentDoc}{titlepage}{PDFALevel} defines the PDF/A Level (Default: A,
%   meaning PDF/A-2A)
%    \begin{macrocode}
  \ccDeclareGlobalComponent[A]{PDFALevel}%
%    \end{macrocode}
% \end{ComponentDoc}
% \begin{ComponentDoc}{titlepage}{PDFUAID} defines the PDF standard (Default: 1,
%   meaning: PDF/UA-1). Use \lstinline|\ccPrefix PDFUAID{}| (i.e. set it to
%   nothing) to make the document conform to the PDF/A standard, but
%   \textbf{not} to the PDF/UA standard.
%    \begin{macrocode}
  \ccDeclareGlobalComponent[1]{PDFUAID}}%
%    \end{macrocode}
% \end{ComponentDoc}
% The checking if the values are valid, and the separation of the
% various parts of the standard is done via a lua script in the
% \lstinline{document-meta-hook}. The \lstinline{conformance}
% DocumentInfo nodes are only written, if \textit{neither}
% \lstinline{PDFAID}, \textit{nor} \lstinline{PDFALevel} is empty.
%    \begin{macrocode}
\ccAddToHook[titlepage]{document-meta-hook}{%
  \ccIfCompEmpty{PDFAID}{}{\ccIfCompEmpty{PDFALevel}{}{%
      \edef\x{\noexpand\ccaSetDocinfo{conformance}{%
          pdfaid=\ccUseComp{PDFAID};%
          level=\ccUseComp{PDFALevel}%
          \ccIfCompEmpty{PDFUAID}{}{;pdfuaid=\ccUseComp{PDFUAID}}}}%
      \x}}}
%    \end{macrocode}
%
%
% \subsection{Titlepage Specific Role Maps}
%
% According to the ``Tagged PDF Best Practice Guide'' page by the PDF
% Association, the main title of the document should be mapped to
% \lstinline{<P>} until the more appropriate \lstinline{<Title>} tag
% becomes widely accepted with the PDF 2.0 Standard.
%    \begin{macrocode}
\ccaAddRolemap{Title}{H1}
\ccaAddRolemap{Titlepage}{Div}
%    \end{macrocode}
% 
%    \begin{macrocode}
}%ccWhenAlly
%    \end{macrocode}
%
%
%    \begin{macrocode}[gobble=1]
%</title>
%    \end{macrocode}
